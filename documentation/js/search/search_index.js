var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.433,1,1.73]],["body/components/AppComponent.html",[0,2.064,1,2.044,2,2.407,3,0.192,4,0.209,5,1.329,6,1.121,7,1.329,8,0.128,9,1.663,10,0.451,11,2.86,12,2.743,13,3.449,14,1.269,15,2.632,16,1.329,17,3.487,18,1.441,19,2.341,20,3.104,21,0.283,22,1.263,23,3.651,24,1.854,25,5.119,26,2.386,27,5.119,28,4.807,29,6.284,30,6.532,31,3.188,32,3.794,33,2.114,34,1.06,35,3.86,36,2.114,37,2.632,38,3,39,2.632,40,1.504,41,1.952,42,1.965,43,3,44,1.379,45,1.625,46,5.74,47,3.297,48,3.909,49,1.605,50,3.104,51,1.654,52,0.601,53,2.114,54,0.84,55,0.023,56,1.301,57,0.915,58,1.061,59,3.104,60,2.644,61,2.341,62,1.541,63,1.441,64,1.654,65,1.441,66,2.644,67,3.721,68,3.256,69,1.919,70,1.952,71,3.104,72,3.104,73,3.104,74,3.104,75,1.8,76,2.644,77,3.104,78,3.104,79,3.104,80,1.654,81,2.341,82,2.114,83,3.104,84,1.631,85,2.994,86,1.329,87,3.625,88,1.472,89,1.121,90,1.472,91,0.906,92,0.969,93,1.121,94,1.472,95,1.329,96,2.114,97,1.329,98,2.632,99,1.472,100,1.952,101,2.22,102,1.441,103,3.104,104,1.952,105,2.092,106,1.952,107,3.104,108,2.341,109,1.952,110,1.952,111,1.952,112,1.783,113,1.472,114,1.329,115,0.85,116,1.472,117,1.329,118,0.369,119,1.472,120,1.216,121,1.663,122,0.849,123,0.849,124,1.04,125,0.707,126,1.329,127,0.906,128,0.969,129,1.329,130,1.329,131,1.952,132,1.663,133,1.329,134,1.663,135,2.341,136,1.952,137,1.663,138,1.952,139,1.952,140,1.472,141,1.663,142,1.663,143,1.329,144,0.969,145,1.663,146,0.209,147,1.453,148,1.952,149,2.059,150,1.472,151,1.472,152,1.952,153,1.663,154,1.952,155,1.4,156,1.4,157,1,158,1.952,159,1.952,160,1.952,161,1.329,162,1.472,163,1.952,164,1.472,165,1.952,166,1.952,167,0.751,168,3.104,169,1.952,170,1.663,171,1.04,172,1.952,173,3.104,174,1.952,175,1.216,176,1.952,177,1.952,178,1.952,179,1.952,180,1.952,181,1.952,182,1.952,183,1.663,184,1.952,185,1.952,186,1.663,187,1.952,188,1.952,189,1.952,190,1.952,191,1.952,192,0.906,193,1.933,194,2.114,195,1.329,196,3,197,1.329,198,1.329,199,1.329,200,1.329,201,0.849,202,0.906,203,1.329,204,1.329,205,0.006,206,0.01,207,0.006]],["title/interceptors/AppHttpInterceptor.html",[208,2.141,209,1.851]],["body/interceptors/AppHttpInterceptor.html",[3,0.382,4,0.416,8,0.255,10,0.564,14,1.588,21,0.564,24,1.407,34,1.754,40,1.327,45,1.873,49,1.312,52,0.605,54,1.391,55,0.023,56,1.391,57,0.799,58,1.237,84,1.181,105,2.504,115,0.885,118,0.735,122,1.691,125,1.407,146,0.416,147,1.391,157,2.051,170,3.309,205,0.012,206,0.016,207,0.012,209,3.04,210,2.646,211,3.309,212,4.617,213,4.375,214,3.499,215,3.874,216,4.375,217,4.337,218,3.499,219,4.34,220,3.886,221,3.886,222,3.886,223,5.031,224,4.802,225,3.886,226,3.499,227,5.137,228,2.95,229,2.95,230,3.2,231,3.309,232,3.2,233,1.929,234,1.237,235,5.137,236,2.42,237,3.874,238,3.886,239,2.232,240,3.886,241,3.2,242,1.588,243,0.882,244,3.886,245,3.886,246,1.494]],["title/interceptors/AppHttpInterceptor-1.html",[208,1.814,209,1.568,247,2.382]],["body/interceptors/AppHttpInterceptor-1.html",[3,0.384,4,0.419,8,0.256,14,1.597,18,1.814,21,0.568,24,1.415,34,1.761,40,1.334,44,1.121,45,1.396,49,1.317,52,0.608,54,1.396,55,0.023,56,1.396,57,0.802,58,1.242,63,1.814,84,1.188,105,2.511,115,0.83,118,0.739,125,1.415,146,0.419,147,1.396,155,1.868,156,1.868,157,2.11,167,1.983,205,0.012,206,0.016,207,0.012,209,2.56,210,2.662,212,3.889,217,2.662,219,4.352,223,5.038,224,4.811,226,4.18,229,2.962,230,3.595,231,3.329,232,3.212,233,1.94,234,1.242,239,2.245,243,1.31,248,3.329,249,3.329,250,5.777,251,3.909,252,3.329,253,3.909,254,2.748,255,4.393,256,3.329,257,2.082,258,2.947,259,3.909,260,5.157,261,5.772,262,3.909,263,3.909,264,2.082,265,2.662,266,1.259,267,2.245,268,3.909,269,3.909]],["title/modules/AppModule.html",[270,1.433,271,2.322]],["body/modules/AppModule.html",[1,2.958,3,0.228,4,0.248,6,1.331,8,0.233,10,0.337,11,1.235,18,1.076,26,1.15,42,2.13,43,1.578,44,1.018,45,0.961,47,3.158,48,1.578,52,0.671,55,0.023,63,1.076,64,1.891,65,1.076,68,1.235,115,0.942,117,2.417,118,0.438,119,1.747,120,1.443,122,1.544,123,1.544,124,1.235,126,1.578,127,1.076,128,1.15,129,1.578,132,1.974,133,1.578,134,1.974,141,1.974,146,0.462,147,0.627,155,1.751,156,1.751,157,1.557,167,1.365,192,1.076,205,0.007,206,0.011,207,0.007,208,1.331,209,2.841,233,1.15,242,1.763,243,1.098,257,1.235,266,0.746,270,0.891,271,4.099,272,1.544,273,1.076,274,2.478,275,2.687,276,2.142,277,1.076,278,1.974,279,1.974,280,1.974,281,1.974,282,1.974,283,3.158,284,3.424,285,2.211,286,1.443,287,1.331,288,1.747,289,1.762,290,2.4,291,1.762,292,1.762,293,4.314,294,3.674,295,3.55,296,3.549,297,3.549,298,2.317,299,3.549,300,2.317,301,2.317,302,3.549,303,1.578,304,2.676,305,1.747,306,3.674,307,1.974,308,2.687,309,2.317,310,2.938,311,1.974,312,1.331,313,3.023,314,1.974,315,3.549,316,2.317,317,1.974,318,2.938,319,2.317,320,2.317,321,2.317,322,2.317,323,3.253,324,3.253,325,2.317,326,1.747,327,2.317,328,2.317,329,2.317,330,2.417,331,2.317,332,1.974,333,1.974,334,1.762,335,1.578,336,2.317,337,2.317,338,3.549,339,2.317,340,2.417,341,1.443,342,1.235,343,1.235,344,1.008,345,1.443,346,1.331,347,1.443,348,1.747,349,1.747,350,2.298,351,1.974,352,2.317,353,2.317,354,1.974,355,1.974,356,1.443,357,1.974,358,2.676,359,1.974,360,2.676,361,3.023,362,1.974,363,2.317,364,2.317,365,2.317,366,2.317,367,2.317,368,2.317,369,2.317,370,1.762,371,2.317,372,2.317,373,2.317,374,1.891,375,1.076,376,2.317,377,2.317,378,2.317,379,1.443,380,2.317,381,1.974,382,4.314,383,2.841,384,3.674,385,1.747,386,3.549,387,1.15,388,2.317,389,3.674,390,2.417,391,2.317,392,1.747,393,2.317,394,2.317,395,3.549,396,2.317,397,2.317,398,4.314,399,3.549,400,3.253,401,2.317,402,2.317,403,2.317,404,2.317,405,2.317,406,3.549,407,2.317,408,2.317,409,1.974,410,2.317,411,2.317]],["title/modules/AppRoutingModule.html",[270,1.433,283,2.141]],["body/modules/AppRoutingModule.html",[0,1.348,3,0.345,4,0.376,8,0.23,10,0.509,14,1.96,18,1.628,45,0.949,52,0.957,55,0.023,84,1.066,92,1.741,115,0.859,118,0.663,144,2.713,146,0.514,147,0.949,155,1.737,156,1.737,157,1.544,167,2.101,201,2.086,205,0.011,206,0.015,207,0.011,234,1.155,243,0.796,246,1.348,272,1.526,276,1.741,277,2.226,283,3.138,289,2.381,290,3.053,291,2.381,292,1.741,303,2.389,334,2.381,341,2.184,344,1.526,374,2.911,379,2.184,383,1.741,390,2.389,412,2.645,413,2.645,414,3.266,415,4.12,416,1.433,417,5.003,418,2.987,419,2.987,420,2.987,421,2.987,422,3.403,423,2.987,424,4.084,425,3.721,426,2.987,427,2.987,428,2.987,429,2.987,430,4.084,431,2.555,432,2.555,433,2.754,434,2.987,435,4.084,436,3.831,437,4.084,438,2.645,439,2.987,440,2.645,441,2.645,442,2.987,443,2.987,444,2.987,445,2.987,446,2.987,447,2.389,448,2.987,449,2.987,450,2.987,451,2.987,452,2.987,453,2.987,454,2.987,455,2.987]],["title/modules/AppServerModule.html",[270,1.433,456,2.539]],["body/modules/AppServerModule.html",[1,3.087,3,0.377,4,0.41,8,0.251,10,0.557,42,1.567,52,0.889,55,0.023,64,2.042,115,0.913,118,0.725,123,1.668,124,2.042,146,0.545,155,1.388,156,1.388,157,1.234,192,1.779,205,0.012,206,0.016,207,0.012,210,2.611,233,1.903,242,1.567,243,1.156,257,2.042,266,1.234,270,1.474,271,4.059,272,1.668,273,1.779,274,2.201,275,3.56,276,2.838,277,1.779,285,3.171,286,2.387,287,2.201,289,2.527,290,3.024,291,2.527,292,2.527,294,4.336,304,3.839,305,2.89,308,3.171,333,3.265,341,2.387,342,2.042,343,2.042,344,1.668,350,2.712,381,3.265,383,2.527,384,3.265,389,4.336,390,2.611,456,4.656,457,3.265,458,3.833,459,3.833,460,3.265,461,4.059,462,2.89,463,5.091,464,5.091,465,3.833,466,3.833,467,3.56,468,3.833,469,4.31,470,3.833,471,3.833,472,3.833]],["title/interfaces/ApplicationState.html",[370,1.851,473,1.069]],["body/interfaces/ApplicationState.html",[3,0.415,4,0.453,8,0.277,10,0.614,21,0.614,22,1.556,42,1.727,45,1.469,55,0.023,57,0.657,61,4.091,115,0.734,122,1.838,143,2.878,146,0.642,147,1.469,167,2.086,205,0.013,206,0.017,207,0.013,214,3.695,218,3.695,241,4.294,243,1.232,246,1.625,266,1.361,347,3.379,356,2.632,370,3.323,375,2.518,473,1.212,474,1.961,475,2.878,476,4.082,477,3.259,478,4.082,479,4.091,480,3.423,481,3.695,482,5.426,483,4.225,484,3.186,485,3.599,486,3.599,487,3.599,488,3.599,489,3.599,490,3.599,491,3.599,492,3.186,493,4.225]],["title/components/BaseComponent.html",[0,1.433,13,2.141]],["body/components/BaseComponent.html",[0,2.45,1,1.513,2,2.839,3,0.32,4,0.349,5,3.104,6,1.872,7,2.22,8,0.214,10,0.473,11,3.033,13,3.269,14,1.863,16,2.22,17,4.228,21,0.473,22,1.307,32,4.715,33,3.58,34,1.556,36,3.104,37,3.877,38,4.228,39,3.877,49,1.53,52,0.818,54,0.882,55,0.023,56,1.541,57,0.709,58,0.785,67,3.999,75,1.332,84,1.73,85,3.866,86,3.104,89,2.618,91,2.116,92,2.826,93,2.618,95,3.104,96,3.877,97,3.104,98,4.228,102,1.513,112,3.269,114,3.104,115,0.616,118,0.616,125,1.18,146,0.349,147,0.882,192,1.513,193,2.839,194,3.104,195,2.22,196,3.877,197,2.22,198,2.22,199,4.08,200,2.22,201,1.418,202,1.513,203,2.22,204,2.22,205,0.01,206,0.014,207,0.01,243,1.035,494,2.776,495,4.558,496,2.839,497,5.256,498,5.256,499,3.259,500,3.259,501,3.259,502,3.259,503,3.259,504,3.259,505,4.558,506,3.259,507,3.259,508,3.259,509,3.259,510,3.259,511,3.259]],["title/injectables/CustomSerializer.html",[234,0.898,425,2.539]],["body/injectables/CustomSerializer.html",[0,1.291,3,0.33,4,0.36,8,0.22,10,0.488,14,2.183,18,1.559,21,0.488,34,1.589,45,0.909,49,0.858,52,0.942,54,0.909,55,0.023,56,0.909,57,0.523,58,0.809,84,1.414,92,1.667,115,0.847,118,0.635,144,2.652,146,0.498,147,0.909,155,1.686,156,1.686,157,1.499,167,2.054,201,2.025,205,0.01,206,0.014,207,0.01,234,1.121,243,0.763,246,1.291,276,1.667,277,2.16,283,2.673,289,1.667,290,2.863,291,1.667,292,1.667,303,2.287,334,2.311,341,2.899,344,1.461,374,3.227,379,2.092,383,1.667,390,2.287,412,3.51,413,2.532,414,3.17,415,4.567,416,1.373,417,5.158,418,2.861,419,2.899,420,2.861,421,2.861,422,3.772,423,2.861,424,4.549,425,3.928,426,4.912,427,3.964,428,3.964,429,2.861,430,3.964,431,2.48,432,2.48,433,2.673,434,2.861,435,3.964,436,3.772,437,3.964,438,2.532,439,2.861,440,2.532,441,2.532,442,2.861,443,2.861,444,2.861,445,2.861,446,2.861,447,2.287,448,2.861,449,2.861,450,2.861,451,2.861,452,2.861,453,2.861,454,2.861,455,2.861,512,1.667,513,3.359]],["title/injectables/EntitiesEffects.html",[234,0.898,514,2.539]],["body/injectables/EntitiesEffects.html",[3,0.331,4,0.36,8,0.221,10,0.489,21,0.489,22,1.336,24,1.688,40,1.591,45,1.261,49,1.19,51,2.483,52,0.832,54,0.911,55,0.023,56,0.911,57,0.725,58,0.81,65,2.163,75,1.375,91,2.679,93,2.676,102,1.562,105,2.511,115,0.899,118,0.636,125,1.218,146,0.36,149,2.483,205,0.01,206,0.014,207,0.01,226,3.641,228,3.601,233,1.67,234,1.122,236,2.095,243,1.459,246,1.792,265,3.174,312,1.932,342,2.483,479,3.514,480,2.313,512,1.67,514,3.931,515,2.865,516,3.969,517,3.969,518,3.174,519,2.865,520,6.06,521,2.865,522,3.692,523,3.364,524,4.031,525,3.969,526,4.66,527,6.06,528,4.66,529,4.66,530,4.66,531,5.346,532,4.66,533,2.902,534,4.66,535,4.66,536,4.66,537,3.514,538,3.364,539,3.174,540,5.346,541,2.865,542,3.364,543,2.865,544,1.792,545,2.865,546,4.66,547,3.364,548,2.537,549,2.537]],["title/injectables/EntitiesService.html",[234,0.898,522,2.141]],["body/injectables/EntitiesService.html",[3,0.429,4,0.467,8,0.286,10,0.634,21,0.634,24,1.581,34,1.891,40,1.49,49,1.415,52,0.679,54,1.182,55,0.023,56,1.182,57,0.679,58,1.051,69,2.75,80,2.951,84,1.326,105,2.648,115,0.893,118,0.826,125,1.581,128,2.167,129,2.973,146,0.467,205,0.014,206,0.017,207,0.014,228,3.181,233,2.167,234,1.334,239,2.507,243,1.258,265,4.144,295,4.359,345,3.986,496,3.45,512,2.167,519,2.75,522,3.676,544,2.326,550,3.718,551,3.773,552,5.539,553,6.4,554,3.718,555,4.365,556,4.365,557,3.718,558,4.365,559,4.365,560,4.365,561,3.718,562,3.718]],["title/interfaces/EntitiesState.html",[387,1.851,473,1.069]],["body/interfaces/EntitiesState.html",[3,0.365,4,0.398,8,0.244,12,3.107,21,0.54,22,1.431,42,2.039,44,1.8,55,0.023,57,0.976,115,0.848,118,0.703,122,1.618,146,0.718,167,2.413,205,0.012,206,0.015,207,0.012,228,2.135,242,1.519,243,1.278,246,1.918,264,3.205,266,1.197,375,2.315,387,3.115,473,1.066,474,1.726,477,3.113,478,3.834,480,3.115,481,3.397,492,2.803,519,2.987,533,4.178,543,3.167,544,2.999,545,3.167,563,2.532,564,4.795,565,4.11,566,4.249,567,4.249,568,3.761,569,3.761,570,2.803,571,3.718,572,3.167,573,3.167,574,3.167,575,2.316,576,3.167,577,2.532,578,2.803,579,2.803,580,3.167,581,2.532,582,3.167,583,3.167,584,3.167,585,3.167,586,3.167,587,3.718,588,2.803,589,2.803,590,2.803,591,3.167,592,2.803,593,2.803,594,3.167]],["title/interfaces/EntityInterface.html",[473,1.069,544,1.986]],["body/interfaces/EntityInterface.html",[3,0.471,4,0.513,8,0.314,21,0.695,22,1.683,44,2.105,55,0.022,57,1.075,146,0.513,205,0.015,206,0.018,207,0.015,473,1.373,474,2.222,544,3.126,595,4.077,596,4.119,597,4.119,598,4.119,599,4.119,600,4.119,601,3.799]],["title/modules/ErrorModule.html",[270,1.433,284,2.322]],["body/modules/ErrorModule.html",[3,0.444,4,0.483,8,0.296,10,0.656,52,0.962,55,0.023,92,2.241,115,0.876,118,0.854,127,2.095,146,0.483,155,1.635,156,1.635,157,1.454,192,2.095,201,2.962,205,0.014,206,0.018,207,0.014,270,1.736,272,1.964,273,2.095,274,3.549,275,2.812,276,2.809,277,2.095,284,4.351,285,3.524,286,2.812,287,2.593,289,2.809,290,3.216,291,2.809,292,2.809,602,3.845,603,3.845,604,3.845,605,3.91,606,4.514,607,4.266,608,4.66,609,4.819,610,3.845]],["title/components/ErrorPageComponent.html",[0,1.433,201,1.622]],["body/components/ErrorPageComponent.html",[0,2.356,1,1.323,2,3.04,3,0.28,4,0.305,5,1.942,6,1.637,7,1.942,8,0.187,10,0.414,11,2.207,12,3.544,13,3.824,14,1.693,15,3.324,16,1.942,17,3.649,19,3.124,21,0.414,22,1.703,23,2.803,24,1.032,31,3.986,32,4.275,33,2.822,34,1.415,35,4.04,36,2.822,37,3.324,38,3.649,39,3.324,40,1.829,42,1.693,48,3.876,49,1.603,51,2.854,52,0.834,53,2.822,54,1.121,55,0.023,56,1.54,57,0.885,58,0.998,62,2.66,63,1.323,67,3.268,68,2.6,69,1.415,75,1.165,80,2.207,81,3.124,82,3.649,84,1.729,85,3.544,86,1.942,87,4.291,88,2.15,89,1.637,90,2.15,91,1.323,92,1.415,93,1.637,94,2.15,95,1.942,96,2.822,97,1.942,98,3.324,99,2.15,102,1.323,112,2.38,113,2.15,114,1.942,115,0.724,118,0.539,123,1.24,124,1.519,146,0.305,147,0.772,149,2.207,151,2.15,192,1.323,193,3.04,194,2.822,195,1.942,196,3.649,197,1.942,198,1.942,199,1.942,200,1.942,201,2.331,202,1.323,203,1.942,204,1.942,205,0.009,206,0.013,207,0.009,254,1.519,257,1.519,447,2.822,581,4.044,611,4.563,612,1.942,613,3.529,614,2.851,615,3.344,616,2.851,617,2.851,618,3.529,619,3.529,620,3.529,621,3.124,622,3.529,623,3.529,624,3.529,625,3.529,626,2.851,627,1.942,628,2.851,629,2.851,630,2.428,631,1.776,632,4.143,633,4.143]],["title/classes/GeneralHelper.html",[52,0.58,130,2.539]],["body/classes/GeneralHelper.html",[3,0.314,4,0.342,8,0.21,10,0.755,21,0.464,22,1.289,34,1.535,44,1.855,49,1.328,52,0.7,54,1.408,55,0.023,56,1.408,57,0.7,58,1.083,75,1.306,80,3.447,84,1.366,91,2.62,102,1.483,112,3.241,130,3.062,146,0.342,147,1.78,167,1.229,205,0.01,206,0.014,207,0.01,243,1.439,247,3.39,264,1.703,266,1.448,343,3.447,392,5.128,627,2.177,634,2.41,635,2.722,636,3.196,637,3.196,638,5.601,639,5.947,640,5.644,641,6.801,642,3.196,643,4.496,644,4.496,645,5.201,646,4.496,647,6.98,648,3.196,649,4.496,650,3.196,651,5.644,652,3.196,653,3.196,654,5.201,655,3.196,656,3.196,657,3.196,658,2.722,659,3.196,660,3.39,661,3.196,662,3.196,663,3.196,664,2.722,665,4.496,666,4.496,667,4.496,668,4.496,669,2.722,670,3.196,671,3.196]],["title/injectables/GoogleAnalyticsEffects.html",[234,0.898,335,2.539]],["body/injectables/GoogleAnalyticsEffects.html",[3,0.339,4,0.37,8,0.226,10,0.501,21,0.501,22,1.36,24,1.718,40,1.992,42,1.939,43,3.691,44,1.554,49,1.211,51,2.527,52,0.843,53,3.231,54,0.934,55,0.023,56,0.934,57,0.908,58,0.832,60,2.94,61,2.603,62,2.69,63,1.602,64,1.839,67,1.983,68,1.839,75,1.411,102,1.602,105,2.358,115,0.854,116,4.086,117,2.351,118,0.653,125,1.25,126,2.351,127,1.602,146,0.37,147,1.284,149,3.109,150,2.603,164,3.577,205,0.011,206,0.015,207,0.011,234,1.405,236,2.15,242,1.939,246,1.824,254,2.527,312,1.983,335,3.231,416,1.411,512,1.714,517,4.04,518,3.231,524,4.086,537,3.577,539,3.231,672,4.616,673,2.94,674,5.835,675,6.116,676,2.94,677,3.642,678,3.452,679,4.744,680,4.744,681,4.4,682,4.97,683,6.473,684,4.04,685,3.974,686,4.744,687,4.744,688,4.744,689,4.04,690,3.452,691,4.744,692,4.744,693,4.04,694,3.452,695,2.603]],["title/modules/HomeModule.html",[270,1.433,696,2.539]],["body/modules/HomeModule.html",[3,0.385,4,0.419,8,0.257,10,0.569,52,0.899,55,0.023,92,1.944,115,0.951,118,0.741,122,1.704,123,1.704,127,1.818,146,0.419,155,1.418,156,1.418,157,1.261,192,1.818,202,3.043,205,0.012,206,0.016,207,0.012,270,1.506,272,1.704,273,1.818,274,3.318,275,2.439,276,2.868,277,1.818,285,3.216,286,2.439,287,2.249,289,2.564,290,3.049,291,2.564,292,2.564,311,3.336,312,2.249,314,3.336,334,1.944,340,3.517,375,1.818,514,2.667,522,3.766,601,2.249,605,3.766,607,3.894,608,4.356,609,4.398,610,3.336,696,4.788,697,3.336,698,3.336,699,3.336,700,3.336,701,4.084,702,3.916,703,3.916,704,3.916,705,3.916,706,3.916,707,3.916,708,3.916,709,3.916,710,3.916,711,3.916,712,3.916]],["title/components/HomePageComponent.html",[0,1.433,202,1.73]],["body/components/HomePageComponent.html",[0,2.225,1,1.111,2,2.74,3,0.235,4,0.256,5,1.63,6,1.374,7,1.63,8,0.157,10,0.639,11,1.938,12,3.293,13,3.687,14,1.487,15,2.997,16,1.63,17,3.348,19,2.743,21,0.348,22,1.597,24,1.593,31,3.061,32,4.061,33,2.477,34,1.242,35,3.706,36,2.477,37,2.997,38,3.348,39,2.997,40,1.678,42,1.487,45,1.566,49,1.56,51,2.619,52,0.765,53,2.477,54,0.985,55,0.023,56,1.431,57,0.9,58,0.876,62,2.184,63,1.111,65,1.688,67,3.036,68,2.344,69,1.806,75,0.978,80,1.938,81,2.743,82,3.348,84,1.607,85,3.293,86,1.63,87,3.987,88,1.804,89,1.374,90,1.804,91,1.111,92,1.188,93,1.374,94,1.804,95,1.63,96,2.477,97,1.63,98,2.997,99,1.804,102,2.042,105,2.3,112,2.089,113,1.804,114,1.63,115,0.826,118,0.453,121,2.038,122,1.041,125,0.867,146,0.256,147,0.985,149,2.817,151,1.804,153,2.038,186,2.038,192,1.111,193,3.061,194,2.477,195,1.63,196,3.348,197,1.63,198,1.63,199,1.63,200,1.63,201,1.041,202,2.282,203,1.63,204,1.63,205,0.007,206,0.011,207,0.007,254,1.938,257,1.275,310,1.63,342,1.275,519,3.032,544,2.817,574,3.098,575,2.265,596,2.265,597,2.265,598,2.265,599,2.265,600,2.265,612,1.63,613,3.098,615,3.373,618,3.098,619,3.098,620,3.098,621,2.743,622,3.098,623,3.098,624,3.098,625,3.098,627,1.63,631,1.49,713,4.503,714,5.287,715,2.393,716,4.915,717,3.637,718,3.637,719,2.393,720,2.393,721,3.637,722,2.393,723,2.393,724,2.393,725,2.393,726,3.637,727,2.393,728,2.393,729,2.393,730,2.393,731,2.393,732,4.915,733,3.637,734,3.098,735,4.915,736,3.637,737,3.637,738,3.637,739,3.637]],["title/modules/HomeRoutingModule.html",[270,1.433,701,2.322]],["body/modules/HomeRoutingModule.html",[0,1.863,3,0.476,4,0.519,8,0.318,10,0.704,52,0.993,55,0.023,115,0.863,118,0.916,146,0.519,155,1.755,156,1.755,157,1.56,167,1.863,202,2.744,205,0.015,206,0.018,207,0.015,272,2.108,277,2.249,289,2.935,290,3.297,291,2.935,292,2.406,334,3.167,414,4.026,416,1.98,436,3.018,701,3.682,740,4.846,741,4.846,742,4.846,743,4.846,744,4.846]],["title/guards/LanguageGuard.html",[419,2.322,745,2.539]],["body/guards/LanguageGuard.html",[3,0.399,4,0.435,8,0.266,10,0.768,14,1.66,18,1.885,21,0.59,24,1.471,34,1.805,40,1.386,49,1.351,52,0.632,54,1.431,55,0.023,56,1.431,57,0.823,58,1.274,84,1.234,115,0.795,118,0.768,144,2.625,146,0.435,147,1.431,157,1.703,205,0.013,206,0.016,207,0.013,234,1.274,239,2.332,242,2.403,243,1.531,258,3.062,343,2.817,344,2.71,374,2.164,415,3.062,416,1.66,419,3.293,441,4.697,447,3.602,478,4.243,677,3.528,745,3.602,746,4.061,747,5.008,748,3.459,749,4.504,750,5.288,751,4.061,752,4.061,753,5.288,754,6.622,755,4.061,756,5.288,757,6.459,758,3.062,759,3.062,760,4.061,761,4.061,762,4.061]],["title/injectables/LocalStorageService.html",[234,0.898,318,2.539]],["body/injectables/LocalStorageService.html",[3,0.356,4,0.388,8,0.237,10,0.807,18,1.681,21,0.526,22,1.406,23,3.191,34,1.674,40,1.237,43,4.055,44,1.96,45,1.88,49,1.52,52,0.564,54,1.504,55,0.023,56,1.504,57,0.926,58,1.338,69,2.434,84,1.49,85,3.053,115,0.663,116,2.732,117,2.467,118,0.685,126,2.467,127,1.681,146,0.388,147,1.504,150,2.732,155,1.312,156,1.312,157,1.167,164,3.696,205,0.011,206,0.015,207,0.011,229,2.815,234,1.181,243,1.261,258,2.732,318,4.055,343,2.612,350,3.172,360,4.834,477,2.763,512,1.798,551,3.339,676,3.085,763,5.298,764,3.085,765,3.696,766,5.953,767,5.953,768,3.623,769,4.902,770,3.623,771,4.902,772,5.07,773,4.367,774,4.902,775,3.623,776,4.902,777,4.902,778,4.175,779,3.623,780,3.623,781,3.623,782,3.623,783,3.623,784,3.623]],["title/interfaces/MockActiveStateSnapshot.html",[473,1.069,785,2.539]],["body/interfaces/MockActiveStateSnapshot.html",[3,0.281,4,0.306,8,0.187,18,1.325,21,0.415,22,1.19,26,1.417,44,0.819,45,0.773,55,0.023,57,0.834,58,1.291,65,1.325,91,1.325,115,0.386,144,2.425,146,0.523,167,1.098,175,1.778,205,0.009,206,0.013,207,0.009,241,1.778,242,1.167,246,1.595,264,2.856,266,0.919,267,1.64,344,1.242,346,1.64,370,1.417,374,1.521,375,1.325,387,1.417,416,1.167,431,2.602,432,3.034,433,3.945,473,1.19,474,1.325,477,3.018,519,2.059,533,1.778,565,1.778,596,1.778,597,1.778,598,1.778,599,1.778,600,1.778,601,1.64,615,2.21,677,3.346,785,4.046,786,1.778,787,1.945,788,4.566,789,4.735,790,1.945,791,2.432,792,1.945,793,3.683,794,3.683,795,3.683,796,3.683,797,3.683,798,3.683,799,2.153,800,2.153,801,2.153,802,2.153,803,2.153,804,2.153,805,3.127,806,2.153,807,2.153,808,3.683,809,2.153,810,2.153,811,2.153,812,2.153,813,2.153,814,2.153,815,2.153,816,2.153,817,2.153,818,2.153,819,2.153,820,2.153,821,2.153,822,2.153,823,2.153,824,3.127,825,2.153,826,2.153,827,2.153,828,2.153,829,2.153,830,2.153,831,2.153,832,2.153,833,2.153,834,2.153,835,2.153,836,3.127,837,2.153,838,2.153,839,2.153,840,2.153,841,2.153,842,2.153,843,2.153,844,2.153,845,2.153,846,2.153,847,2.153,848,2.153,849,2.153,850,2.153,851,2.153,852,2.153,853,2.153,854,2.153,855,2.153,856,2.153,857,2.153,858,2.153,859,2.153,860,2.153,861,2.153,862,2.153,863,2.153,864,2.153,865,2.153,866,2.153,867,2.153,868,2.153,869,2.153,870,2.153,871,2.153,872,2.153,873,2.153,874,2.153,875,2.153,876,2.153,877,2.153,878,2.153,879,2.153,880,2.153,881,2.153,882,2.153,883,3.127,884,2.153,885,2.153,886,2.153,887,2.153,888,2.153,889,2.153,890,2.153,891,2.153,892,2.153,893,2.153,894,3.127,895,2.153,896,2.153,897,2.153,898,2.153,899,2.153,900,2.153,901,2.153,902,2.153,903,2.153,904,2.153,905,2.153,906,2.153,907,2.153,908,2.153,909,2.153,910,2.153,911,2.153,912,2.153,913,2.153,914,2.153,915,2.153,916,2.153,917,2.153,918,2.153,919,2.153,920,2.153,921,2.153,922,2.153,923,2.153,924,2.153,925,2.153,926,3.127,927,2.153,928,3.327,929,2.153,930,2.21,931,1.945,932,1.945,933,1.945,934,2.153,935,2.153]],["title/interfaces/MockRouterStateSnapshot.html",[473,1.069,790,2.539]],["body/interfaces/MockRouterStateSnapshot.html",[3,0.289,4,0.314,8,0.192,18,2.521,21,0.426,22,1.214,26,1.457,44,1.423,45,0.795,55,0.023,57,0.772,65,1.363,91,1.363,115,0.397,144,2.463,146,0.531,167,1.129,175,1.828,205,0.009,206,0.013,207,0.009,241,1.828,242,1.2,246,1.627,264,2.255,266,0.945,267,1.686,344,1.277,346,1.686,370,1.457,374,1.564,375,1.363,387,1.457,416,1.2,431,3.293,432,2.255,433,3.55,473,1.214,474,1.363,477,2.992,519,2.101,533,1.828,565,1.828,596,1.828,597,1.828,598,1.828,599,1.828,600,1.828,601,1.686,615,2.255,677,3.293,785,3.921,786,1.828,787,1.999,788,2.5,789,4.661,790,2.882,791,2.5,792,1.999,793,3.742,794,3.742,795,3.742,796,3.742,797,3.742,798,3.742,799,2.213,800,2.213,801,2.213,802,2.213,803,2.213,804,2.213,805,3.191,806,2.213,807,2.213,808,3.742,809,2.213,810,2.213,811,2.213,812,2.213,813,2.213,814,2.213,815,2.213,816,2.213,817,2.213,818,2.213,819,2.213,820,2.213,821,2.213,822,2.213,823,2.213,824,3.191,825,2.213,826,2.213,827,2.213,828,2.213,829,2.213,830,2.213,831,2.213,832,2.213,833,2.213,834,2.213,835,2.213,836,3.191,837,2.213,838,2.213,839,2.213,840,2.213,841,2.213,842,2.213,843,2.213,844,2.213,845,2.213,846,2.213,847,2.213,848,2.213,849,2.213,850,2.213,851,2.213,852,2.213,853,2.213,854,2.213,855,2.213,856,2.213,857,2.213,858,2.213,859,2.213,860,2.213,861,2.213,862,2.213,863,2.213,864,2.213,865,2.213,866,2.213,867,2.213,868,2.213,869,2.213,870,2.213,871,2.213,872,2.213,873,2.213,874,2.213,875,2.213,876,2.213,877,2.213,878,2.213,879,2.213,880,2.213,881,2.213,882,2.213,883,3.191,884,2.213,885,2.213,886,2.213,887,2.213,888,2.213,889,2.213,890,2.213,891,2.213,892,2.213,893,2.213,894,3.191,895,2.213,896,2.213,897,2.213,898,2.213,899,2.213,900,2.213,901,2.213,902,2.213,903,2.213,904,2.213,905,2.213,906,2.213,907,2.213,908,2.213,909,2.213,910,2.213,911,2.213,912,2.213,913,2.213,914,2.213,915,2.213,916,2.213,917,2.213,918,2.213,919,2.213,920,2.213,921,2.213,922,2.213,923,2.213,924,2.213,925,2.213,926,3.191,927,2.213,928,3.38,929,2.213,930,2.255,931,1.999,932,1.999,933,1.999,934,2.213,935,2.213]],["title/interfaces/NotificationInterface.html",[101,2.141,473,1.069]],["body/interfaces/NotificationInterface.html",[3,0.58,4,0.438,8,0.268,10,0.593,21,0.593,22,1.523,44,2.029,55,0.023,57,1.101,58,1.504,101,3.387,146,0.438,171,3.746,175,4.264,205,0.013,206,0.016,207,0.013,267,3.81,473,1.523,474,1.897,479,4.003,615,3.534,627,2.783,931,4.663,932,4.017,933,3.616,936,3.48,937,6.633,938,5.898,939,5.309,940,5.309,941,5.309,942,4.003,943,5.309,944,5.309]],["title/interfaces/NotificationsState.html",[473,1.069,945,2.322]],["body/interfaces/NotificationsState.html",[3,0.38,4,0.415,8,0.254,10,0.562,12,3.191,21,0.562,22,1.47,26,2.544,42,1.582,44,1.11,45,1.655,55,0.023,57,0.894,101,2.943,115,0.827,122,1.684,146,0.681,147,1.387,167,2.351,171,3.06,205,0.012,206,0.016,207,0.012,243,0.879,246,1.97,264,3.06,356,3.191,375,2.378,473,1.11,474,1.796,477,3.179,480,3.36,481,3.49,519,3.36,564,4.892,565,3.191,566,4.364,568,3.864,569,3.864,570,2.918,572,3.296,575,2.411,578,2.918,588,2.918,589,2.918,590,2.918,591,3.296,592,2.918,945,3.961,946,2.636,947,3.87,948,3.87,949,3.87,950,2.918,951,3.296,952,3.296,953,3.296,954,3.296,955,3.296,956,3.296,957,3.87,958,3.87,959,3.87]],["title/injectables/PushNotificationService.html",[47,2.141,234,0.898]],["body/injectables/PushNotificationService.html",[3,0.324,4,0.353,8,0.216,10,0.667,21,0.478,23,3.035,24,1.192,26,3.091,34,1.567,40,1.124,44,1.516,47,3.283,49,1.46,52,0.512,54,1.43,55,0.023,56,1.43,57,0.89,58,1.273,67,3.576,69,2.279,84,1.827,101,3.283,105,2.836,115,0.813,118,0.623,125,1.192,128,1.634,129,2.242,133,4.095,137,2.804,146,0.353,147,1.242,171,3.472,183,2.804,205,0.01,206,0.014,207,0.01,233,1.634,234,1.106,239,1.89,243,1.414,265,4.241,266,1.478,267,1.89,295,3.894,345,4.059,347,3.561,512,1.634,551,3.126,554,2.804,557,2.804,561,3.909,562,3.909,615,1.754,960,5.121,961,2.804,962,4.695,963,4.695,964,4.311,965,6.012,966,3.292,967,3.292,968,5.717,969,3.894,970,4.59,971,3.292,972,3.909,973,4.869,974,5.717,975,3.292,976,4.59,977,4.59,978,3.292,979,3.292,980,3.292]],["title/injectables/RouterEffects.html",[234,0.898,330,2.539]],["body/injectables/RouterEffects.html",[3,0.297,4,0.323,8,0.198,10,0.627,21,0.439,22,1.239,24,1.826,40,1.475,49,1.405,52,1.01,54,0.818,55,0.023,56,0.818,57,0.856,58,0.728,75,2.061,93,2.481,102,2.34,105,2.713,115,0.862,118,0.571,122,1.314,125,1.094,127,1.402,142,3.679,144,2.144,146,0.323,149,2.686,205,0.009,206,0.013,207,0.009,228,3.478,234,1.04,236,1.881,242,2.475,243,0.686,246,2.328,312,1.735,330,4.485,416,1.234,432,2.932,436,2.69,480,1.5,512,1.5,518,3.748,521,2.573,524,4.701,525,5.157,537,4.566,539,4.124,541,2.573,677,3.322,689,5.157,695,4.701,981,2.573,982,5.822,983,5.822,984,5.822,985,6.234,986,3.021,987,4.32,988,4.32,989,4.32,990,4.32,991,5.503,992,4.32,993,3.021,994,4.32,995,4.32,996,3.021,997,4.32,998,4.32,999,3.021,1000,3.021,1001,2.573,1002,3.021,1003,3.021]],["title/interfaces/RouterStateUrl.html",[422,2.322,473,1.069]],["body/interfaces/RouterStateUrl.html",[3,0.45,4,0.49,8,0.3,10,0.665,21,0.665,22,1.637,44,1.784,55,0.023,57,0.968,115,0.619,146,0.49,205,0.014,206,0.018,207,0.014,416,1.871,422,3.554,431,3.732,432,3.64,433,4.143,473,1.784,474,2.124,477,3.251,677,3.732,1004,3.898,1005,5.707]],["title/modules/SharedModule.html",[270,1.433,605,2.141]],["body/modules/SharedModule.html",[3,0.475,4,0.518,8,0.317,10,0.702,52,0.991,55,0.023,115,0.897,118,0.914,123,2.103,124,2.575,127,2.244,146,0.518,155,1.75,156,1.75,157,1.557,205,0.015,206,0.018,207,0.015,272,2.103,274,2.776,276,2.4,277,2.244,289,2.93,290,3.295,291,2.93,292,2.4,305,4.451,414,4.02,416,1.975,605,3.39,607,4.451,608,4.805,1006,4.834,1007,5.903,1008,4.834]],["title/classes/TranslateUniversalLoader.html",[52,0.58,467,2.322]],["body/classes/TranslateUniversalLoader.html",[3,0.388,4,0.423,8,0.259,10,0.895,14,2.518,21,0.573,23,3.331,24,1.88,31,3.233,34,1.772,40,1.772,44,1.972,49,1.326,52,0.902,54,1.405,55,0.023,56,1.405,57,0.808,58,1.25,84,1.2,105,2.785,115,0.784,123,2.524,124,2.103,125,1.43,146,0.423,147,1.57,149,2.766,155,1.43,156,1.43,157,1.271,205,0.012,206,0.016,207,0.012,243,1.179,304,4.826,343,2.766,344,2.681,349,2.977,350,2.103,383,2.577,438,4.373,467,3.233,631,3.233,634,2.977,1009,3.362,1010,5.191,1011,6.162,1012,3.948,1013,6.162,1014,3.948,1015,5.191,1016,3.948,1017,5.191,1018,3.914,1019,5.191,1020,3.948,1021,3.948,1022,3.948,1023,3.948,1024,3.948,1025,3.948,1026,3.948]],["title/interceptors/UniversalInterceptor.html",[208,2.141,461,2.322]],["body/interceptors/UniversalInterceptor.html",[3,0.386,4,0.421,8,0.258,10,0.571,14,1.607,21,0.571,24,1.424,34,1.768,40,1.342,45,1.665,49,1.322,52,0.612,54,1.401,55,0.023,56,1.401,57,0.806,58,1.247,63,1.825,84,1.195,115,0.832,118,0.744,146,0.421,147,1.401,155,1.875,156,1.875,157,2.114,205,0.012,206,0.016,207,0.012,209,2.57,210,2.678,212,4.639,213,4.41,214,3.526,215,3.904,216,4.41,217,3.943,218,3.526,219,3.904,223,5.046,224,4.82,226,4.19,229,2.974,230,3.225,232,3.225,233,1.952,234,1.247,236,2.449,239,2.258,243,0.893,249,3.349,250,5.784,252,4.41,254,2.758,255,3.349,256,3.349,257,2.095,461,3.225,681,2.965,682,3.349,684,3.349,695,2.965,1027,3.349,1028,3.932,1029,3.932,1030,3.932,1031,3.932,1032,3.932]],["title/changelog.html",[1033,2.382,1034,2.382,1035,2.69]],["body/changelog.html",[6,1.32,8,0.231,11,1.225,15,1.566,26,2.131,45,1.162,55,0.015,64,1.879,65,1.637,68,3.217,69,2.131,75,0.939,80,1.225,82,1.566,89,2.026,120,2.197,123,1.867,125,0.832,128,1.141,143,1.566,145,1.958,161,4.197,205,0.007,206,0.011,207,0.007,208,1.32,214,1.566,215,2.66,218,1.566,228,1.32,229,1.32,232,2.197,266,1.765,273,2.802,308,1.432,310,2.402,345,1.432,346,1.32,350,1.879,370,1.141,379,1.432,383,1.141,400,2.66,436,1.432,496,2.197,518,1.566,631,3.667,658,3.004,660,2.66,765,1.733,773,1.566,786,1.432,792,1.566,930,2.767,942,1.733,962,3.236,969,2.923,1001,1.958,1018,2.66,1035,3.004,1036,2.299,1037,5.48,1038,5.48,1039,3.916,1040,3.527,1041,2.299,1042,1.958,1043,2.299,1044,2.299,1045,2.299,1046,2.299,1047,2.299,1048,2.299,1049,1.958,1050,2.299,1051,5.485,1052,6.44,1053,2.299,1054,2.299,1055,2.299,1056,2.299,1057,6.163,1058,5.142,1059,3.527,1060,2.299,1061,2.299,1062,2.299,1063,3.527,1064,3.527,1065,2.299,1066,2.299,1067,4.292,1068,5.193,1069,2.299,1070,2.299,1071,2.299,1072,4.1,1073,2.299,1074,3.004,1075,2.299,1076,2.299,1077,3.004,1078,3.004,1079,4.292,1080,3.004,1081,1.958,1082,2.299,1083,2.299,1084,5.48,1085,5.48,1086,3.656,1087,5.706,1088,3.527,1089,2.299,1090,2.299,1091,2.299,1092,2.299,1093,2.299,1094,2.299,1095,2.299,1096,4.423,1097,3.527,1098,2.299,1099,3.527,1100,2.299,1101,2.299,1102,3.527,1103,3.004,1104,2.299,1105,5.686,1106,1.958,1107,2.299,1108,2.299,1109,1.958,1110,1.958,1111,2.299,1112,2.299,1113,2.299,1114,1.958,1115,2.299,1116,1.958,1117,3.527,1118,2.299,1119,1.733,1120,2.299,1121,1.958,1122,2.299,1123,2.299,1124,1.958,1125,2.299,1126,2.299,1127,2.402,1128,2.299,1129,2.299,1130,2.299,1131,3.656,1132,2.299,1133,5.193,1134,2.299,1135,2.299,1136,2.299,1137,2.299,1138,2.299,1139,3.004,1140,2.299,1141,2.402,1142,1.958,1143,4.86,1144,2.299,1145,2.299,1146,1.958,1147,2.299,1148,2.299,1149,2.299,1150,4.1,1151,3.527,1152,2.299,1153,2.299,1154,2.299,1155,3.527,1156,2.299,1157,2.299,1158,2.299,1159,2.299,1160,4.814,1161,2.299,1162,3.527,1163,2.299,1164,2.299,1165,3.527,1166,2.299,1167,2.299,1168,3.004,1169,3.527,1170,2.299,1171,2.299,1172,2.299,1173,2.299,1174,1.958,1175,2.299,1176,1.958,1177,2.299,1178,2.299,1179,2.299,1180,2.299,1181,3.004,1182,2.299,1183,2.299,1184,2.299,1185,5.48,1186,5.48,1187,5.48,1188,2.299,1189,1.958,1190,1.958,1191,3.004,1192,2.299,1193,1.958,1194,1.733,1195,2.299,1196,2.299,1197,2.299,1198,2.299,1199,2.299,1200,3.004,1201,3.527,1202,4.292,1203,2.299,1204,1.958,1205,1.958,1206,4.132,1207,2.299,1208,1.958,1209,2.299,1210,1.958,1211,1.958,1212,1.958,1213,2.299,1214,1.958,1215,2.299,1216,2.299,1217,2.299,1218,3.004,1219,1.958,1220,2.299,1221,3.527,1222,2.299,1223,3.656,1224,3.656,1225,1.733,1226,2.299,1227,2.299,1228,2.299,1229,2.299,1230,2.299,1231,1.733,1232,1.958,1233,1.958,1234,2.299,1235,1.958,1236,2.299,1237,2.299,1238,1.958,1239,2.299,1240,2.299,1241,2.299,1242,2.299,1243,3.527,1244,2.299,1245,2.299,1246,2.299,1247,1.958]],["title/coverage.html",[1248,3.404]],["body/coverage.html",[0,1.824,1,1.038,8,0.147,9,1.905,13,1.284,42,2.448,47,1.284,52,0.537,55,0.023,57,0.348,101,1.284,108,1.686,128,2.094,130,1.523,133,1.523,135,1.686,140,1.686,201,0.973,202,1.038,205,0.007,206,0.011,207,0.007,208,2.423,209,1.714,211,1.905,234,1.361,237,1.686,248,1.905,266,0.72,288,2.604,318,1.523,323,1.686,324,1.686,326,1.686,330,1.523,334,1.11,335,1.523,340,1.523,342,1.191,356,2.628,358,1.686,370,1.11,375,2.202,385,1.686,387,1.11,412,1.686,413,1.686,419,1.393,422,1.393,425,1.523,461,1.393,462,1.686,467,1.393,469,1.686,473,1.674,475,3.232,484,1.686,494,1.905,514,1.523,515,1.905,522,1.284,544,1.191,548,1.686,549,1.686,550,1.905,563,3.975,575,2.151,577,1.523,579,1.686,593,1.686,595,1.905,611,1.905,612,2.352,635,1.905,669,6.149,672,1.905,673,1.905,685,1.523,713,1.905,745,1.523,747,1.905,748,1.905,758,1.686,759,1.686,763,1.905,764,1.905,785,1.523,786,2.628,787,2.873,790,1.523,936,1.905,945,1.393,946,3.692,950,1.686,960,1.905,961,1.905,963,1.686,964,1.686,981,1.905,1004,1.905,1009,1.905,1027,1.905,1248,1.523,1249,1.686,1250,2.236,1251,1.905,1252,5.892,1253,2.236,1254,5.616,1255,1.905,1256,4.041,1257,7.251,1258,7.204,1259,1.905,1260,1.905,1261,3.454,1262,5.65,1263,5.65,1264,2.236,1265,2.236,1266,2.236,1267,2.236,1268,3.593,1269,1.905,1270,2.941,1271,1.905,1272,2.236,1273,2.236,1274,3.454,1275,3.454,1276,2.236,1277,2.236,1278,3.181,1279,1.905,1280,2.941,1281,3.593,1282,1.905,1283,4.041,1284,1.905,1285,2.236,1286,2.236,1287,4.368,1288,1.905,1289,1.905,1290,1.905,1291,1.905,1292,2.941,1293,3.181,1294,1.686,1295,1.905,1296,4.617,1297,1.905,1298,1.905,1299,1.905,1300,1.905,1301,2.941,1302,1.905,1303,3.593,1304,1.905,1305,1.905,1306,1.905,1307,3.593,1308,1.905,1309,1.905,1310,2.236,1311,2.236,1312,1.905,1313,1.905,1314,1.905,1315,1.905,1316,1.905]],["title/dependencies.html",[273,2.07,1077,2.69]],["body/dependencies.html",[45,1.208,55,0.023,63,2.608,64,2.378,118,0.844,119,3.366,120,2.78,122,2.444,123,2.675,124,2.378,125,1.616,127,2.072,205,0.014,206,0.017,207,0.014,257,3.276,273,2.072,303,3.04,307,3.802,308,2.78,310,3.04,312,2.563,317,3.802,332,3.802,416,1.824,570,3.366,601,2.563,1317,4.463,1318,7.084,1319,4.463,1320,4.463,1321,4.463,1322,6.65,1323,4.463,1324,4.463,1325,4.463,1326,4.463,1327,4.463,1328,4.463,1329,4.463,1330,4.463,1331,4.463,1332,3.802,1333,4.463,1334,4.463,1335,4.463,1336,4.463,1337,4.463,1338,4.463,1339,4.463,1340,4.463,1341,4.463,1342,4.463,1343,4.463,1344,4.463]],["title/miscellaneous/functions.html",[1345,2.151,1346,3.362]],["body/miscellaneous/functions.html",[8,0.248,10,0.825,21,0.55,42,2.323,44,1.087,45,1.026,48,2.581,49,0.968,54,1.795,55,0.022,56,1.795,58,1.597,84,2.073,143,2.581,171,2.019,205,0.012,206,0.016,207,0.012,243,0.86,266,1.22,288,2.857,295,2.581,306,3.227,308,3.147,313,3.227,326,4.286,340,4.129,341,3.147,342,2.692,343,2.692,344,2.198,345,2.36,346,2.176,347,2.36,348,2.857,349,2.857,350,3.028,351,3.227,354,3.227,355,3.227,356,4.248,357,3.227,358,3.809,359,4.303,360,4.571,361,5.164,362,3.227,385,3.809,387,1.881,462,2.857,467,2.36,469,4.571,475,2.581,476,2.581,477,3.078,480,3.344,487,3.227,488,3.227,489,3.227,490,3.227,491,3.227,492,4.286,563,2.581,573,3.227,577,3.441,621,2.857,685,2.581,734,3.227,765,2.857,772,3.227,945,2.36,946,2.581,1278,2.857,1293,2.857,1345,2.581,1346,2.857,1347,5.052,1348,3.227,1349,3.227,1350,4.303,1351,3.227,1352,3.227,1353,3.789,1354,3.789,1355,3.789]],["title/index.html",[21,0.459,1033,2.382,1034,2.382]],["body/index.html",[8,0.222,11,1.159,31,1.355,45,0.589,51,1.159,55,0.022,64,2.697,65,1.009,66,1.852,68,2.209,69,1.08,75,1.911,76,2.879,80,2.209,120,1.355,123,0.946,128,1.08,161,2.302,162,2.549,171,1.159,193,1.355,205,0.007,206,0.01,207,0.007,229,1.249,230,1.355,232,1.355,242,0.889,254,1.801,266,0.7,273,1.569,334,1.08,346,2.381,347,1.355,350,1.159,379,1.355,383,1.678,400,1.64,409,2.879,431,1.159,476,2.823,496,2.105,539,1.481,581,1.481,630,3.531,631,3.153,638,1.852,660,1.64,664,1.852,693,2.879,749,1.852,773,1.481,778,1.852,789,1.64,930,3.429,942,1.64,962,2.549,969,1.481,973,1.852,1018,2.549,1039,1.64,1042,3.531,1049,1.852,1051,3.531,1058,1.852,1072,2.879,1074,3.531,1078,3.982,1080,1.852,1081,2.879,1086,1.852,1096,5.419,1103,1.852,1105,4.925,1109,1.852,1110,1.852,1114,1.852,1116,2.879,1119,1.64,1121,3.531,1124,1.852,1127,4.134,1131,3.982,1139,3.531,1141,2.302,1143,1.852,1146,2.879,1168,1.852,1174,1.852,1176,1.852,1181,1.852,1190,3.982,1191,3.982,1193,2.879,1194,3.126,1200,1.852,1204,2.879,1205,1.852,1206,3.817,1208,1.852,1210,2.879,1211,2.879,1212,2.879,1214,3.982,1218,1.852,1219,1.852,1223,6.003,1224,6.11,1225,2.549,1231,3.525,1232,3.531,1233,1.852,1235,1.852,1238,1.852,1247,2.879,1248,2.302,1249,3.126,1356,2.175,1357,2.175,1358,3.38,1359,3.38,1360,2.175,1361,2.175,1362,2.175,1363,1.852,1364,2.175,1365,2.175,1366,2.175,1367,2.175,1368,2.175,1369,2.175,1370,2.175,1371,2.175,1372,2.175,1373,2.175,1374,2.175,1375,5.063,1376,2.175,1377,3.38,1378,3.38,1379,2.175,1380,3.38,1381,2.175,1382,2.175,1383,3.38,1384,2.175,1385,1.355,1386,2.175,1387,2.175,1388,2.175,1389,2.175,1390,3.38,1391,3.38,1392,3.38,1393,2.175,1394,2.175,1395,2.175,1396,3.38,1397,2.175,1398,2.175,1399,2.175,1400,2.175,1401,2.175,1402,3.38,1403,4.675,1404,2.175,1405,2.175,1406,2.175,1407,2.175,1408,2.175,1409,4.145,1410,3.38,1411,2.175,1412,2.175,1413,2.175,1414,3.38,1415,2.175,1416,6.278,1417,2.175,1418,2.175,1419,3.38,1420,2.175,1421,2.175,1422,2.175,1423,2.175,1424,3.982,1425,3.38,1426,2.175,1427,2.175,1428,3.38,1429,3.38,1430,4.145,1431,2.175,1432,2.175,1433,2.175,1434,2.175,1435,2.175,1436,2.175,1437,2.175,1438,2.175,1439,2.175,1440,2.175,1441,2.175,1442,2.175,1443,2.175,1444,3.38,1445,3.38,1446,2.175,1447,2.175,1448,4.145,1449,4.675,1450,3.38,1451,3.38,1452,3.38,1453,4.145,1454,4.145,1455,4.675,1456,2.175,1457,2.175,1458,2.175,1459,2.175,1460,2.175,1461,3.38,1462,2.175,1463,2.175,1464,2.175,1465,2.175,1466,2.175,1467,2.175,1468,1.481,1469,2.175,1470,2.175,1471,3.38,1472,2.175,1473,2.175,1474,2.175,1475,1.852,1476,2.175,1477,2.175,1478,3.38,1479,2.175,1480,2.175,1481,2.175,1482,2.175,1483,2.175,1484,2.175,1485,2.175,1486,2.175,1487,2.175,1488,2.175,1489,2.175,1490,1.852,1491,2.175,1492,2.175,1493,2.175,1494,3.38,1495,2.175,1496,2.175,1497,2.175,1498,2.175,1499,2.175,1500,2.175,1501,2.175,1502,2.175,1503,2.175,1504,2.175,1505,2.175,1506,2.175,1507,2.175,1508,2.175,1509,2.175]],["title/license.html",[1033,2.382,1034,2.382,1510,2.69]],["body/license.html",[55,0.018,205,0.014,206,0.018,207,0.014,287,2.581,480,2.231,496,3.514,681,3.388,792,3.061,1150,3.827,1194,3.388,1249,3.388,1294,3.388,1332,3.827,1510,3.827,1511,4.494,1512,6.167,1513,4.494,1514,4.494,1515,4.494,1516,4.494,1517,4.494,1518,5.642,1519,4.494,1520,4.494,1521,4.494,1522,4.494,1523,4.494,1524,4.494,1525,5.642,1526,7.041,1527,4.494,1528,4.494,1529,6.167,1530,4.494,1531,5.642,1532,4.494,1533,4.494,1534,4.494,1535,4.494,1536,4.494,1537,4.494,1538,4.494,1539,4.494,1540,5.642,1541,4.494,1542,4.494,1543,4.494,1544,4.494,1545,4.494,1546,4.494,1547,4.494,1548,5.642,1549,5.642,1550,4.494,1551,4.494,1552,4.494,1553,4.494,1554,4.494,1555,4.494,1556,4.494,1557,4.494,1558,4.494,1559,4.494,1560,4.494,1561,4.494,1562,4.494,1563,4.494,1564,4.494,1565,4.494,1566,4.494,1567,4.494,1568,4.494,1569,4.494,1570,4.494,1571,4.494,1572,4.494,1573,4.494,1574,4.494,1575,4.494]],["title/modules.html",[272,2.174]],["body/modules.html",[55,0.019,63,3.162,162,4.97,205,0.016,206,0.019,207,0.016,271,3.257,272,2.275,283,3.003,284,3.257,456,3.562,605,3.003,696,3.562,701,3.257,1576,6.813,1577,6.813,1578,7.121,1579,6.591]],["title/overview.html",[1580,4.257]],["body/overview.html",[1,3.226,2,2.604,47,3.425,55,0.022,192,1.941,201,2.595,202,2.768,205,0.013,206,0.017,207,0.013,209,2.96,247,3.152,270,1.607,271,4.461,272,1.819,273,1.941,274,2.401,275,2.604,276,2.076,277,1.941,278,3.561,279,3.561,280,3.561,281,3.561,282,3.561,283,3.425,284,4.229,285,3.356,286,2.604,287,2.401,456,4.625,457,3.561,460,3.561,461,3.714,474,1.941,512,2.076,522,3.425,602,3.561,603,3.561,604,3.561,605,3.617,634,3.152,696,4.773,697,3.561,698,3.561,699,3.561,700,3.561,701,3.714,745,2.847,928,2.847,1189,3.561,1580,3.561,1581,5.389,1582,4.181]],["title/unit-test.html",[930,2.144,1127,2.741]],["body/unit-test.html",[8,0.268,55,0.023,205,0.013,206,0.017,207,0.013,266,1.319,612,2.789,930,2.181,1127,2.789,1248,2.789,1251,3.487,1252,6.305,1254,5.322,1255,3.487,1268,5.028,1269,4.528,1300,4.528,1315,3.487,1316,3.487,1346,3.087,1583,4.094,1584,4.094,1585,6.924,1586,4.094,1587,4.094,1588,7.077,1589,4.094,1590,4.094,1591,4.094,1592,4.094,1593,4.094,1594,4.094,1595,4.094,1596,6.476,1597,4.094,1598,4.094,1599,4.094,1600,4.094,1601,4.094,1602,4.094,1603,4.094]],["title/miscellaneous/variables.html",[1345,2.151,1604,3.798]],["body/miscellaneous/variables.html",[3,0.293,21,0.196,23,1.714,26,2.65,44,0.387,49,0.762,51,0.719,55,0.023,57,0.902,65,1.828,75,2.844,89,0.775,91,2.23,102,3.231,108,1.727,112,1.315,128,2.717,135,1.727,140,1.727,144,0.67,161,2.916,171,1.22,175,0.84,205,0.004,206,0.007,207,0.004,217,2.395,230,0.84,237,2.25,241,1.858,242,1.437,243,1.037,246,1.926,254,0.719,264,2.099,266,1.269,267,0.775,323,1.727,324,1.727,334,1.137,342,2.762,344,0.587,348,2.25,370,1.137,374,0.719,375,2.477,383,0.67,387,1.137,392,3.623,431,2.432,432,0.719,433,0.775,440,2.25,475,0.919,476,0.919,477,2.929,478,2.032,480,2.876,481,2.032,484,1.727,485,1.149,486,1.149,516,1.149,519,2.267,533,2.453,548,2.25,549,2.25,551,2.032,563,0.919,565,2.667,567,1.149,568,1.727,569,1.727,575,2.19,576,1.149,577,0.919,578,1.727,579,1.727,580,1.149,581,2.032,582,1.149,583,1.149,584,1.149,585,1.149,586,1.149,588,1.017,589,1.017,590,1.017,592,1.727,593,1.727,594,1.149,596,0.84,597,0.84,598,0.84,599,0.84,600,0.84,601,0.775,615,1.22,677,0.719,685,1.56,758,1.727,759,1.727,773,2.032,786,0.84,787,1.56,793,2.25,794,2.25,795,2.25,796,2.25,797,2.25,798,2.97,799,1.017,800,1.017,801,1.017,802,1.017,803,1.017,804,1.017,805,1.727,806,1.017,807,1.017,808,2.25,809,1.017,810,1.017,811,1.017,812,1.017,813,1.017,814,1.017,815,1.017,816,1.017,817,1.017,818,1.017,819,1.017,820,1.017,821,1.017,822,1.017,823,1.017,824,1.727,825,1.017,826,1.017,827,1.017,828,1.017,829,1.017,830,1.017,831,1.017,832,1.017,833,1.017,834,1.017,835,1.017,836,1.727,837,1.017,838,1.017,839,1.017,840,1.017,841,1.017,842,1.017,843,1.017,844,1.017,845,1.017,846,1.017,847,1.017,848,1.017,849,1.017,850,1.017,851,1.017,852,1.017,853,1.017,854,1.017,855,1.017,856,1.017,857,1.017,858,1.017,859,1.017,860,1.017,861,1.017,862,1.017,863,1.017,864,1.017,865,1.017,866,1.017,867,1.017,868,1.017,869,1.017,870,1.017,871,1.017,872,1.017,873,1.017,874,1.017,875,1.017,876,1.017,877,1.017,878,1.017,879,1.017,880,1.017,881,1.017,882,1.017,883,1.727,884,1.017,885,1.017,886,1.017,887,1.017,888,1.017,889,1.017,890,1.017,891,1.017,892,1.017,893,1.017,894,1.727,895,1.017,896,1.017,897,1.017,898,1.017,899,1.017,900,1.017,901,1.017,902,1.017,903,1.017,904,1.017,905,1.017,906,1.017,907,1.017,908,1.017,909,1.017,910,1.017,911,1.017,912,1.017,913,1.017,914,1.017,915,1.017,916,1.017,917,1.017,918,1.017,919,1.017,920,1.017,921,1.017,922,1.017,923,1.017,924,1.017,925,1.017,926,1.727,927,1.017,928,2.032,929,1.017,930,2.099,931,0.919,932,0.919,933,2.032,934,1.017,935,1.017,945,0.84,946,0.919,950,1.727,951,1.149,952,1.149,953,1.149,954,1.149,955,1.149,956,1.149,963,1.727,964,1.727,969,2.032,972,1.149,1106,2.541,1119,2.25,1142,1.149,1225,2.25,1256,1.149,1259,1.95,1260,1.95,1270,1.149,1271,2.541,1278,1.017,1279,1.149,1280,1.149,1281,4.415,1282,1.95,1283,1.149,1284,2.541,1287,1.149,1288,1.95,1289,1.95,1290,1.95,1291,1.95,1292,1.149,1293,1.017,1294,1.727,1295,1.95,1296,1.149,1297,1.95,1298,1.95,1299,1.95,1301,1.149,1302,1.95,1303,1.149,1304,2.541,1305,2.541,1306,2.541,1307,1.149,1308,2.541,1309,2.541,1312,1.149,1313,1.149,1314,1.149,1345,0.919,1348,1.95,1349,1.95,1350,3.355,1351,2.995,1352,1.95,1363,2.541,1424,3.647,1475,1.149,1490,1.95,1604,1.149,1605,4.282,1606,2.984,1607,3.517,1608,1.349,1609,1.349,1610,1.349,1611,3.517,1612,2.984,1613,1.349,1614,2.29,1615,2.29,1616,3.939,1617,2.29,1618,2.29,1619,1.349,1620,5.184,1621,4.804,1622,2.29,1623,2.29,1624,2.29,1625,3.939,1626,1.349,1627,1.349,1628,4.282,1629,2.984,1630,2.984,1631,4.282,1632,2.984,1633,1.349,1634,4.282,1635,4.282,1636,4.282,1637,2.984,1638,4.282,1639,2.984,1640,2.984,1641,5.008,1642,2.984,1643,3.517,1644,2.984,1645,2.984,1646,1.349,1647,1.349,1648,1.349,1649,4.282,1650,1.349,1651,1.349,1652,1.349,1653,1.349,1654,1.349,1655,1.349,1656,1.349,1657,1.349,1658,1.349,1659,2.29,1660,1.349,1661,1.349,1662,1.349,1663,1.349,1664,1.349,1665,1.349,1666,1.349,1667,1.349]],["title/additional-documentation/bundle-analytics.html",[62,1.36,1385,1.707,1668,2.74,1669,2.74]],["body/additional-documentation/bundle-analytics.html",[55,0.02,205,0.018,206,0.02,207,0.018]],["title/additional-documentation/e2e-testing-report-(cucumber).html",[62,1.075,1039,1.633,1206,1.633,1231,1.633,1385,1.349,1468,1.475]],["body/additional-documentation/e2e-testing-report-(cucumber).html",[55,0.02,205,0.018,206,0.02,207,0.018]],["title/additional-documentation/lighthouse-mobile-report.html",[62,1.201,1141,1.648,1385,1.507,1468,1.648,1670,2.42]],["body/additional-documentation/lighthouse-mobile-report.html",[55,0.02,205,0.018,206,0.02,207,0.018]],["title/additional-documentation/lighthouse-desktop-report.html",[62,1.201,1141,1.648,1385,1.507,1468,1.648,1671,2.42]],["body/additional-documentation/lighthouse-desktop-report.html",[55,0.02,205,0.018,206,0.02,207,0.018]]],"invertedIndex":[["",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{},"miscellaneous/variables.html":{},"additional-documentation/bundle-analytics.html":{},"additional-documentation/e2e-testing-report-(cucumber).html":{},"additional-documentation/lighthouse-mobile-report.html":{},"additional-documentation/lighthouse-desktop-report.html":{}}}],["0",{"_index":669,"title":{},"body":{"classes/GeneralHelper.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1344,"title":{},"body":{"dependencies.html":{}}}],["0/0",{"_index":1588,"title":{},"body":{"unit-test.html":{}}}],["0/1",{"_index":1258,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1285,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":1104,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1151,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1165,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":247,"title":{"interceptors/AppHttpInterceptor-1.html":{}},"body":{"classes/GeneralHelper.html":{},"overview.html":{}}}],["1.0.0",{"_index":1246,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":1235,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["1.1.1",{"_index":1226,"title":{},"body":{"changelog.html":{}}}],["1.1.2",{"_index":1220,"title":{},"body":{"changelog.html":{}}}],["1.1.20150312",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["1.1.3",{"_index":1213,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":1195,"title":{},"body":{"changelog.html":{}}}],["1.2.1",{"_index":1192,"title":{},"body":{"changelog.html":{}}}],["1.2.2",{"_index":1184,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":1167,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":1164,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":1159,"title":{},"body":{"changelog.html":{}}}],["1.5.1",{"_index":1158,"title":{},"body":{"changelog.html":{}}}],["1.5.2",{"_index":1154,"title":{},"body":{"changelog.html":{}}}],["1.5.3",{"_index":1152,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":1145,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":1254,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["1/3",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1103,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["10.x",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["100",{"_index":1252,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["11",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["11/11",{"_index":1587,"title":{},"body":{"unit-test.html":{}}}],["12.0.1",{"_index":1338,"title":{},"body":{"dependencies.html":{}}}],["12.1.0",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["12.1.2",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["12.2.0",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["12.x",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["13.0.0",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["14/14",{"_index":1601,"title":{},"body":{"unit-test.html":{}}}],["15/15",{"_index":1253,"title":{},"body":{"coverage.html":{}}}],["16/16",{"_index":1600,"title":{},"body":{"unit-test.html":{}}}],["17",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["17/17",{"_index":1592,"title":{},"body":{"unit-test.html":{}}}],["18",{"_index":1166,"title":{},"body":{"changelog.html":{}}}],["19/19",{"_index":1591,"title":{},"body":{"unit-test.html":{}}}],["2",{"_index":928,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":1129,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":1126,"title":{},"body":{"changelog.html":{}}}],["2.1.0",{"_index":1110,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["2.3.0",{"_index":1342,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1268,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["2/3",{"_index":1263,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":268,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{}}}],["2019",{"_index":1150,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":1196,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":1111,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["3.15.2",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1269,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["3/4",{"_index":1311,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1273,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1582,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["4.1.0",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["4.17.1",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":1337,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":1335,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1261,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["404",{"_index":447,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"components/ErrorPageComponent.html":{},"guards/LanguageGuard.html":{}}}],["4c70",{"_index":795,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["5/5",{"_index":1596,"title":{},"body":{"unit-test.html":{}}}],["6.0.0",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1255,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["60",{"_index":1272,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1262,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1581,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1300,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["75",{"_index":1310,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1189,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["8.0.0",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1594,"title":{},"body":{"unit-test.html":{}}}],["8/9",{"_index":1265,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1274,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1264,"title":{},"body":{"coverage.html":{}}}],["9.x",{"_index":1130,"title":{},"body":{"changelog.html":{}}}],["9/10",{"_index":1267,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1589,"title":{},"body":{"unit-test.html":{}}}],["90",{"_index":1266,"title":{},"body":{"coverage.html":{}}}],["93dd0fd6",{"_index":793,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["__app_storage__",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["_statecb",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["a213",{"_index":796,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["a[field",{"_index":667,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["ab",{"_index":889,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["ability",{"_index":1387,"title":{},"body":{"index.html":{}}}],["above",{"_index":1547,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":504,"title":{},"body":{"components/BaseComponent.html":{}}}],["access",{"_index":505,"title":{},"body":{"components/BaseComponent.html":{}}}],["according",{"_index":1371,"title":{},"body":{"index.html":{}}}],["action",{"_index":480,"title":{},"body":{"interfaces/ApplicationState.html":{},"injectables/EntitiesEffects.html":{},"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{},"injectables/RouterEffects.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["action.ispendingrequest",{"_index":486,"title":{},"body":{"interfaces/ApplicationState.html":{},"miscellaneous/variables.html":{}}}],["action.payload",{"_index":989,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["actionreducermap",{"_index":571,"title":{},"body":{"interfaces/EntitiesState.html":{}}}],["actions",{"_index":228,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"injectables/RouterEffects.html":{},"changelog.html":{}}}],["actions.ts",{"_index":1244,"title":{},"body":{"changelog.html":{}}}],["actiontypes",{"_index":490,"title":{},"body":{"interfaces/ApplicationState.html":{},"miscellaneous/functions.html":{}}}],["activatedroutesnapshot",{"_index":754,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["active",{"_index":1412,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["adapter",{"_index":575,"title":{},"body":{"interfaces/EntitiesState.html":{},"components/HomePageComponent.html":{},"interfaces/NotificationsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adapter.addmany(action.notifications",{"_index":952,"title":{},"body":{"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["adapter.addone(action.notification",{"_index":954,"title":{},"body":{"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["adapter.getinitialstate",{"_index":578,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["adapter.getselectors",{"_index":592,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["adapter.removeall(state",{"_index":956,"title":{},"body":{"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["adapter.setall(action.entities",{"_index":583,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["added",{"_index":1143,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["additional",{"_index":1385,"title":{"additional-documentation/bundle-analytics.html":{},"additional-documentation/e2e-testing-report-(cucumber).html":{},"additional-documentation/lighthouse-mobile-report.html":{},"additional-documentation/lighthouse-desktop-report.html":{}},"body":{"index.html":{}}}],["addnotification",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["addsubscription",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["addsubscription(subscription",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["adludentibus",{"_index":921,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["admonita",{"_index":857,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["advanced",{"_index":1358,"title":{},"body":{"index.html":{}}}],["aesculeae",{"_index":856,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["aethere",{"_index":904,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["aetne",{"_index":838,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["again",{"_index":1481,"title":{},"body":{"index.html":{}}}],["ait",{"_index":898,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["alias",{"_index":1421,"title":{},"body":{"index.html":{}}}],["alios",{"_index":851,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["alongside",{"_index":1459,"title":{},"body":{"index.html":{}}}],["already",{"_index":1426,"title":{},"body":{"index.html":{}}}],["always",{"_index":449,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["analytics",{"_index":1669,"title":{"additional-documentation/bundle-analytics.html":{}},"body":{}}],["analytics.effects.ts",{"_index":673,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"coverage.html":{}}}],["analytics.effects.ts:12",{"_index":678,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["analytics.effects.ts:27",{"_index":690,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["and/or",{"_index":1538,"title":{},"body":{"license.html":{}}}],["angular",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{}}}],["angular.json",{"_index":1394,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ErrorModule.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"injectables/LocalStorageService.html":{},"injectables/RouterEffects.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":233,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"injectables/PushNotificationService.html":{},"interceptors/UniversalInterceptor.html":{}}}],["angular/compiler",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"modules/SharedModule.html":{},"interceptors/UniversalInterceptor.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":257,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"interceptors/UniversalInterceptor.html":{},"dependencies.html":{}}}],["angular/router",{"_index":416,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/service",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["animalia",{"_index":865,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["animam",{"_index":874,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["any).ga",{"_index":686,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["any).ga('send",{"_index":688,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["api",{"_index":969,"title":{},"body":{"injectables/PushNotificationService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["apicookies",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiurl",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{}}}],["app.component",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module",{"_index":465,"title":{},"body":{"modules/AppServerModule.html":{}}}],["app/globals",{"_index":760,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["app/pages/error/error.module",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/entities/entities.service",{"_index":705,"title":{},"body":{"modules/HomeModule.html":{}}}],["app/ssr/tokens",{"_index":704,"title":{},"body":{"modules/HomeModule.html":{}}}],["app/store/entities/entities.effects",{"_index":706,"title":{},"body":{"modules/HomeModule.html":{}}}],["app/store/entities/entities.interface",{"_index":558,"title":{},"body":{"injectables/EntitiesService.html":{}}}],["app/store/entities/entities.reducer",{"_index":708,"title":{},"body":{"modules/HomeModule.html":{}}}],["app_initializer",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["apphttpinterceptor",{"_index":209,"title":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{}},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"interceptors/UniversalInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["appinitializerfactory",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":476,"title":{},"body":{"interfaces/ApplicationState.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application.actions",{"_index":483,"title":{},"body":{"interfaces/ApplicationState.html":{}}}],["applicationactions",{"_index":482,"title":{},"body":{"interfaces/ApplicationState.html":{}}}],["applicationstate",{"_index":370,"title":{"interfaces/ApplicationState.html":{}},"body":{"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":271,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["approot",{"_index":368,"title":{},"body":{"modules/AppModule.html":{}}}],["approutes",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["approutingmodule",{"_index":283,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"modules.html":{},"overview.html":{}}}],["appservermodule",{"_index":456,"title":{"modules/AppServerModule.html":{}},"body":{"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["arising",{"_index":1573,"title":{},"body":{"license.html":{}}}],["array",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"components/HomePageComponent.html":{},"miscellaneous/variables.html":{}}}],["array.prototype.slice.apply",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["assets",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["assets/i18n",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/i18n/{locale}.json",{"_index":1374,"title":{},"body":{"index.html":{}}}],["assetsroot",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associated",{"_index":1527,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1473,"title":{},"body":{"index.html":{}}}],["attribute",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["audit",{"_index":1440,"title":{},"body":{"index.html":{}}}],["authors",{"_index":1563,"title":{},"body":{"license.html":{}}}],["available",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"modules.html":{}}}],["b",{"_index":666,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["b[field",{"_index":668,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["back",{"_index":1304,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["badge",{"_index":1163,"title":{},"body":{"changelog.html":{}}}],["base",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["basecomponent",{"_index":13,"title":{"components/BaseComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"coverage.html":{}}}],["basecomponent:15",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["basecomponent:23",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["basecomponent:32",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["basecomponent:42",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["basecomponent:47",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["based",{"_index":1156,"title":{},"body":{"changelog.html":{}}}],["bd876b5cb040b60d34355f0b41cfc183455b3d52",{"_index":1183,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":405,"title":{},"body":{"modules/AppModule.html":{}}}],["begawmdgbjhjfjp6i7hckrbkxzsnrixzkrhliruzb7hhopedgvweuftsjleovuzevjhcwhyoeogsao3",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behaviour",{"_index":1173,"title":{},"body":{"changelog.html":{}}}],["being",{"_index":516,"title":{},"body":{"injectables/EntitiesEffects.html":{},"miscellaneous/variables.html":{}}}],["best",{"_index":1461,"title":{},"body":{"index.html":{}}}],["better",{"_index":1198,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1148,"title":{},"body":{"changelog.html":{}}}],["blazing",{"_index":1356,"title":{},"body":{"index.html":{}}}],["blob",{"_index":777,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["body",{"_index":267,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"injectables/PushNotificationService.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":478,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"guards/LanguageGuard.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"overview.html":{}}}],["both",{"_index":1465,"title":{},"body":{"index.html":{}}}],["bound",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["branches",{"_index":1583,"title":{},"body":{"unit-test.html":{}}}],["breaking",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1578,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"interceptors/UniversalInterceptor.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule.withservertransition",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["browsertransferstatemodule",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["bug",{"_index":1185,"title":{},"body":{"changelog.html":{}}}],["bugfix",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1096,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["build:gzip",{"_index":1425,"title":{},"body":{"index.html":{}}}],["building",{"_index":1445,"title":{},"body":{"index.html":{}}}],["built",{"_index":1432,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":1668,"title":{"additional-documentation/bundle-analytics.html":{}},"body":{}}],["c",{"_index":1513,"title":{},"body":{"license.html":{}}}],["call",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"injectables/PushNotificationService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["callback",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["called",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/EntitiesEffects.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":215,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{}}}],["canactivate",{"_index":441,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"guards/LanguageGuard.html":{}}}],["canactivate(next",{"_index":753,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["candore",{"_index":821,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["carefully",{"_index":1137,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["catcherror",{"_index":531,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["cb",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cb76d1ef6eda",{"_index":797,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["cd",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["certificate",{"_index":1408,"title":{},"body":{"index.html":{}}}],["certificate:generate:mac",{"_index":1390,"title":{},"body":{"index.html":{}}}],["certificates",{"_index":1411,"title":{},"body":{"index.html":{}}}],["change",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["changed",{"_index":1450,"title":{},"body":{"index.html":{}}}],["changedetectorref",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["changelog",{"_index":1035,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changelog.md",{"_index":1236,"title":{},"body":{"changelog.html":{}}}],["changes",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1522,"title":{},"body":{"license.html":{}}}],["check",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{}}}],["checked",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["checks",{"_index":749,"title":{},"body":{"guards/LanguageGuard.html":{},"index.html":{}}}],["children",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["chrome_bin",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["chromeversion",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":1161,"title":{},"body":{"changelog.html":{}}}],["ci/fetchlighthouse.js",{"_index":1493,"title":{},"body":{"index.html":{}}}],["circumdata",{"_index":852,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["claim",{"_index":1566,"title":{},"body":{"license.html":{}}}],["claris",{"_index":837,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":52,"title":{"classes/GeneralHelper.html":{},"classes/TranslateUniversalLoader.html":{}},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"coverage.html":{}}}],["classes",{"_index":634,"title":{},"body":{"classes/GeneralHelper.html":{},"classes/TranslateUniversalLoader.html":{},"overview.html":{}}}],["classlist.js",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["clear",{"_index":1490,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["cleared",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clearerror",{"_index":1284,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["clearnotifications",{"_index":1297,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["client",{"_index":976,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["cluster_appmodule",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appservermodule",{"_index":457,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_bootstrap",{"_index":459,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_imports",{"_index":458,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_providers",{"_index":460,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_errormodule",{"_index":602,"title":{},"body":{"modules/ErrorModule.html":{},"overview.html":{}}}],["cluster_errormodule_declarations",{"_index":604,"title":{},"body":{"modules/ErrorModule.html":{},"overview.html":{}}}],["cluster_errormodule_imports",{"_index":603,"title":{},"body":{"modules/ErrorModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":697,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":699,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_imports",{"_index":700,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_providers",{"_index":698,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["code",{"_index":1018,"title":{},"body":{"classes/TranslateUniversalLoader.html":{},"changelog.html":{},"index.html":{}}}],["codecov",{"_index":1162,"title":{},"body":{"changelog.html":{}}}],["combining",{"_index":1361,"title":{},"body":{"index.html":{}}}],["comes",{"_index":1431,"title":{},"body":{"index.html":{}}}],["command",{"_index":1203,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":1247,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["commithash",{"_index":1182,"title":{},"body":{"changelog.html":{}}}],["commmands",{"_index":1418,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":609,"title":{},"body":{"modules/ErrorModule.html":{},"modules/HomeModule.html":{}}}],["compare",{"_index":1134,"title":{},"body":{"changelog.html":{}}}],["comparison",{"_index":1215,"title":{},"body":{"changelog.html":{}}}],["compile",{"_index":1478,"title":{},"body":{"index.html":{}}}],["complete",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["completely",{"_index":1175,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":1139,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"coverage.html":{}}}],["component'},{'name",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["component_template",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"overview.html":{}}}],["conditions",{"_index":1546,"title":{},"body":{"license.html":{}}}],["config",{"_index":1178,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["configured",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{}}}],["confirm('new",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["confirmprompt",{"_index":1242,"title":{},"body":{"changelog.html":{}}}],["coniugis",{"_index":876,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["coniunx",{"_index":846,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":1574,"title":{},"body":{"license.html":{}}}],["connections",{"_index":1439,"title":{},"body":{"index.html":{}}}],["connects",{"_index":1401,"title":{},"body":{"index.html":{}}}],["const",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ApplicationState.html":{},"injectables/CustomSerializer.html":{},"interfaces/EntitiesState.html":{},"classes/GeneralHelper.html":{},"modules/HomeRoutingModule.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{}}}],["constructor",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["constructor(@inject(platform_id",{"_index":781,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["constructor(_statecb",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(actions",{"_index":521,"title":{},"body":{"injectables/EntitiesEffects.html":{},"injectables/RouterEffects.html":{}}}],["constructor(http",{"_index":554,"title":{},"body":{"injectables/EntitiesService.html":{},"injectables/PushNotificationService.html":{}}}],["constructor(platformid",{"_index":676,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"injectables/LocalStorageService.html":{}}}],["constructor(prefix",{"_index":1012,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["constructor(private",{"_index":239,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"injectables/EntitiesService.html":{},"guards/LanguageGuard.html":{},"injectables/PushNotificationService.html":{},"interceptors/UniversalInterceptor.html":{}}}],["constructor(replayer",{"_index":715,"title":{},"body":{"components/HomePageComponent.html":{}}}],["constructor(router",{"_index":751,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["constructor(store",{"_index":220,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{}}}],["constructor(title",{"_index":614,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["constructor(transferstate",{"_index":249,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{}}}],["contain",{"_index":487,"title":{},"body":{"interfaces/ApplicationState.html":{},"miscellaneous/functions.html":{}}}],["contains",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"injectables/RouterEffects.html":{}}}],["contract",{"_index":1570,"title":{},"body":{"license.html":{}}}],["converted",{"_index":1112,"title":{},"body":{"changelog.html":{}}}],["convicia",{"_index":854,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["copies",{"_index":1540,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1525,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1512,"title":{},"body":{"license.html":{}}}],["core",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["coreapphttpinterceptor",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["correct",{"_index":1172,"title":{},"body":{"changelog.html":{}}}],["country",{"_index":596,"title":{},"body":{"interfaces/EntityInterface.html":{},"components/HomePageComponent.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":1248,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{},"unit-test.html":{}}}],["create",{"_index":1409,"title":{},"body":{"index.html":{}}}],["createaction",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[entities",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[router",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createapplicationreducer",{"_index":484,"title":{},"body":{"interfaces/ApplicationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createapplicationreducer(state",{"_index":493,"title":{},"body":{"interfaces/ApplicationState.html":{}}}],["created",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["createeffect",{"_index":524,"title":{},"body":{"injectables/EntitiesEffects.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/RouterEffects.html":{}}}],["createentityadapter",{"_index":568,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["createfeatureselector('applicationstate",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createfeatureselector('entitiesstate",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createfeatureselector('notifications",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createfeatureselector>('routerstate",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreducer",{"_index":481,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["createselector",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectfeature",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createtranslateloader",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["crud",{"_index":552,"title":{},"body":{"injectables/EntitiesService.html":{}}}],["cucumber",{"_index":1231,"title":{"additional-documentation/e2e-testing-report-(cucumber).html":{}},"body":{"changelog.html":{},"index.html":{}}}],["cucumber.conf.js",{"_index":1228,"title":{},"body":{"changelog.html":{}}}],["cucurri",{"_index":907,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["cum",{"_index":844,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["cupidine",{"_index":835,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["currency",{"_index":597,"title":{},"body":{"interfaces/EntityInterface.html":{},"components/HomePageComponent.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["currencypipe",{"_index":1007,"title":{},"body":{"modules/SharedModule.html":{}}}],["current",{"_index":778,"title":{},"body":{"injectables/LocalStorageService.html":{},"index.html":{}}}],["custodes",{"_index":816,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["custom",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"miscellaneous/functions.html":{}}}],["custom_elements_schema",{"_index":608,"title":{},"body":{"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["customserializer",{"_index":425,"title":{"injectables/CustomSerializer.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"coverage.html":{}}}],["customserialzer",{"_index":427,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["damages",{"_index":1567,"title":{},"body":{"license.html":{}}}],["danger",{"_index":944,"title":{},"body":{"interfaces/NotificationInterface.html":{}}}],["dangling",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["dantque",{"_index":818,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/EntitiesService.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{}}}],["data.sort((a",{"_index":665,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["date",{"_index":932,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"miscellaneous/variables.html":{}}}],["date(a[field]).gettime",{"_index":671,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["date(b[field]).gettime",{"_index":670,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["dateformat",{"_index":598,"title":{},"body":{"interfaces/EntityInterface.html":{},"components/HomePageComponent.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["datesort",{"_index":640,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["datesort(data",{"_index":646,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["dd",{"_index":800,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["de",{"_index":832,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["deal",{"_index":1528,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1575,"title":{},"body":{"license.html":{}}}],["dealsstate",{"_index":594,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["declare",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":779,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["default",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"injectables/EntitiesEffects.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"injectables/RouterEffects.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":1005,"title":{},"body":{"interfaces/RouterStateUrl.html":{}}}],["defined",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defines",{"_index":216,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/UniversalInterceptor.html":{}}}],["delete",{"_index":472,"title":{},"body":{"modules/AppServerModule.html":{}}}],["delimiter",{"_index":663,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["delphos",{"_index":893,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":273,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["der",{"_index":1516,"title":{},"body":{"license.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"miscellaneous/functions.html":{}}}],["desktop",{"_index":1671,"title":{"additional-documentation/lighthouse-desktop-report.html":{}},"body":{}}],["destructor",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["detected",{"_index":1240,"title":{},"body":{"changelog.html":{}}}],["detector",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["detects",{"_index":1381,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1460,"title":{},"body":{"index.html":{}}}],["development",{"_index":1200,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["devtools",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["difference",{"_index":1443,"title":{},"body":{"index.html":{}}}],["different",{"_index":1176,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["differential",{"_index":1207,"title":{},"body":{"changelog.html":{}}}],["differentiates",{"_index":488,"title":{},"body":{"interfaces/ApplicationState.html":{},"miscellaneous/functions.html":{}}}],["directive",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["directive's",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["directive/component",{"_index":619,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["directive/component's",{"_index":622,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["directives",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["disable",{"_index":659,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["disabled",{"_index":1234,"title":{},"body":{"changelog.html":{}}}],["dispatch",{"_index":689,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"injectables/RouterEffects.html":{}}}],["dispatched",{"_index":489,"title":{},"body":{"interfaces/ApplicationState.html":{},"miscellaneous/functions.html":{}}}],["dispatches",{"_index":227,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{}}}],["displays",{"_index":620,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["dist",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["distribute",{"_index":1536,"title":{},"body":{"license.html":{}}}],["divitior",{"_index":826,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["doc:full",{"_index":1482,"title":{},"body":{"index.html":{}}}],["docker",{"_index":1116,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["docs",{"_index":1386,"title":{},"body":{"index.html":{}}}],["document",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["document.addeventlistener('prebootcomplete",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["documentation",{"_index":1249,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentation/index.html",{"_index":1485,"title":{},"body":{"index.html":{}}}],["doesn't",{"_index":1122,"title":{},"body":{"changelog.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"changelog.html":{}}}],["dom.queryselectorall(`style[ng",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["dom.removechild(el",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["downgrade",{"_index":1120,"title":{},"body":{"changelog.html":{}}}],["duabus",{"_index":877,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["due",{"_index":1216,"title":{},"body":{"changelog.html":{}}}],["dulce",{"_index":868,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["dum",{"_index":859,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1206,"title":{"additional-documentation/e2e-testing-report-(cucumber).html":{}},"body":{"changelog.html":{},"index.html":{}}}],["each",{"_index":1180,"title":{},"body":{"changelog.html":{}}}],["ecce",{"_index":880,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["effect",{"_index":539,"title":{},"body":{"injectables/EntitiesEffects.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/RouterEffects.html":{},"index.html":{}}}],["effective",{"_index":1458,"title":{},"body":{"index.html":{}}}],["effects",{"_index":518,"title":{},"body":{"injectables/EntitiesEffects.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/RouterEffects.html":{},"changelog.html":{}}}],["effectsmodule",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["effectsmodule.forfeature([entitieseffects",{"_index":709,"title":{},"body":{"modules/HomeModule.html":{}}}],["effectsmodule.forroot([googleanalyticseffects",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["egredior",{"_index":917,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["el.removeattribute('ng",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["email",{"_index":599,"title":{},"body":{"interfaces/EntityInterface.html":{},"components/HomePageComponent.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["emitter",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["en",{"_index":440,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"miscellaneous/variables.html":{}}}],["enabled",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"changelog.html":{},"index.html":{}}}],["enabletracing",{"_index":451,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["end",{"_index":1454,"title":{},"body":{"index.html":{}}}],["engine",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["english",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enim",{"_index":873,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["entities",{"_index":519,"title":{},"body":{"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"components/HomePageComponent.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["entities.actions",{"_index":543,"title":{},"body":{"injectables/EntitiesEffects.html":{},"interfaces/EntitiesState.html":{}}}],["entities.interface",{"_index":545,"title":{},"body":{"injectables/EntitiesEffects.html":{},"interfaces/EntitiesState.html":{}}}],["entitiesactions",{"_index":540,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["entitiesactions.loadfail",{"_index":532,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["entitiesactions.loadsuccess",{"_index":529,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["entitieseffects",{"_index":514,"title":{"injectables/EntitiesEffects.html":{}},"body":{"injectables/EntitiesEffects.html":{},"modules/HomeModule.html":{},"coverage.html":{}}}],["entitiesreducer",{"_index":579,"title":{},"body":{"interfaces/EntitiesState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entitiesreducer(state",{"_index":587,"title":{},"body":{"interfaces/EntitiesState.html":{}}}],["entitiesselectors",{"_index":724,"title":{},"body":{"components/HomePageComponent.html":{}}}],["entitiesservice",{"_index":522,"title":{"injectables/EntitiesService.html":{}},"body":{"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"modules/HomeModule.html":{},"coverage.html":{},"overview.html":{}}}],["entitiesstate",{"_index":387,"title":{"interfaces/EntitiesState.html":{}},"body":{"modules/AppModule.html":{},"interfaces/EntitiesState.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["entitiesstore",{"_index":721,"title":{},"body":{"components/HomePageComponent.html":{}}}],["entity",{"_index":734,"title":{},"body":{"components/HomePageComponent.html":{},"miscellaneous/functions.html":{}}}],["entity.country",{"_index":736,"title":{},"body":{"components/HomePageComponent.html":{}}}],["entity.currency",{"_index":737,"title":{},"body":{"components/HomePageComponent.html":{}}}],["entity.dateformat",{"_index":738,"title":{},"body":{"components/HomePageComponent.html":{}}}],["entity.email",{"_index":739,"title":{},"body":{"components/HomePageComponent.html":{}}}],["entity.guid",{"_index":574,"title":{},"body":{"interfaces/EntitiesState.html":{},"components/HomePageComponent.html":{}}}],["entityadapter",{"_index":569,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["entityinterface",{"_index":544,"title":{"interfaces/EntityInterface.html":{}},"body":{"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"components/HomePageComponent.html":{},"coverage.html":{}}}],["entitystate",{"_index":564,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{}}}],["enviroment",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/EntitiesService.html":{},"injectables/PushNotificationService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.apicookies",{"_index":561,"title":{},"body":{"injectables/EntitiesService.html":{},"injectables/PushNotificationService.html":{}}}],["environment.apiurl}entities",{"_index":560,"title":{},"body":{"injectables/EntitiesService.html":{}}}],["environment.apiurl}notifications",{"_index":980,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["environment.notificationserver}subscription",{"_index":978,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["environment.production",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.vapid_public",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["environments/environment",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/EntitiesService.html":{},"injectables/PushNotificationService.html":{}}}],["eram",{"_index":811,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["erat",{"_index":836,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["erectus",{"_index":815,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["eripe",{"_index":834,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":581,"title":{},"body":{"interfaces/EntitiesState.html":{},"components/ErrorPageComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["error.description",{"_index":633,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["error.heading",{"_index":632,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["errormessage",{"_index":533,"title":{},"body":{"injectables/EntitiesEffects.html":{},"interfaces/EntitiesState.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["errormodule",{"_index":284,"title":{"modules/ErrorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errorpagecomponent",{"_index":201,"title":{"components/ErrorPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errors",{"_index":1415,"title":{},"body":{"index.html":{}}}],["es2015",{"_index":1212,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["es5",{"_index":1210,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eslint",{"_index":658,"title":{},"body":{"classes/GeneralHelper.html":{},"changelog.html":{}}}],["eslint/member",{"_index":662,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["eslint/semi",{"_index":661,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["est",{"_index":805,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["et",{"_index":808,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["et](http://thymo",{"_index":881,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["et](http://www.ingeniis",{"_index":895,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["eur",{"_index":799,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":681,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"interceptors/UniversalInterceptor.html":{},"license.html":{}}}],["event.body",{"_index":1032,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["event.urlafterredirects",{"_index":687,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["eventreplayer",{"_index":716,"title":{},"body":{"components/HomePageComponent.html":{}}}],["example",{"_index":942,"title":{},"body":{"interfaces/NotificationInterface.html":{},"changelog.html":{},"index.html":{}}}],["examples",{"_index":1497,"title":{},"body":{"index.html":{}}}],["execute",{"_index":1455,"title":{},"body":{"index.html":{}}}],["exist",{"_index":756,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["exit",{"_index":875,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["experience",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["exports",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["express",{"_index":1332,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extendable",{"_index":495,"title":{},"body":{"components/BaseComponent.html":{}}}],["extendedngondestroy",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["extendible",{"_index":1222,"title":{},"body":{"changelog.html":{}}}],["extends",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/EntitiesState.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/NotificationsState.html":{}}}],["extras",{"_index":991,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["factory",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["fail",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failed",{"_index":1475,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["fails",{"_index":1471,"title":{},"body":{"index.html":{}}}],["fallbacklanguage",{"_index":758,"title":{},"body":{"guards/LanguageGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":246,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"modules/AppRoutingModule.html":{},"interfaces/ApplicationState.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"interfaces/EntitiesState.html":{},"injectables/GoogleAnalyticsEffects.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"injectables/RouterEffects.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":1357,"title":{},"body":{"index.html":{}}}],["faster",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["fd8c",{"_index":794,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["features",{"_index":1051,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["femina",{"_index":807,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["ferrum",{"_index":831,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":647,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"unit-test.html":{}}}],["files",{"_index":1194,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["filter",{"_index":694,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["filter((event",{"_index":680,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["finalize",{"_index":235,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{}}}],["first",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"changelog.html":{}}}],["firstchild",{"_index":788,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{}}}],["fitness",{"_index":1559,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1086,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fixed",{"_index":1187,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":1186,"title":{},"body":{"changelog.html":{}}}],["flatten",{"_index":643,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["flattened",{"_index":651,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["flattened[key",{"_index":657,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["flattenedmessage",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["flattensobject",{"_index":639,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["flebile",{"_index":899,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["flickering",{"_index":1147,"title":{},"body":{"changelog.html":{}}}],["folder",{"_index":1081,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["following",{"_index":1545,"title":{},"body":{"license.html":{}}}],["formae",{"_index":918,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["formidine",{"_index":869,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["forward",{"_index":1305,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":630,"title":{},"body":{"components/ErrorPageComponent.html":{},"index.html":{}}}],["fount",{"_index":1484,"title":{},"body":{"index.html":{}}}],["free",{"_index":1521,"title":{},"body":{"license.html":{}}}],["fromapplication",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["fromapplication.reducer",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["fromentities",{"_index":707,"title":{},"body":{"modules/HomeModule.html":{}}}],["fromentities.reducer",{"_index":712,"title":{},"body":{"modules/HomeModule.html":{}}}],["fromnotifications",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["fromnotifications.reducer",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["fromreducer.selectall",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fromrouter",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["fs",{"_index":1019,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["fs.readfilesync",{"_index":1023,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["fugiunt",{"_index":916,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["full",{"_index":446,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["function",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"interfaces/NotificationsState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functionality",{"_index":1433,"title":{},"body":{"index.html":{}}}],["functions",{"_index":1346,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"unit-test.html":{}}}],["furnished",{"_index":1543,"title":{},"body":{"license.html":{}}}],["general",{"_index":636,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["generalhelper",{"_index":130,"title":{"classes/GeneralHelper.html":{}},"body":{"components/AppComponent.html":{},"classes/GeneralHelper.html":{},"coverage.html":{}}}],["generalhelper.datesort",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["generalhelper.flattensobject(message",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["generalhelper.flattensobject(obj[key",{"_index":656,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["generate",{"_index":1407,"title":{},"body":{"index.html":{}}}],["generation",{"_index":1377,"title":{},"body":{"index.html":{}}}],["getall",{"_index":553,"title":{},"body":{"injectables/EntitiesService.html":{}}}],["getdom",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["getdom().getdefaultdocument",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["getentities",{"_index":520,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["getinitialstate",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getmetareducers",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getmetareducers(savekeys",{"_index":1354,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrouterinfo",{"_index":1308,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getrouterlanguage",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gets",{"_index":765,"title":{},"body":{"injectables/LocalStorageService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["getsavedstate",{"_index":766,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getsavedstate(localstoragekey",{"_index":769,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getting",{"_index":1033,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettranslation",{"_index":1011,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["gettranslation(lang",{"_index":1015,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["git",{"_index":1121,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["gitignore",{"_index":1083,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"classes/GeneralHelper.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"classes/TranslateUniversalLoader.html":{},"miscellaneous/functions.html":{}}}],["global.something",{"_index":534,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["go",{"_index":1306,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["google",{"_index":1383,"title":{},"body":{"index.html":{}}}],["googleanalytics",{"_index":674,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["googleanalyticseffects",{"_index":335,"title":{"injectables/GoogleAnalyticsEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/GoogleAnalyticsEffects.html":{},"coverage.html":{}}}],["granted",{"_index":1520,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1579,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":745,"title":{"guards/LanguageGuard.html":{}},"body":{"guards/LanguageGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":421,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["guard.service.ts",{"_index":748,"title":{},"body":{"guards/LanguageGuard.html":{},"coverage.html":{}}}],["guard.service.ts:17",{"_index":752,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["guard.service.ts:26",{"_index":755,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["guards",{"_index":746,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["guid",{"_index":600,"title":{},"body":{"interfaces/EntityInterface.html":{},"components/HomePageComponent.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["gzipped",{"_index":1427,"title":{},"body":{"index.html":{}}}],["haec",{"_index":833,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["handle",{"_index":1179,"title":{},"body":{"changelog.html":{}}}],["handle(request",{"_index":244,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{}}}],["handled",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["handling",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["haut",{"_index":840,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["hello",{"_index":732,"title":{},"body":{"components/HomePageComponent.html":{}}}],["helper",{"_index":637,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["helpers/general.helper",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["herbis",{"_index":842,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["hereby",{"_index":1519,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1564,"title":{},"body":{"license.html":{}}}],["home",{"_index":714,"title":{},"body":{"components/HomePageComponent.html":{}}}],["homemodule",{"_index":696,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homepagecomponent",{"_index":202,"title":{"components/HomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["homeroutingmodule",{"_index":701,"title":{"modules/HomeRoutingModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["hooks",{"_index":1074,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["hot",{"_index":1398,"title":{},"body":{"index.html":{}}}],["html",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"index.html":{}}}],["htmldocument",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["http",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"injectables/EntitiesService.html":{},"injectables/PushNotificationService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["http_interceptors",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["httpclient",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"injectables/EntitiesService.html":{},"injectables/PushNotificationService.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":231,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{}}}],["httphandler",{"_index":224,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{}}}],["httpheaders",{"_index":557,"title":{},"body":{"injectables/EntitiesService.html":{},"injectables/PushNotificationService.html":{}}}],["httpinterceptor",{"_index":232,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["httprequest",{"_index":223,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{}}}],["httpresponse",{"_index":226,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"injectables/EntitiesEffects.html":{},"interceptors/UniversalInterceptor.html":{}}}],["https",{"_index":1405,"title":{},"body":{"index.html":{}}}],["https/http2",{"_index":1114,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["https://angular",{"_index":1508,"title":{},"body":{"index.html":{}}}],["https://angular.rickvandermeij.nl",{"_index":1507,"title":{},"body":{"index.html":{}}}],["https://localhost:4000",{"_index":1402,"title":{},"body":{"index.html":{}}}],["https://localhost:4000/api",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://localhost:4000/assets",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://localhost:4000/mocking",{"_index":1496,"title":{},"body":{"index.html":{}}}],["https://localhost:4000/notification",{"_index":1500,"title":{},"body":{"index.html":{}}}],["https://localhost:4000/v1",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://localhost:4202",{"_index":1397,"title":{},"body":{"index.html":{}}}],["https://localhost:8081",{"_index":1503,"title":{},"body":{"index.html":{}}}],["huc",{"_index":812,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["husky",{"_index":1072,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["i18n",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"classes/TranslateUniversalLoader.html":{},"miscellaneous/functions.html":{}}}],["id",{"_index":931,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1250,"title":{},"body":{"coverage.html":{}}}],["idomeneus",{"_index":841,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["ids",{"_index":926,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["ignore",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"injectables/LocalStorageService.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["ignored",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["illa",{"_index":902,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["image",{"_index":1117,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":1498,"title":{},"body":{"index.html":{}}}],["imago",{"_index":817,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["immediately",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["imperat.\\r\\n",{"_index":897,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["implemented",{"_index":1146,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["implements",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppRoutingModule.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["implied",{"_index":1555,"title":{},"body":{"license.html":{}}}],["import",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["import('../pages/home/home.module').then",{"_index":443,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["important",{"_index":471,"title":{},"body":{"modules/AppServerModule.html":{}}}],["imports",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{}}}],["included",{"_index":1550,"title":{},"body":{"license.html":{}}}],["including",{"_index":1531,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":213,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/UniversalInterceptor.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"miscellaneous/variables.html":{}}}],["inherited",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["initalstate",{"_index":1355,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initial",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationState.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["initialize",{"_index":618,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["initialnavigation",{"_index":452,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["initialstate",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"modules/HomeModule.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initital",{"_index":791,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{}}}],["inject",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/LocalStorageService.html":{}}}],["inject(platform_id",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/LocalStorageService.html":{}}}],["inject(state_cb",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["injectable",{"_index":234,"title":{"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{}},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"injectables/GoogleAnalyticsEffects.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interceptors/UniversalInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":512,"title":{},"body":{"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"overview.html":{}}}],["injectiontoken",{"_index":567,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('appstorage",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('storekeys",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('to",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inline",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["inpetus\\r\\nlorem",{"_index":813,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["inpius",{"_index":822,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["inposita",{"_index":913,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":623,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["inside",{"_index":1080,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["instance",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["instanceof",{"_index":682,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"interceptors/UniversalInterceptor.html":{}}}],["instantiated",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{}}}],["integer",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["integrates",{"_index":1153,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["intercept",{"_index":219,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{}}}],["intercept(req",{"_index":252,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{}}}],["intercept(request",{"_index":222,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{}}}],["interceptor",{"_index":208,"title":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{}},"body":{"modules/AppModule.html":{},"changelog.html":{},"coverage.html":{}}}],["interceptors",{"_index":210,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppServerModule.html":{},"interceptors/UniversalInterceptor.html":{}}}],["interceptors/http.interceptor",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["intercepts",{"_index":212,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{}}}],["interface",{"_index":473,"title":{"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"interfaces/RouterStateUrl.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"interfaces/RouterStateUrl.html":{},"coverage.html":{}}}],["interfaces",{"_index":474,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"interfaces/RouterStateUrl.html":{},"overview.html":{}}}],["internet",{"_index":1438,"title":{},"body":{"index.html":{}}}],["introduced",{"_index":1160,"title":{},"body":{"changelog.html":{}}}],["invoked",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["isloaded",{"_index":927,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["isloading",{"_index":565,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["iso",{"_index":735,"title":{},"body":{"components/HomePageComponent.html":{}}}],["ispendingrequest",{"_index":241,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interfaces/ApplicationState.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["isplatformbrowser",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/LocalStorageService.html":{}}}],["isplatformbrowser(platformid",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["isplatformbrowser(this.platformid",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/LocalStorageService.html":{}}}],["issue",{"_index":1188,"title":{},"body":{"changelog.html":{}}}],["issue(s",{"_index":1477,"title":{},"body":{"index.html":{}}}],["issues",{"_index":1205,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["istanbul",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"injectables/LocalStorageService.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["ita",{"_index":908,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["item",{"_index":572,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{}}}],["iuvat",{"_index":925,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["iuvenis",{"_index":809,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["ivy",{"_index":1131,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["java",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":1113,"title":{},"body":{"changelog.html":{}}}],["jest",{"_index":1042,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["js",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/LocalStorageService.html":{},"classes/TranslateUniversalLoader.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["json.parse",{"_index":1022,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["json.parse(sessionstorage.getitem(localstoragekey",{"_index":784,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(state",{"_index":783,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["karma/jasmine",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":773,"title":{},"body":{"injectables/LocalStorageService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["keys",{"_index":1107,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1554,"title":{},"body":{"license.html":{}}}],["known",{"_index":1476,"title":{},"body":{"index.html":{}}}],["lacertis",{"_index":847,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["lang",{"_index":1017,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["language",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"guards/LanguageGuard.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"classes/TranslateUniversalLoader.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["languageguard",{"_index":419,"title":{"guards/LanguageGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"guards/LanguageGuard.html":{},"coverage.html":{}}}],["languages",{"_index":759,"title":{},"body":{"guards/LanguageGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["languages.includes(next.params.language",{"_index":761,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["languageslabels",{"_index":1259,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["languagesregex",{"_index":1260,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["larger",{"_index":1435,"title":{},"body":{"index.html":{}}}],["lassant",{"_index":850,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["latest",{"_index":1058,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["lato",{"_index":871,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["lazy",{"_index":1373,"title":{},"body":{"index.html":{}}}],["legacy",{"_index":1370,"title":{},"body":{"index.html":{}}}],["legend",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/BaseComponent.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"overview.html":{}}}],["liability",{"_index":1568,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1565,"title":{},"body":{"license.html":{}}}],["license",{"_index":1510,"title":{"license.html":{}},"body":{"license.html":{}}}],["lifecycle",{"_index":1169,"title":{},"body":{"changelog.html":{}}}],["lighthouse",{"_index":1141,"title":{"additional-documentation/lighthouse-mobile-report.html":{},"additional-documentation/lighthouse-desktop-report.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["limitation",{"_index":1532,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1556,"title":{},"body":{"license.html":{}}}],["lines",{"_index":1584,"title":{},"body":{"unit-test.html":{}}}],["lint",{"_index":1447,"title":{},"body":{"index.html":{}}}],["linting",{"_index":1414,"title":{},"body":{"index.html":{}}}],["literal",{"_index":566,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{}}}],["load",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/EntitiesEffects.html":{},"components/HomePageComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":442,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["loader",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["loadfail",{"_index":549,"title":{},"body":{"injectables/EntitiesEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":1208,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loadnotifications",{"_index":963,"title":{},"body":{"injectables/PushNotificationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadnotificationsfail",{"_index":1298,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadnotificationssuccess",{"_index":1299,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadsuccess",{"_index":548,"title":{},"body":{"injectables/EntitiesEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["local_storage_key",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localhost",{"_index":1404,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":772,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["localstoragekey",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["localstorageservice",{"_index":318,"title":{"injectables/LocalStorageService.html":{}},"body":{"modules/AppModule.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["location",{"_index":985,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["lock.json",{"_index":1197,"title":{},"body":{"changelog.html":{}}}],["locus",{"_index":819,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["lodash.merge",{"_index":1334,"title":{},"body":{"dependencies.html":{}}}],["lodash.pick",{"_index":1336,"title":{},"body":{"dependencies.html":{}}}],["lucum",{"_index":878,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["lumina",{"_index":901,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["lustrantem",{"_index":911,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":444,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["m.homemodule",{"_index":445,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["mac",{"_index":1389,"title":{},"body":{"index.html":{}}}],["make",{"_index":1108,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":968,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["makestatekey",{"_index":256,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{}}}],["makestatekey(req.url",{"_index":263,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{}}}],["male",{"_index":804,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["management",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["manibus",{"_index":909,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["map",{"_index":1001,"title":{},"body":{"injectables/RouterEffects.html":{},"changelog.html":{}}}],["map((action",{"_index":988,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["marbles",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["markdown",{"_index":601,"title":{},"body":{"interfaces/EntityInterface.html":{},"modules/HomeModule.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["markdownmodule",{"_index":703,"title":{},"body":{"modules/HomeModule.html":{}}}],["markdownmodule.forroot",{"_index":710,"title":{},"body":{"modules/HomeModule.html":{}}}],["markdownum",{"_index":814,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["marks",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{}}}],["matching",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{},"miscellaneous/variables.html":{},"additional-documentation/bundle-analytics.html":{},"additional-documentation/e2e-testing-report-(cucumber).html":{},"additional-documentation/lighthouse-mobile-report.html":{},"additional-documentation/lighthouse-desktop-report.html":{}}}],["mater",{"_index":914,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["means",{"_index":1413,"title":{},"body":{"index.html":{}}}],["media",{"_index":922,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["meij",{"_index":1517,"title":{},"body":{"license.html":{}}}],["meorum",{"_index":843,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1558,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1294,"title":{},"body":{"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":929,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["meta",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["metareducer",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["method",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["methods",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesService.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["migrate",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["mihi",{"_index":884,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1345,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1511,"title":{},"body":{"license.html":{}}}],["mm",{"_index":801,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":1670,"title":{"additional-documentation/lighthouse-mobile-report.html":{}},"body":{}}],["mock",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["mockactivestatesnapshot",{"_index":785,"title":{"interfaces/MockActiveStateSnapshot.html":{}},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"coverage.html":{}}}],["mocked",{"_index":789,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"index.html":{}}}],["mocking",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockrouterstatesnapshot",{"_index":790,"title":{"interfaces/MockRouterStateSnapshot.html":{}},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"coverage.html":{}}}],["mockserver",{"_index":1105,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mode",{"_index":1363,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["modern",{"_index":1369,"title":{},"body":{"index.html":{}}}],["modify",{"_index":1534,"title":{},"body":{"license.html":{}}}],["module",{"_index":270,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"overview.html":{}}}],["modules",{"_index":272,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/shared.module",{"_index":610,"title":{},"body":{"modules/ErrorModule.html":{},"modules/HomeModule.html":{}}}],["molior",{"_index":892,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1368,"title":{},"body":{"index.html":{}}}],["moved",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["moving",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["multi",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["multidimensional",{"_index":644,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["mutablesubscriptions",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["mutilatae\\r\\n",{"_index":915,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"miscellaneous/functions.html":{}}}],["natusque",{"_index":806,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["navigate",{"_index":982,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["navigateback",{"_index":983,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["navigateforward",{"_index":984,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["navigationend",{"_index":683,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["navigationextras",{"_index":1000,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["ne",{"_index":848,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["nederlands",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":1406,"title":{},"body":{"index.html":{}}}],["needs",{"_index":1142,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["network",{"_index":1442,"title":{},"body":{"index.html":{}}}],["new",{"_index":266,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"classes/GeneralHelper.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"injectables/PushNotificationService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["next.handle(req",{"_index":260,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{}}}],["next.handle(req).pipe",{"_index":1030,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["ng",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["ngfactory",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["ngmodule",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngonchanges",{"_index":625,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["ngondestroy",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["ngoninit",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["ngrx",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/EntitiesEffects.html":{},"components/HomePageComponent.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ngrx.io",{"_index":1372,"title":{},"body":{"index.html":{}}}],["ngrx/effects",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"injectables/EntitiesEffects.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"injectables/RouterEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":570,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"interfaces/NotificationsState.html":{},"injectables/RouterEffects.html":{},"dependencies.html":{}}}],["ngrx/store/src/models",{"_index":547,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["nguniversal/express",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["nguniversal/module",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["ngx",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/ErrorPageComponent.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["nisi",{"_index":920,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["nl",{"_index":798,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["nl\\/|\\/en",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node",{"_index":1420,"title":{},"body":{"index.html":{}}}],["nondum",{"_index":825,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":1562,"title":{},"body":{"license.html":{}}}],["normal",{"_index":1423,"title":{},"body":{"index.html":{}}}],["note",{"_index":1504,"title":{},"body":{"index.html":{}}}],["nothing",{"_index":935,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["notice",{"_index":1548,"title":{},"body":{"license.html":{}}}],["notification",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["notificationactions",{"_index":947,"title":{},"body":{"interfaces/NotificationsState.html":{}}}],["notificationinterface",{"_index":101,"title":{"interfaces/NotificationInterface.html":{}},"body":{"components/AppComponent.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"coverage.html":{}}}],["notificationreducer",{"_index":950,"title":{},"body":{"interfaces/NotificationsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notificationreducer(state",{"_index":959,"title":{},"body":{"interfaces/NotificationsState.html":{}}}],["notifications",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["notifications.actions",{"_index":948,"title":{},"body":{"interfaces/NotificationsState.html":{}}}],["notifications.interface",{"_index":949,"title":{},"body":{"interfaces/NotificationsState.html":{}}}],["notifications.service",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["notifications.service.ts",{"_index":961,"title":{},"body":{"injectables/PushNotificationService.html":{},"coverage.html":{}}}],["notifications.service.ts:12",{"_index":966,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["notifications.service.ts:20",{"_index":975,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["notifications.service.ts:33",{"_index":967,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["notifications.service.ts:65",{"_index":971,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["notifications/push",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/PushNotificationService.html":{},"coverage.html":{}}}],["notificationserver",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notificationsstate",{"_index":945,"title":{"interfaces/NotificationsState.html":{}},"body":{"interfaces/NotificationsState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["notificationstate",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["novissima",{"_index":827,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["now",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":1223,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["null",{"_index":264,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"interfaces/EntitiesState.html":{},"classes/GeneralHelper.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":938,"title":{},"body":{"interfaces/NotificationInterface.html":{}}}],["numine",{"_index":883,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["nvm",{"_index":1419,"title":{},"body":{"index.html":{}}}],["nymphas",{"_index":823,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["obj",{"_index":645,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["obj[key",{"_index":654,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["object",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"classes/GeneralHelper.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":655,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["object.keys(obj).foreach((key",{"_index":652,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["observable",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"classes/TranslateUniversalLoader.html":{}}}],["observable.create((observer",{"_index":1020,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["observe",{"_index":562,"title":{},"body":{"injectables/EntitiesService.html":{},"injectables/PushNotificationService.html":{}}}],["observer.complete",{"_index":1026,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["observer.next",{"_index":1021,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["obsolete",{"_index":1099,"title":{},"body":{"changelog.html":{}}}],["obtaining",{"_index":1524,"title":{},"body":{"license.html":{}}}],["odorant",{"_index":924,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["oetaeus",{"_index":849,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["of(response",{"_index":269,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{}}}],["oftype",{"_index":541,"title":{},"body":{"injectables/EntitiesEffects.html":{},"injectables/RouterEffects.html":{}}}],["oftype(entitiesactions.load",{"_index":526,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["oftype(routeractions.back",{"_index":994,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["oftype(routeractions.forward",{"_index":997,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["oftype(routeractions.go",{"_index":987,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["omnes",{"_index":903,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["on(actions.clearerror",{"_index":586,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["on(actions.load",{"_index":580,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["on(actions.loadfail",{"_index":585,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["on(actions.loadsuccess",{"_index":582,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["on(applicationactions.setrequeststatus",{"_index":485,"title":{},"body":{"interfaces/ApplicationState.html":{},"miscellaneous/variables.html":{}}}],["on(notificationactions.addnotification",{"_index":953,"title":{},"body":{"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["on(notificationactions.clearnotifications",{"_index":955,"title":{},"body":{"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["on(notificationactions.loadnotificationssuccess",{"_index":951,"title":{},"body":{"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["once",{"_index":624,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["ondestroy",{"_index":497,"title":{},"body":{"components/BaseComponent.html":{}}}],["oninit",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"changelog.html":{}}}],["onsameurlnavigation",{"_index":453,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["optimization",{"_index":1488,"title":{},"body":{"index.html":{}}}],["option",{"_index":1237,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":1144,"title":{},"body":{"changelog.html":{}}}],["ossa",{"_index":855,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":1572,"title":{},"body":{"license.html":{}}}],["out",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1580,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1077,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":1119,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["packages",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":62,"title":{"additional-documentation/bundle-analytics.html":{},"additional-documentation/e2e-testing-report-(cucumber).html":{},"additional-documentation/lighthouse-mobile-report.html":{},"additional-documentation/lighthouse-desktop-report.html":{}},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{}}}],["page.component",{"_index":743,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["page.component.html",{"_index":613,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["page.component.ts",{"_index":612,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["page.component.ts:17",{"_index":616,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.ts:25",{"_index":626,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.ts:26",{"_index":720,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:27",{"_index":717,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:35",{"_index":617,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.ts:50",{"_index":719,"title":{},"body":{"components/HomePageComponent.html":{}}}],["pages",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{}}}],["pages/home/home",{"_index":742,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["pageview",{"_index":675,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["param",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["parameters",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/RouterStateUrl.html":{},"miscellaneous/variables.html":{}}}],["parientem",{"_index":891,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["pariter",{"_index":829,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":1560,"title":{},"body":{"license.html":{}}}],["partu",{"_index":839,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"modules/HomeRoutingModule.html":{},"injectables/RouterEffects.html":{},"changelog.html":{}}}],["pathmatch",{"_index":437,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["patruique",{"_index":886,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["peioris",{"_index":830,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["pending",{"_index":218,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interfaces/ApplicationState.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{}}}],["perfect",{"_index":1395,"title":{},"body":{"index.html":{}}}],["perform",{"_index":491,"title":{},"body":{"interfaces/ApplicationState.html":{},"miscellaneous/functions.html":{}}}],["performance",{"_index":1487,"title":{},"body":{"index.html":{}}}],["permission",{"_index":1518,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1541,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":750,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["person",{"_index":1523,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1542,"title":{},"body":{"license.html":{}}}],["pick",{"_index":1295,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":245,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{}}}],["pipeline",{"_index":1464,"title":{},"body":{"index.html":{}}}],["piscator",{"_index":919,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["place",{"_index":693,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"index.html":{}}}],["platform_id",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/LocalStorageService.html":{}}}],["platformid",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/LocalStorageService.html":{}}}],["plus",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["plus:browser",{"_index":1209,"title":{},"body":{"changelog.html":{}}}],["ponendi",{"_index":860,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["port",{"_index":1495,"title":{},"body":{"index.html":{}}}],["portions",{"_index":1552,"title":{},"body":{"license.html":{}}}],["posito",{"_index":905,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["posse",{"_index":845,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["posset",{"_index":870,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["possible",{"_index":1109,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["post",{"_index":973,"title":{},"body":{"injectables/PushNotificationService.html":{},"index.html":{}}}],["postquam",{"_index":888,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["powerful",{"_index":1360,"title":{},"body":{"index.html":{}}}],["prato",{"_index":872,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["pre",{"_index":1463,"title":{},"body":{"index.html":{}}}],["preboot",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"components/HomePageComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["prebootmodule",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["prebootmodule.withconfig",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["prefix",{"_index":438,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"classes/TranslateUniversalLoader.html":{}}}],["prerender",{"_index":1133,"title":{},"body":{"changelog.html":{}}}],["prerender.rickvandermeij.nl",{"_index":1509,"title":{},"body":{"index.html":{}}}],["prerender:build",{"_index":1428,"title":{},"body":{"index.html":{}}}],["prerendering",{"_index":1375,"title":{},"body":{"index.html":{}}}],["prettifies",{"_index":940,"title":{},"body":{"interfaces/NotificationInterface.html":{}}}],["prettytimestamp",{"_index":937,"title":{},"body":{"interfaces/NotificationInterface.html":{}}}],["prevent",{"_index":403,"title":{},"body":{"modules/AppModule.html":{}}}],["preventing",{"_index":1364,"title":{},"body":{"index.html":{}}}],["previous",{"_index":1136,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"injectables/EntitiesEffects.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"injectables/RouterEffects.html":{},"classes/TranslateUniversalLoader.html":{}}}],["procnes\\r\\n",{"_index":810,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":1424,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":1379,"title":{},"body":{"index.html":{}}}],["project",{"_index":1430,"title":{},"body":{"index.html":{}}}],["projects",{"_index":1436,"title":{},"body":{"index.html":{}}}],["properties",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/EntitiesEffects.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{}}}],["props",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protected",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["protractor",{"_index":1214,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["provide",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"classes/TranslateUniversalLoader.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":792,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":258,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{}}}],["providers",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["provides",{"_index":551,"title":{},"body":{"injectables/EntitiesService.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"classes/TranslateUniversalLoader.html":{},"miscellaneous/variables.html":{}}}],["publish",{"_index":1535,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1561,"title":{},"body":{"license.html":{}}}],["push",{"_index":962,"title":{},"body":{"injectables/PushNotificationService.html":{},"changelog.html":{},"index.html":{}}}],["pushing",{"_index":1365,"title":{},"body":{"index.html":{}}}],["pushnotificationservice",{"_index":47,"title":{"injectables/PushNotificationService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/PushNotificationService.html":{},"coverage.html":{},"overview.html":{}}}],["pushservice",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["pushsubscription",{"_index":974,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["pwa",{"_index":1378,"title":{},"body":{"index.html":{}}}],["q",{"_index":934,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["qua",{"_index":890,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["quae\\r\\n",{"_index":906,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["que.\\r\\n",{"_index":858,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":990,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["queryparams",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"miscellaneous/variables.html":{}}}],["quickstart",{"_index":1219,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["quod",{"_index":853,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["quoque",{"_index":885,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":1367,"title":{},"body":{"index.html":{}}}],["readme.md",{"_index":1202,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["redirectto",{"_index":439,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["reducer",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/NotificationsState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":492,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"miscellaneous/functions.html":{}}}],["reducertoken",{"_index":593,"title":{},"body":{"interfaces/EntitiesState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":454,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["reloading",{"_index":1399,"title":{},"body":{"index.html":{}}}],["remove",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{},"index.html":{}}}],["removed",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":1243,"title":{},"body":{"changelog.html":{}}}],["rendered",{"_index":1170,"title":{},"body":{"changelog.html":{}}}],["rendering",{"_index":1191,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["replayer",{"_index":718,"title":{},"body":{"components/HomePageComponent.html":{}}}],["reply@domein.nl",{"_index":803,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["report",{"_index":1468,"title":{"additional-documentation/e2e-testing-report-(cucumber).html":{},"additional-documentation/lighthouse-mobile-report.html":{},"additional-documentation/lighthouse-desktop-report.html":{}},"body":{"index.html":{}}}],["reporter",{"_index":1384,"title":{},"body":{"index.html":{}}}],["reports",{"_index":1078,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["reports/coverage",{"_index":1466,"title":{},"body":{"index.html":{}}}],["reports/e2e/report",{"_index":1470,"title":{},"body":{"index.html":{}}}],["representing",{"_index":627,"title":{},"body":{"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"components/HomePageComponent.html":{},"interfaces/NotificationInterface.html":{}}}],["represents",{"_index":479,"title":{},"body":{"interfaces/ApplicationState.html":{},"injectables/EntitiesEffects.html":{},"interfaces/NotificationInterface.html":{}}}],["req",{"_index":255,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{}}}],["req.method",{"_index":259,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{}}}],["request",{"_index":217,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{},"miscellaneous/variables.html":{}}}],["requestsubscription",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["require('../../package.json').version",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('lodash.merge",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('lodash.pick",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1410,"title":{},"body":{"index.html":{}}}],["reset",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"overview.html":{}}}],["response",{"_index":265,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"injectables/PushNotificationService.html":{}}}],["response.body.data",{"_index":530,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["restriction",{"_index":1530,"title":{},"body":{"license.html":{}}}],["result",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{},"miscellaneous/variables.html":{},"additional-documentation/bundle-analytics.html":{},"additional-documentation/e2e-testing-report-(cucumber).html":{},"additional-documentation/lighthouse-mobile-report.html":{},"additional-documentation/lighthouse-desktop-report.html":{}}}],["results",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{},"miscellaneous/variables.html":{},"additional-documentation/bundle-analytics.html":{},"additional-documentation/e2e-testing-report-(cucumber).html":{},"additional-documentation/lighthouse-mobile-report.html":{},"additional-documentation/lighthouse-desktop-report.html":{}}}],["retrieves",{"_index":771,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["return",{"_index":243,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"classes/GeneralHelper.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppRoutingModule.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesService.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"miscellaneous/functions.html":{}}}],["rick",{"_index":1514,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1533,"title":{},"body":{"license.html":{}}}],["root",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{}}}],["root'},{'name",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["route",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"guards/LanguageGuard.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"injectables/RouterEffects.html":{},"miscellaneous/variables.html":{}}}],["route.firstchild",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["router",{"_index":677,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"guards/LanguageGuard.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"miscellaneous/variables.html":{}}}],["routeractions",{"_index":1002,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["routereffects",{"_index":330,"title":{"injectables/RouterEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/RouterEffects.html":{},"coverage.html":{}}}],["routerlanguage",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodule",{"_index":414,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{}}}],["routermodule.forchild(routes",{"_index":744,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["routermodule.forroot(approutes",{"_index":450,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["routerreducer",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["routerselector",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["routerstate",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"guards/LanguageGuard.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["routerstate.root",{"_index":429,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["routerstateserializer",{"_index":417,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["routerstatesnapshot",{"_index":415,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"guards/LanguageGuard.html":{}}}],["routerstateurl",{"_index":422,"title":{"interfaces/RouterStateUrl.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"interfaces/RouterStateUrl.html":{},"coverage.html":{}}}],["routes",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["routes/guards/language",{"_index":420,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["routeswithlanguages",{"_index":1271,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing.module.ts",{"_index":413,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"coverage.html":{}}}],["routing.module.ts:22",{"_index":513,"title":{},"body":{"injectables/CustomSerializer.html":{}}}],["routing.ts",{"_index":741,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["run",{"_index":1224,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["runguardsandresolvers",{"_index":448,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["runners",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["running",{"_index":1403,"title":{},"body":{"index.html":{}}}],["runs",{"_index":1449,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"components/BaseComponent.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"classes/TranslateUniversalLoader.html":{},"changelog.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":236,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"injectables/EntitiesEffects.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/RouterEffects.html":{},"interceptors/UniversalInterceptor.html":{}}}],["saepe",{"_index":862,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["sample",{"_index":1483,"title":{},"body":{"index.html":{}}}],["save",{"_index":229,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"injectables/LocalStorageService.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["savekeys",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["scenario",{"_index":1474,"title":{},"body":{"index.html":{}}}],["schemas",{"_index":607,"title":{},"body":{"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["score",{"_index":1396,"title":{},"body":{"index.html":{}}}],["screenshot",{"_index":1472,"title":{},"body":{"index.html":{}}}],["script",{"_index":1457,"title":{},"body":{"index.html":{}}}],["scripts",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["see",{"_index":1181,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["seem",{"_index":1123,"title":{},"body":{"changelog.html":{}}}],["seems",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["select",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{}}}],["select(entitiesselectors.selectallentities",{"_index":727,"title":{},"body":{"components/HomePageComponent.html":{}}}],["select(fromrouter.getrouterlanguage",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["selectall",{"_index":590,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["selectallentities",{"_index":1288,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectallnotifications",{"_index":1302,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selectedentity",{"_index":584,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["selectentities",{"_index":589,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["selectfeature",{"_index":1281,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectguid",{"_index":577,"title":{},"body":{"interfaces/EntitiesState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["selectguid(entity",{"_index":573,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/functions.html":{}}}],["selectid",{"_index":576,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["selectids",{"_index":588,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["selectismakingrequest",{"_index":1282,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectloading",{"_index":1289,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["selectreducerstate",{"_index":1309,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectstandardentities",{"_index":1290,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectstandardids",{"_index":1291,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selecttotal",{"_index":591,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{}}}],["sell",{"_index":1539,"title":{},"body":{"license.html":{}}}],["send",{"_index":972,"title":{},"body":{"injectables/PushNotificationService.html":{},"miscellaneous/variables.html":{}}}],["sendnotification",{"_index":964,"title":{},"body":{"injectables/PushNotificationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sendnotification(notification",{"_index":970,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["sendsubscriptiontotheserver",{"_index":965,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["sendsubscriptiontotheserver(subscription",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"injectables/PushNotificationService.html":{}}}],["sent",{"_index":941,"title":{},"body":{"interfaces/NotificationInterface.html":{}}}],["seo",{"_index":1376,"title":{},"body":{"index.html":{}}}],["seperated",{"_index":1118,"title":{},"body":{"changelog.html":{}}}],["serialize",{"_index":426,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["serialize(routerstate",{"_index":428,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["serializer",{"_index":424,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["servavique",{"_index":867,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["serve",{"_index":1393,"title":{},"body":{"index.html":{}}}],["served",{"_index":1115,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/GoogleAnalyticsEffects.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["server.ts",{"_index":1135,"title":{},"body":{"changelog.html":{}}}],["server:mock",{"_index":1238,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["server:mock:prod",{"_index":1505,"title":{},"body":{"index.html":{}}}],["serverapp",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["servermodule",{"_index":463,"title":{},"body":{"modules/AppServerModule.html":{}}}],["serverpublickey",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["servertransferstatemodule",{"_index":464,"title":{},"body":{"modules/AppServerModule.html":{}}}],["servet",{"_index":864,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/EntitiesService.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"changelog.html":{},"index.html":{}}}],["services",{"_index":1171,"title":{},"body":{"changelog.html":{}}}],["services/entities/entities.service",{"_index":542,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["services/local",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["services/push",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["serviceworkermodule",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["serving",{"_index":1193,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sessionstorage.setitem(localstoragekey",{"_index":782,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["set",{"_index":254,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"interceptors/UniversalInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["setrequeststatus",{"_index":237,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sets",{"_index":621,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"miscellaneous/functions.html":{}}}],["setsavedstate",{"_index":767,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setsavedstate(state",{"_index":774,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["settimeout",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["setup",{"_index":1494,"title":{},"body":{"index.html":{}}}],["shall",{"_index":1549,"title":{},"body":{"license.html":{}}}],["sharedmodule",{"_index":605,"title":{"modules/SharedModule.html":{}},"body":{"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":1241,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":1469,"title":{},"body":{"index.html":{}}}],["si",{"_index":912,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":1190,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["simul.net/neritius",{"_index":882,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["single",{"_index":1452,"title":{},"body":{"index.html":{}}}],["sistitur",{"_index":861,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["sites",{"_index":1506,"title":{},"body":{"index.html":{}}}],["skip",{"_index":1229,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":1441,"title":{},"body":{"index.html":{}}}],["slower",{"_index":1437,"title":{},"body":{"index.html":{}}}],["smells",{"_index":1155,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1526,"title":{},"body":{"license.html":{}}}],["sollicitis",{"_index":887,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["sonarcloud",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["sort",{"_index":641,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["sort(data",{"_index":649,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["spoliis",{"_index":866,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1347,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.server.module.ts",{"_index":1353,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.tokens.ts",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../application.actions.ts",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../application.reducer.ts",{"_index":1349,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../application.selectors.ts",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../entities.actions.ts",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../entities.reducer.ts",{"_index":1350,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../entities.selectors.ts",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.mock.ts",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../globals.ts",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mock",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../notifications.actions.ts",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../notifications.reducer.ts",{"_index":1351,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../notifications.selectors.ts",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../router.actions.ts",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../router.selectors.ts",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../static.paths.ts",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../storage.metareducer.ts",{"_index":1352,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../tokens.ts",{"_index":1348,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:38",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:42",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:58",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:59",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:60",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:61",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:62",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:75",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.server.module.ts",{"_index":462,"title":{},"body":{"modules/AppServerModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/base/base.component.ts",{"_index":494,"title":{},"body":{"components/BaseComponent.html":{},"coverage.html":{}}}],["src/app/components/base/base.component.ts:15",{"_index":503,"title":{},"body":{"components/BaseComponent.html":{}}}],["src/app/components/base/base.component.ts:23",{"_index":499,"title":{},"body":{"components/BaseComponent.html":{}}}],["src/app/components/base/base.component.ts:32",{"_index":502,"title":{},"body":{"components/BaseComponent.html":{}}}],["src/app/components/base/base.component.ts:42",{"_index":500,"title":{},"body":{"components/BaseComponent.html":{}}}],["src/app/components/base/base.component.ts:47",{"_index":501,"title":{},"body":{"components/BaseComponent.html":{}}}],["src/app/globals.ts",{"_index":1256,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/helpers/general.helper.ts",{"_index":635,"title":{},"body":{"classes/GeneralHelper.html":{},"coverage.html":{}}}],["src/app/helpers/general.helper.ts:10",{"_index":642,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["src/app/helpers/general.helper.ts:34",{"_index":650,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["src/app/helpers/general.helper.ts:46",{"_index":648,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["src/app/interceptors/http.interceptor.ts",{"_index":211,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"coverage.html":{}}}],["src/app/interceptors/http.interceptor.ts:18",{"_index":221,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{}}}],["src/app/interceptors/http.interceptor.ts:27",{"_index":225,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{}}}],["src/app/modules/shared.module.ts",{"_index":1006,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/pages/error/error",{"_index":611,"title":{},"body":{"components/ErrorPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/error/error.module.ts",{"_index":606,"title":{},"body":{"modules/ErrorModule.html":{}}}],["src/app/pages/home/home",{"_index":713,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":702,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/routes/app",{"_index":412,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"coverage.html":{}}}],["src/app/routes/effects/google",{"_index":672,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"coverage.html":{}}}],["src/app/routes/guards/language",{"_index":747,"title":{},"body":{"guards/LanguageGuard.html":{},"coverage.html":{}}}],["src/app/routes/home/home",{"_index":740,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["src/app/routes/static.paths.ts",{"_index":1270,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/entities/entities.service.ts",{"_index":550,"title":{},"body":{"injectables/EntitiesService.html":{},"coverage.html":{}}}],["src/app/services/entities/entities.service.ts:12",{"_index":555,"title":{},"body":{"injectables/EntitiesService.html":{}}}],["src/app/services/entities/entities.service.ts:19",{"_index":556,"title":{},"body":{"injectables/EntitiesService.html":{}}}],["src/app/services/local",{"_index":763,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["src/app/services/push",{"_index":960,"title":{},"body":{"injectables/PushNotificationService.html":{},"coverage.html":{}}}],["src/app/ssr/app.interceptor.ts",{"_index":248,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"coverage.html":{}}}],["src/app/ssr/app.interceptor.ts:16",{"_index":251,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{}}}],["src/app/ssr/app.interceptor.ts:26",{"_index":253,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{}}}],["src/app/ssr/http.interceptor.ts",{"_index":1027,"title":{},"body":{"interceptors/UniversalInterceptor.html":{},"coverage.html":{}}}],["src/app/ssr/http.interceptor.ts:16",{"_index":1028,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["src/app/ssr/http.interceptor.ts:25",{"_index":1029,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["src/app/ssr/tokens.ts",{"_index":1278,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/ssr/translate.loader.ts",{"_index":1009,"title":{},"body":{"classes/TranslateUniversalLoader.html":{},"coverage.html":{}}}],["src/app/ssr/translate.loader.ts:12",{"_index":1014,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["src/app/ssr/translate.loader.ts:23",{"_index":1016,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["src/app/store/application/application.actions.ts",{"_index":1279,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/application/application.reducer.ts",{"_index":475,"title":{},"body":{"interfaces/ApplicationState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/application/application.selectors.ts",{"_index":1280,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/entities/entities.actions.ts",{"_index":1283,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/entities/entities.effects.ts",{"_index":515,"title":{},"body":{"injectables/EntitiesEffects.html":{},"coverage.html":{}}}],["src/app/store/entities/entities.effects.ts:17",{"_index":523,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["src/app/store/entities/entities.effects.ts:27",{"_index":538,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["src/app/store/entities/entities.interface.ts",{"_index":595,"title":{},"body":{"interfaces/EntityInterface.html":{},"coverage.html":{}}}],["src/app/store/entities/entities.reducer.ts",{"_index":563,"title":{},"body":{"interfaces/EntitiesState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/entities/entities.selectors.ts",{"_index":1287,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/meta/app.tokens.ts",{"_index":1292,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/meta/storage.metareducer.ts",{"_index":1293,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/notifications/notifications.actions.ts",{"_index":1296,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/notifications/notifications.interface.ts",{"_index":936,"title":{},"body":{"interfaces/NotificationInterface.html":{},"coverage.html":{}}}],["src/app/store/notifications/notifications.reducer.ts",{"_index":946,"title":{},"body":{"interfaces/NotificationsState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/notifications/notifications.selectors.ts",{"_index":1301,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/router/router.actions.ts",{"_index":1303,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/router/router.effects.ts",{"_index":981,"title":{},"body":{"injectables/RouterEffects.html":{},"coverage.html":{}}}],["src/app/store/router/router.effects.ts:16",{"_index":986,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/store/router/router.effects.ts:26",{"_index":993,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/store/router/router.effects.ts:54",{"_index":996,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/store/router/router.effects.ts:66",{"_index":999,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/store/router/router.interface.ts",{"_index":1004,"title":{},"body":{"interfaces/RouterStateUrl.html":{},"coverage.html":{}}}],["src/app/store/router/router.selectors.ts",{"_index":1307,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/testing/mock",{"_index":786,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/testing/mocks.spec.ts",{"_index":1245,"title":{},"body":{"changelog.html":{}}}],["src/environments/environment.mock.ts",{"_index":1312,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1313,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1314,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssg",{"_index":1149,"title":{},"body":{"changelog.html":{}}}],["ssl",{"_index":1392,"title":{},"body":{"index.html":{}}}],["ssr",{"_index":631,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"classes/TranslateUniversalLoader.html":{},"changelog.html":{},"index.html":{}}}],["ssr/app.interceptor",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["ssr/http.interceptor",{"_index":466,"title":{},"body":{"modules/AppServerModule.html":{}}}],["ssr/tokens",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["ssr/translate.loader",{"_index":468,"title":{},"body":{"modules/AppServerModule.html":{}}}],["ssr:build",{"_index":1429,"title":{},"body":{"index.html":{}}}],["stability",{"_index":1128,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":1422,"title":{},"body":{"index.html":{}}}],["start",{"_index":1225,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["start:clean",{"_index":1391,"title":{},"body":{"index.html":{}}}],["start:dist",{"_index":1502,"title":{},"body":{"index.html":{}}}],["start:mock",{"_index":1400,"title":{},"body":{"index.html":{}}}],["start:prerender",{"_index":1446,"title":{},"body":{"index.html":{}}}],["start:ssr",{"_index":1444,"title":{},"body":{"index.html":{}}}],["started",{"_index":1034,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["starterkit",{"_index":1359,"title":{},"body":{"index.html":{}}}],["starterkit/src/app/interceptors/http.interceptor.ts",{"_index":1586,"title":{},"body":{"unit-test.html":{}}}],["starterkit/src/app/pages/home/home",{"_index":1590,"title":{},"body":{"unit-test.html":{}}}],["starterkit/src/app/services/entities/entities.service.ts",{"_index":1593,"title":{},"body":{"unit-test.html":{}}}],["starterkit/src/app/ssr/tokens.ts",{"_index":1595,"title":{},"body":{"unit-test.html":{}}}],["starterkit/src/app/store/application/application.actions.ts",{"_index":1597,"title":{},"body":{"unit-test.html":{}}}],["starterkit/src/app/store/entities/entities.actions.ts",{"_index":1598,"title":{},"body":{"unit-test.html":{}}}],["starterkit/src/app/store/entities/entities.effects.ts",{"_index":1599,"title":{},"body":{"unit-test.html":{}}}],["starterkit/src/app/store/entities/entities.selectors.ts",{"_index":1602,"title":{},"body":{"unit-test.html":{}}}],["starterkit/src/environments/environment.ts",{"_index":1603,"title":{},"body":{"unit-test.html":{}}}],["state",{"_index":477,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"interfaces/RouterStateUrl.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.isloading",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.ispendingrequest",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.params",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.params.language",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.state",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state_cb",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":1251,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["state|undefined",{"_index":957,"title":{},"body":{"interfaces/NotificationsState.html":{}}}],["static",{"_index":638,"title":{},"body":{"classes/GeneralHelper.html":{},"index.html":{}}}],["stats",{"_index":1233,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["status",{"_index":230,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["steps",{"_index":1227,"title":{},"body":{"changelog.html":{}}}],["storage.service",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["storage.service.ts",{"_index":764,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:16",{"_index":775,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:27",{"_index":770,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:8",{"_index":768,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:9",{"_index":780,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage_keys",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storagemetareducer",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["storagemetareducer(savekeys",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["storageservice",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["store",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ApplicationState.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"components/HomePageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["store.ts",{"_index":787,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["store/application/application.actions",{"_index":238,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{}}}],["store/application/application.reducer",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["store/entities/entities.actions",{"_index":722,"title":{},"body":{"components/HomePageComponent.html":{}}}],["store/entities/entities.interface",{"_index":723,"title":{},"body":{"components/HomePageComponent.html":{}}}],["store/entities/entities.selectors",{"_index":725,"title":{},"body":{"components/HomePageComponent.html":{}}}],["store/meta/app.tokens",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["store/meta/storage.metareducer",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["store/notifications/notifications.actions",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["store/notifications/notifications.interface",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"injectables/PushNotificationService.html":{}}}],["store/notifications/notifications.reducer",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["store/router/router.actions",{"_index":1003,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["store/router/router.effects",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["store/router/router.interface",{"_index":423,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["store/router/router.selectors",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["storedevtoolsmodule",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["storedresponse",{"_index":261,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{}}}],["storemodule",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["storemodule.forfeature('entitiesstate",{"_index":711,"title":{},"body":{"modules/HomeModule.html":{}}}],["storemodule.forroot",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["storerouterconnectingmodule",{"_index":418,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":455,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["stores",{"_index":776,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["strict",{"_index":1362,"title":{},"body":{"index.html":{}}}],["stricter",{"_index":1157,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"interfaces/RouterStateUrl.html":{},"classes/TranslateUniversalLoader.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":664,"title":{},"body":{"classes/GeneralHelper.html":{},"index.html":{}}}],["styles",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["styles.foreach((el",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["subject",{"_index":1544,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1537,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["subscription",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"injectables/PushNotificationService.html":{}}}],["subscription.unsubscribe",{"_index":509,"title":{},"body":{"components/BaseComponent.html":{}}}],["subscription['isunsubscribed",{"_index":508,"title":{},"body":{"components/BaseComponent.html":{}}}],["subscriptions",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["substantial",{"_index":1551,"title":{},"body":{"license.html":{}}}],["succeeds",{"_index":1417,"title":{},"body":{"index.html":{}}}],["succesfull",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["success",{"_index":933,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"miscellaneous/variables.html":{}}}],["suffix",{"_index":1013,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["super",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["support",{"_index":1576,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["svg",{"_index":1577,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":527,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["swpush",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["swupdate",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["table",{"_index":1316,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1315,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["tag",{"_index":1230,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":692,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["tangam.io/eloquitur.php",{"_index":896,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["tap",{"_index":695,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"injectables/RouterEffects.html":{},"interceptors/UniversalInterceptor.html":{}}}],["tap((event",{"_index":684,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"interceptors/UniversalInterceptor.html":{}}}],["tela",{"_index":900,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["test",{"_index":930,"title":{"unit-test.html":{}},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"changelog.html":{},"index.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["test:ci",{"_index":1451,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1453,"title":{},"body":{"index.html":{}}}],["test:e2e:fix",{"_index":1479,"title":{},"body":{"index.html":{}}}],["tested",{"_index":1501,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1039,"title":{"additional-documentation/e2e-testing-report-(cucumber).html":{}},"body":{"changelog.html":{},"index.html":{}}}],["tests",{"_index":1416,"title":{},"body":{"index.html":{}}}],["testscheduler",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["then((subscription",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["this._statecb",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["this._statecb(state",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["this.actions$.pipe",{"_index":525,"title":{},"body":{"injectables/EntitiesEffects.html":{},"injectables/RouterEffects.html":{}}}],["this.addsubscription",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{}}}],["this.cd.markforcheck",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["this.entities",{"_index":726,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.entities$.subscribe((entities",{"_index":730,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.entitiesservice.getall().pipe",{"_index":528,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["this.extendedngondestroy",{"_index":511,"title":{},"body":{"components/BaseComponent.html":{}}}],["this.http.get",{"_index":559,"title":{},"body":{"injectables/EntitiesService.html":{}}}],["this.http.get(`${environment.apiurl}notifications",{"_index":979,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["this.http.post",{"_index":977,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["this.location.back",{"_index":995,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["this.location.forward",{"_index":998,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["this.mutablesubscriptions.foreach",{"_index":507,"title":{},"body":{"components/BaseComponent.html":{}}}],["this.mutablesubscriptions.push(subscription",{"_index":506,"title":{},"body":{"components/BaseComponent.html":{}}}],["this.notifications",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["this.notifications.push(flattenedmessage",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["this.prefix}/${lang}${this.suffix",{"_index":1024,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["this.pushservice",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["this.replayer.replayall",{"_index":731,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.router.events.pipe",{"_index":679,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["this.router.navigate(path",{"_index":992,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["this.router.parseurl(`${fallbacklanguage}/404",{"_index":762,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["this.routerlanguage",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["this.routerlanguage$.subscribe((language",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{}}}],["this.store.dispatch(load",{"_index":729,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.store.dispatch(setrequeststatus",{"_index":240,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{}}}],["this.store.pipe",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{}}}],["this.store.subscribe((state",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["this.swpush",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["this.swpush.isenabled",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["this.swpush.messages.subscribe((message",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this.swupdate.available.subscribe",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["this.swupdate.isenabled",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["this.title.settitle('404",{"_index":629,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["this.title.settitle('homepage",{"_index":728,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.transferstate.get",{"_index":262,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{}}}],["this.transferstate.set(makestatekey(req.url",{"_index":1031,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["this.translate.use('en",{"_index":628,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["this.translate.use(language",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["this.unsubscribeall",{"_index":510,"title":{},"body":{"components/BaseComponent.html":{}}}],["through",{"_index":1499,"title":{},"body":{"index.html":{}}}],["time",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["timestamp",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"miscellaneous/variables.html":{}}}],["tinguamus",{"_index":910,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":615,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"injectables/PushNotificationService.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":1571,"title":{},"body":{"license.html":{}}}],["transferstate",{"_index":250,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{}}}],["transferstatekey",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["transition",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["translate",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"classes/TranslateUniversalLoader.html":{},"index.html":{}}}],["translate/core",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/ErrorPageComponent.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"dependencies.html":{}}}],["translate/http",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["translatehttploader(http",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"classes/TranslateUniversalLoader.html":{}}}],["translatemodule",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forchild",{"_index":1008,"title":{},"body":{"modules/SharedModule.html":{}}}],["translatemodule.forroot",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["translateservice",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorPageComponent.html":{},"miscellaneous/functions.html":{}}}],["translateuniversalloader",{"_index":467,"title":{"classes/TranslateUniversalLoader.html":{}},"body":{"modules/AppServerModule.html":{},"classes/TranslateUniversalLoader.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["translateuniversalloader('dist/browser/assets/i18n",{"_index":470,"title":{},"body":{"modules/AppServerModule.html":{}}}],["translateuniversalservice",{"_index":469,"title":{},"body":{"modules/AppServerModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["translations",{"_index":1010,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["travis",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["trigger",{"_index":517,"title":{},"body":{"injectables/EntitiesEffects.html":{},"injectables/GoogleAnalyticsEffects.html":{}}}],["triggered",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"injectables/EntitiesEffects.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"injectables/RouterEffects.html":{}}}],["triplicesque\\r\\n*de",{"_index":863,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":242,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"interfaces/EntitiesState.html":{},"injectables/GoogleAnalyticsEffects.html":{},"guards/LanguageGuard.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"injectables/RouterEffects.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trusty",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["try",{"_index":1480,"title":{},"body":{"index.html":{}}}],["tsconfig",{"_index":1140,"title":{},"body":{"changelog.html":{}}}],["tslib",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["tu",{"_index":824,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typedaction",{"_index":546,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["typeof",{"_index":653,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["typescript",{"_index":660,"title":{},"body":{"classes/GeneralHelper.html":{},"changelog.html":{},"index.html":{}}}],["uh61qyk",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui",{"_index":498,"title":{},"body":{"components/BaseComponent.html":{}}}],["undefined",{"_index":958,"title":{},"body":{"interfaces/NotificationsState.html":{}}}],["understanding",{"_index":1199,"title":{},"body":{"changelog.html":{}}}],["unique",{"_index":939,"title":{},"body":{"interfaces/NotificationInterface.html":{}}}],["unit",{"_index":1127,"title":{"unit-test.html":{}},"body":{"changelog.html":{},"index.html":{},"unit-test.html":{}}}],["universalinterceptor",{"_index":461,"title":{"interceptors/UniversalInterceptor.html":{}},"body":{"modules/AppServerModule.html":{},"interceptors/UniversalInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["unsubscribe",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["unsubscribeall",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["untested",{"_index":1366,"title":{},"body":{"index.html":{}}}],["update",{"_index":1201,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["uri",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/RouterStateUrl.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["urls",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urltree",{"_index":757,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["use",{"_index":496,"title":{},"body":{"components/BaseComponent.html":{},"injectables/EntitiesService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["usecases",{"_index":1462,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{}}}],["used",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"injectables/EntitiesEffects.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"components/HomePageComponent.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["useeffectserrorhandler",{"_index":537,"title":{},"body":{"injectables/EntitiesEffects.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/RouterEffects.html":{}}}],["usefactory",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["user_provided_meta_reducers",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["users/rickvandermeij/sources/angular",{"_index":1585,"title":{},"body":{"unit-test.html":{}}}],["uses",{"_index":1177,"title":{},"body":{"changelog.html":{}}}],["usevalue",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":1049,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["utf8",{"_index":1025,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["v4",{"_index":1125,"title":{},"body":{"changelog.html":{}}}],["valuable",{"_index":1434,"title":{},"body":{"index.html":{}}}],["value",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"injectables/EntitiesEffects.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"injectables/RouterEffects.html":{},"miscellaneous/variables.html":{}}}],["van",{"_index":1515,"title":{},"body":{"license.html":{}}}],["vapid",{"_index":1106,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["vapid_public",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["var",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["variable",{"_index":1257,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1604,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verba",{"_index":894,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["versions",{"_index":1382,"title":{},"body":{"index.html":{}}}],["via",{"_index":1456,"title":{},"body":{"index.html":{}}}],["videoque",{"_index":879,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["view",{"_index":1491,"title":{},"body":{"index.html":{}}}],["visus",{"_index":828,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["vix",{"_index":923,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["vocandus",{"_index":820,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"injectables/LocalStorageService.html":{}}}],["vs",{"_index":1211,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["warning",{"_index":943,"title":{},"body":{"interfaces/NotificationInterface.html":{}}}],["warranties",{"_index":1557,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1553,"title":{},"body":{"license.html":{}}}],["watch",{"_index":1239,"title":{},"body":{"changelog.html":{}}}],["watcher",{"_index":1448,"title":{},"body":{"index.html":{}}}],["way",{"_index":1132,"title":{},"body":{"changelog.html":{}}}],["web",{"_index":1380,"title":{},"body":{"index.html":{}}}],["webdriver",{"_index":1204,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["webpack",{"_index":1221,"title":{},"body":{"changelog.html":{}}}],["webpack.server.config.js",{"_index":1138,"title":{},"body":{"changelog.html":{}}}],["webpush",{"_index":1388,"title":{},"body":{"index.html":{}}}],["website",{"_index":1486,"title":{},"body":{"index.html":{}}}],["went",{"_index":535,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["wether",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationState.html":{},"injectables/GoogleAnalyticsEffects.html":{}}}],["whenever",{"_index":691,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["whether",{"_index":1569,"title":{},"body":{"license.html":{}}}],["window",{"_index":685,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["window.location.reload",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["windows",{"_index":1218,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["withcredentials",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":1168,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["without",{"_index":1529,"title":{},"body":{"license.html":{}}}],["work",{"_index":1124,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["worker",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["worker.js",{"_index":378,"title":{},"body":{"modules/AppModule.html":{}}}],["working",{"_index":1217,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":1174,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["world",{"_index":733,"title":{},"body":{"components/HomePageComponent.html":{}}}],["wpo",{"_index":1232,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["wpo:lighthouse",{"_index":1492,"title":{},"body":{"index.html":{}}}],["wpo:stats",{"_index":1489,"title":{},"body":{"index.html":{}}}],["written",{"_index":1467,"title":{},"body":{"index.html":{}}}],["wrong",{"_index":536,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["xenial",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["xhr",{"_index":214,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interfaces/ApplicationState.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{}}}],["yyyy",{"_index":802,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":1343,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        App Component which extends the BaseComponent\n\n    \n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                cd\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                pushService\n                            \n                            \n                                routerLanguage$\n                            \n                            \n                                    Public\n                                swPush\n                            \n                            \n                                    Public\n                                swUpdate\n                            \n                            \n                                    Public\n                                translate\n                            \n                            \n                                    Protected\n                                mutableSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                addSubscription\n                            \n                            \n                                    Protected\n                                extendedNgOnDestroy\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                unsubscribeAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_stateCb: Function, platformId: string, store: Store, cd: ChangeDetectorRef, pushService: PushNotificationService, swPush: SwPush, swUpdate: SwUpdate, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:42\n                            \n                        \n\n                \n                    \n                            constructor - The function which is called when the class is instantiated\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _stateCb\n                                                  \n                                                        \n                                                                        Function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ncheck wether the page is browser or server\n\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nNGRX Store integration\n\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nSubscription for the Angular ChangeDetectorRef\n\n\n                                                        \n                                                \n                                                \n                                                        pushService\n                                                  \n                                                        \n                                                                        PushNotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for the PushNotificationService\n\n\n                                                        \n                                                \n                                                \n                                                        swPush\n                                                  \n                                                        \n                                                                        SwPush\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nSubscription for the Angular SwUpdate\n\n\n                                                        \n                                                \n                                                \n                                                        swUpdate\n                                                  \n                                                        \n                                                                        SwUpdate\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nSubscription for the Angular SwUpdate\n\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nSubscription for the Angular TranslateService\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:75\n                \n            \n\n\n            \n                \n                    ngOnInit is a callback method that is invoked immediately after the default\nchange detector has checked the directive's data-bound properties for\nthe first time\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        addSubscription\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSubscription(subscription: Subscription)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:23\n\n                \n            \n\n\n            \n                \n                    Add a subscription.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n                                    \n                                            Subscription\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        extendedNgOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    extendedNgOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:42\n\n                \n            \n\n\n            \n                \n                    Should be used by all pages when ngOnDestroy wants to be triggered.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:47\n\n                \n            \n\n\n            \n                \n                    Destructor which unsubscribe the dangling subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        unsubscribeAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribeAll()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:32\n\n                \n            \n\n\n            \n                \n                    Unsubscribe from all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        cd\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:58\n                        \n                    \n\n            \n                \n                    - Subscription for the Angular ChangeDetectorRef\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notifications\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:42\n                        \n                    \n\n            \n                \n                    notifications returns messages of swPush\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pushService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PushNotificationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:59\n                        \n                    \n\n            \n                \n                    - Service for the PushNotificationService\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routerLanguage$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:38\n                        \n                    \n\n            \n                \n                    routerLanguage is an Observable of the routerSelector getRouterLanguage\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        swPush\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SwPush\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:60\n                        \n                    \n\n            \n                \n                    - Subscription for the Angular SwUpdate\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        swUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SwUpdate\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:61\n                        \n                    \n\n            \n                \n                    - Subscription for the Angular SwUpdate\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        translate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:62\n                        \n                    \n\n            \n                \n                    - Subscription for the Angular TranslateService\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        mutableSubscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         BaseComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseComponent:15\n\n                        \n                    \n\n            \n                \n                    Array of subscriptions handled by this component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n\tChangeDetectorRef,\n\tComponent,\n\tInject,\n\tOnInit,\n\tOptional,\n\tPLATFORM_ID,\n} from '@angular/core';\nimport { SwPush, SwUpdate } from '@angular/service-worker';\nimport { select, Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { environment } from '@environments/environment';\nimport { GeneralHelper } from '@helpers/general.helper';\nimport { PushNotificationService } from '@services/push-notifications/push-notifications.service';\nimport { addNotification } from '@store/notifications/notifications.actions';\nimport { NotificationInterface } from '@store/notifications/notifications.interface';\nimport * as fromRouter from '@store/router/router.selectors';\nimport { BaseComponent } from 'components';\nimport { STATE_CB } from './ssr/tokens';\n\n/**\n * App Component which extends the BaseComponent\n */\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n})\n/**\n * App Component which contains the initial route handling\n */\nexport class AppComponent extends BaseComponent implements OnInit {\n\t/**\n\t * routerLanguage is an Observable of the routerSelector getRouterLanguage\n\t */\n\trouterLanguage$: Observable;\n\t/**\n\t * notifications returns messages of swPush\n\t */\n\tnotifications: NotificationInterface[] = [];\n\n\t/**\n\t * constructor - The function which is called when the class is instantiated\n\t * @param  {string} platformId - check wether the page is browser or server\n\t * @param  {Store} store - NGRX Store integration\n\t * @param  {ChangeDetectorRef} cd - Subscription for the Angular ChangeDetectorRef\n\t * @param  {PushNotificationService} pushService - Service for the PushNotificationService\n\t * @param  {SwPush} swPush - Subscription for the Angular SwUpdate\n\t * @param  {SwUpdate} swUpdate - Subscription for the Angular SwUpdate\n\t * @param  {TranslateService} translate - Subscription for the Angular TranslateService\n\t */\n\tconstructor(\n\t\t@Optional() @Inject(STATE_CB) private readonly _stateCb: Function,\n\t\t@Inject(PLATFORM_ID) private readonly platformId: string,\n\t\tprivate readonly store: Store,\n\t\tpublic readonly cd: ChangeDetectorRef,\n\t\tpublic pushService: PushNotificationService,\n\t\tpublic swPush: SwPush,\n\t\tpublic swUpdate: SwUpdate,\n\t\tpublic translate: TranslateService,\n\t) {\n\t\tsuper();\n\t\tthis.routerLanguage$ = this.store.pipe(\n\t\t\tselect(fromRouter.getRouterLanguage),\n\t\t);\n\t}\n\n\t/**\n\t * ngOnInit is a callback method that is invoked immediately after the default\n\t * change detector has checked the directive's data-bound properties for\n\t * the first time\n\t */\n\tngOnInit(): void {\n\t\t/* istanbul ignore next */\n\t\tif (this.swUpdate.isEnabled) {\n\t\t\tthis.swUpdate.available.subscribe(() => {\n\t\t\t\tif (confirm('new Version is available')) {\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/* istanbul ignore next */\n\t\tif (isPlatformBrowser(this.platformId) && this.swPush.isEnabled) {\n\t\t\tthis.swPush.messages.subscribe((message) => {\n\t\t\t\tconst flattenedMessage = GeneralHelper.flattensObject(message);\n\t\t\t\tthis.store.dispatch(\n\t\t\t\t\taddNotification({ notification: flattenedMessage }),\n\t\t\t\t);\n\t\t\t\tthis.notifications.push(flattenedMessage);\n\t\t\t\tthis.notifications = GeneralHelper.dateSort(\n\t\t\t\t\tthis.notifications,\n\t\t\t\t\t'timeStamp',\n\t\t\t\t);\n\t\t\t\tthis.cd.markForCheck();\n\t\t\t});\n\t\t\tthis.swPush\n\t\t\t\t.requestSubscription({\n\t\t\t\t\tserverPublicKey: environment.VAPID_PUBLIC,\n\t\t\t\t})\n\t\t\t\t.then((subscription) => {\n\t\t\t\t\tthis.pushService\n\t\t\t\t\t\t.sendSubscriptionToTheServer(subscription)\n\t\t\t\t\t\t.subscribe();\n\t\t\t\t})\n\t\t\t\t.catch();\n\t\t}\n\n\t\tthis.addSubscription(\n\t\t\tthis.routerLanguage$.subscribe((language: string) => {\n\t\t\t\tthis.translate.use(language);\n\t\t\t}),\n\t\t);\n\n\t\tthis.store.subscribe((state) => {\n\t\t\t/* istanbul ignore if */\n\t\t\tif (this._stateCb) {\n\t\t\t\tthis._stateCb(state);\n\t\t\t}\n\t\t});\n\t}\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base-component'},{'name': 'ErrorPageComponent', 'selector': ''},{'name': 'HomePageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AppHttpInterceptor.html":{"url":"interceptors/AppHttpInterceptor.html","title":"interceptor - AppHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AppHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interceptors/http.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                AppHttpInterceptor Intercepts all incoming XHR calls and defines the store if a request is pending\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/interceptors/http.interceptor.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interceptors/http.interceptor.ts:27\n                \n            \n\n\n            \n                \n                    Intercepts HttpRequest or HttpResponse and dispatches an actions\nto save the status in the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n\tHttpEvent,\n\tHttpHandler,\n\tHttpInterceptor,\n\tHttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { SetRequestStatus } from '@store/application/application.actions';\n\n/**\n * AppHttpInterceptor Intercepts all incoming XHR calls and defines the store if a request is pending\n */\n@Injectable()\nexport class AppHttpInterceptor implements HttpInterceptor {\n\tconstructor(private readonly store: Store) {}\n\n\t/**\n\t * Intercepts HttpRequest or HttpResponse and dispatches an actions\n\t * to save the status in the store\n\t * @param  {HttpRequest} request\n\t * @param  {HttpHandler} next\n\t */\n\tintercept(\n\t\trequest: HttpRequest,\n\t\tnext: HttpHandler,\n\t): Observable> {\n\t\tthis.store.dispatch(SetRequestStatus({ isPendingRequest: true }));\n\t\treturn next\n\t\t\t.handle(request)\n\t\t\t.pipe(\n\t\t\t\tfinalize(() =>\n\t\t\t\t\tthis.store.dispatch(\n\t\t\t\t\t\tSetRequestStatus({ isPendingRequest: false }),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AppHttpInterceptor-1.html":{"url":"interceptors/AppHttpInterceptor-1.html","title":"interceptor - AppHttpInterceptor-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AppHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ssr/app.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transferState: TransferState)\n                    \n                \n                        \n                            \n                                Defined in src/app/ssr/app.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transferState\n                                                  \n                                                        \n                                                                        TransferState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ssr/app.interceptor.ts:26\n                \n            \n\n\n            \n                \n                    Intercepts HttpRequest or HttpResponse and set the transferState\nto save the status in the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n\tHttpEvent,\n\tHttpHandler,\n\tHttpInterceptor,\n\tHttpRequest,\n\tHttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { makeStateKey, TransferState } from '@angular/platform-browser';\nimport { Observable, of } from 'rxjs';\n\n/* istanbul ignore next */\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class AppHttpInterceptor implements HttpInterceptor {\n\tconstructor(private readonly transferState: TransferState) {}\n\n\t/* istanbul ignore next */\n\t/**\n\t * Intercepts HttpRequest or HttpResponse and set the transferState\n\t * to save the status in the store\n\t * @param  {HttpRequest} request\n\t * @param  {HttpHandler} next\n\t */\n\tintercept(\n\t\treq: HttpRequest,\n\t\tnext: HttpHandler,\n\t): Observable> {\n\t\tif (req.method !== 'GET') {\n\t\t\treturn next.handle(req);\n\t\t}\n\n\t\tconst storedResponse: string = this.transferState.get(\n\t\t\tmakeStateKey(req.url),\n\t\t\tnull,\n\t\t);\n\n\t\tif (storedResponse) {\n\t\t\tconst response = new HttpResponse({\n\t\t\t\tbody: storedResponse,\n\t\t\t\tstatus: 200,\n\t\t\t});\n\t\t\treturn of(response);\n\t\t}\n\n\t\treturn next.handle(req);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\nAppModule -->\n\nErrorModule->AppModule\n\n\n\n\n\nAppHttpInterceptor\n\nAppHttpInterceptor\n\nAppModule -->\n\nAppHttpInterceptor->AppModule\n\n\n\n\n\nPushNotificationService\n\nPushNotificationService\n\nAppModule -->\n\nPushNotificationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Marks an class as an NgModule so it could be configured\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AppHttpInterceptor\n                        \n                        \n                            PushNotificationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ErrorModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n\tHTTP_INTERCEPTORS,\n\tHttpClient,\n\tHttpClientModule,\n} from '@angular/common/http';\nimport { APP_INITIALIZER, NgModule, PLATFORM_ID } from '@angular/core';\nimport {\n\tBrowserModule,\n\tBrowserTransferStateModule,\n\tɵgetDOM,\n} from '@angular/platform-browser';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { routerReducer } from '@ngrx/router-store';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { PrebootModule } from 'preboot';\n\n// NGRX store\nimport { EffectsModule } from '@ngrx/effects';\nimport {\n\tMetaReducer,\n\tStoreModule,\n\tUSER_PROVIDED_META_REDUCERS,\n} from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { LocalStorageService } from '@services/local-storage.service';\nimport { PushNotificationService } from '@services/push-notifications/push-notifications.service';\nimport * as fromApplication from '@store/application/application.reducer';\nimport { LOCAL_STORAGE_KEY, STORAGE_KEYS } from '@store/meta/app.tokens';\nimport { storageMetaReducer } from '@store/meta/storage.metareducer';\nimport * as fromNotifications from '@store/notifications/notifications.reducer';\nimport { RouterEffects } from '@store/router/router.effects';\n\n// Core\nimport { environment } from '@environments/environment';\nimport { AppComponent } from './app.component';\n\n// Routes\nimport { AppRoutingModule, GoogleAnalyticsEffects } from 'routes';\n\n// Modules\nimport { ErrorModule } from '@app/pages/error/error.module';\n\n// Interceptor\nimport { AppHttpInterceptor } from './interceptors/http.interceptor';\nimport { AppHttpInterceptor as CoreAppHttpInterceptor } from './ssr/app.interceptor';\nimport { getInitialState } from './ssr/tokens';\n\n/* istanbul ignore next */\n/**\n * Custom TranslateService Loader to load the given language\n * @param  {HttpClient} http HttpClient to 'mock' the call to the assets i18n json file\n * @return {TranslateHttpLoader} JSON\n */\nexport function createTranslateLoader(http: HttpClient): TranslateHttpLoader {\n\treturn new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n/* istanbul ignore next */\n/**\n * factory meta-reducer configuration function\n */\nexport function getMetaReducers(\n\tsaveKeys: string[],\n\tlocalStorageKey: string,\n\tstorageService: LocalStorageService,\n): MetaReducer[] {\n\treturn [storageMetaReducer(saveKeys, localStorageKey, storageService)];\n}\n\n/**\n * Marks an class as an NgModule so it could be configured\n */\n@NgModule({\n\tbootstrap: [AppComponent],\n\tdeclarations: [AppComponent],\n\timports: [\n\t\tAppRoutingModule,\n\t\tBrowserModule.withServerTransition({ appId: 'serverApp' }),\n\t\tBrowserTransferStateModule,\n\t\tEffectsModule.forRoot([GoogleAnalyticsEffects, RouterEffects]),\n\t\tErrorModule,\n\t\tHttpClientModule,\n\t\tPrebootModule.withConfig({ appRoot: 'app-root' }),\n\t\tStoreModule.forRoot(\n\t\t\t{\n\t\t\t\tapplicationState: fromApplication.reducer,\n\t\t\t\tnotificationState: fromNotifications.reducer,\n\t\t\t\trouterState: routerReducer,\n\t\t\t},\n\t\t\t{ initialState: getInitialState },\n\t\t),\n\t\tStoreDevtoolsModule.instrument(),\n\t\tServiceWorkerModule.register('ngsw-worker.js', {\n\t\t\tenabled: environment.production,\n\t\t}),\n\t\tTranslateModule.forRoot({\n\t\t\tloader: {\n\t\t\t\tdeps: [HttpClient],\n\t\t\t\tprovide: TranslateLoader,\n\t\t\t\tuseFactory: createTranslateLoader,\n\t\t\t},\n\t\t}),\n\t],\n\tproviders: [\n\t\tPushNotificationService,\n\t\t{\n\t\t\tprovide: STORAGE_KEYS,\n\t\t\tuseValue: [\n\t\t\t\t'applicationState',\n\t\t\t\t'entitiesState',\n\t\t\t\t'notifications',\n\t\t\t\t'routerState',\n\t\t\t],\n\t\t},\n\t\t{ provide: LOCAL_STORAGE_KEY, useValue: '__app_storage__' },\n\t\t{\n\t\t\tdeps: [STORAGE_KEYS, LOCAL_STORAGE_KEY, LocalStorageService],\n\t\t\tprovide: USER_PROVIDED_META_REDUCERS,\n\t\t\tuseFactory: getMetaReducers,\n\t\t},\n\t\t{\n\t\t\tmulti: true,\n\t\t\tprovide: HTTP_INTERCEPTORS,\n\t\t\tuseClass: AppHttpInterceptor,\n\t\t},\n\t\t{\n\t\t\tmulti: true,\n\t\t\tprovide: HTTP_INTERCEPTORS,\n\t\t\tuseClass: CoreAppHttpInterceptor,\n\t\t},\n\n\t\t{\n\t\t\tdeps: [DOCUMENT, PLATFORM_ID],\n\t\t\tmulti: true,\n\t\t\tprovide: APP_INITIALIZER,\n\t\t\tuseFactory: /* istanbul ignore next */ function (\n\t\t\t\tdocument: HTMLDocument,\n\t\t\t\tplatformId: Object,\n\t\t\t): Function {\n\t\t\t\treturn () => {\n\t\t\t\t\tif (isPlatformBrowser(platformId)) {\n\t\t\t\t\t\tconst dom = ɵgetDOM().getDefaultDocument();\n\t\t\t\t\t\tconst styles: any[] = Array.prototype.slice.apply(\n\t\t\t\t\t\t\tdom.querySelectorAll(`style[ng-transition]`),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tstyles.forEach((el) => {\n\t\t\t\t\t\t\t// Remove ng-transition attribute to prevent Angular appInitializerFactory\n\t\t\t\t\t\t\t// to remove server styles before preboot complete\n\t\t\t\t\t\t\tel.removeAttribute('ng-transition');\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdocument.addEventListener('PrebootComplete', () => {\n\t\t\t\t\t\t\t// After preboot complete, remove the server scripts\n\t\t\t\t\t\t\tsetTimeout(() =>\n\t\t\t\t\t\t\t\tstyles.forEach((el) => dom.removeChild(el)),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t},\n\t],\n})\n/* istanbul ignore next */\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/routes/app-routing.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Marks an class as an NgModule so it could be configured\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgModule } from '@angular/core';\nimport { RouterModule, RouterStateSnapshot, Routes } from '@angular/router';\nimport {\n\tRouterStateSerializer,\n\tStoreRouterConnectingModule,\n} from '@ngrx/router-store';\n\nimport { LanguageGuard } from '@routes/guards/language-guard.service';\nimport { RouterStateUrl } from '@store/router/router.interface';\nimport { ErrorPageComponent } from 'pages';\n\n/**\n * Class to implements the RouterStateSerializer with a custom serializer\n */\n@Injectable()\nexport class CustomSerializer implements RouterStateSerializer {\n\t/**\n\t * Serialize the RouterState with the CustomSerialzer\n\t * @param {RouterStateSnapshot} routerState\n\t * @returns RouterStateUrl\n\t */\n\tserialize(routerState: RouterStateSnapshot): RouterStateUrl {\n\t\tlet route = routerState.root;\n\t\twhile (route.firstChild) {\n\t\t\troute = route.firstChild;\n\t\t}\n\t\tconst {\n\t\t\turl,\n\t\t\troot: { queryParams },\n\t\t} = routerState;\n\t\tconst { params } = route;\n\t\treturn { params, queryParams, url };\n\t}\n}\n\n/* istanbul ignore next */\nconst appRoutes: Routes = [\n\t{\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tpath: '',\n\t\t\t\tpathMatch: 'prefix',\n\t\t\t\tredirectTo: 'en',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcanActivate: [LanguageGuard],\n\t\t\t\tchildren: [\n\t\t\t\t\t{\n\t\t\t\t\t\tloadChildren: () =>\n\t\t\t\t\t\t\timport('../pages/home/home.module').then(\n\t\t\t\t\t\t\t\t(m) => m.HomeModule,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\tpath: '',\n\t\t\t\t\t\tpathMatch: 'full',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tcomponent: ErrorPageComponent,\n\t\t\t\t\t\tpath: '404',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tpath: ':language',\n\t\t\t},\n\t\t],\n\t\tpath: '',\n\t\trunGuardsAndResolvers: 'always',\n\t},\n];\n\n/**\n * Marks an class as an NgModule so it could be configured\n */\n@NgModule({\n\texports: [RouterModule],\n\timports: [\n\t\tRouterModule.forRoot(appRoutes, {\n\t\t\tenableTracing: false,\n\t\t\tinitialNavigation: 'enabled',\n\t\t\tonSameUrlNavigation: 'reload',\n\t\t}),\n\t\tStoreRouterConnectingModule.forRoot({\n\t\t\tserializer: CustomSerializer,\n\t\t}),\n\t],\n\tproviders: [{ provide: RouterStateSerializer, useClass: CustomSerializer }],\n})\n\n/* istanbul ignore next */\n/**\n * Exports the AppRoutingModule from the NgModule\n */\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppServerModule.html":{"url":"modules/AppServerModule.html","title":"module - AppServerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_imports\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\ncluster_AppServerModule_providers\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\nUniversalInterceptor\n\nUniversalInterceptor\n\nAppServerModule -->\n\nUniversalInterceptor->AppServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.server.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Marks an class as an NgModule so it could be configured\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UniversalInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport {\n\tServerModule,\n\tServerTransferStateModule,\n} from '@angular/platform-server';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\n\nimport { AppComponent } from './app.component';\nimport { AppModule } from './app.module';\nimport { UniversalInterceptor } from './ssr/http.interceptor';\nimport { TranslateUniversalLoader } from './ssr/translate.loader';\n\n/**\n * Custom TranslateUniversalService Loader to load the given language\n * @return {TranslateUniversalLoader} JSON\n */\nexport function TranslateUniversalService(): TranslateUniversalLoader {\n\treturn new TranslateUniversalLoader('dist/browser/assets/i18n', '.json');\n}\n\n/**\n * Marks an class as an NgModule so it could be configured\n */\n@NgModule({\n\tbootstrap: [AppComponent],\n\timports: [\n\t\tAppModule,\n\t\tServerModule,\n\t\tServerTransferStateModule,\n\t\tTranslateModule.forRoot({\n\t\t\tloader: {\n\t\t\t\tprovide: TranslateLoader,\n\t\t\t\tuseFactory: TranslateUniversalService,\n\t\t\t},\n\t\t}),\n\t],\n\tproviders: [\n\t\t{\n\t\t\t/* Multi is important or you will delete all the other interceptors */\n\t\t\tmulti: true,\n\t\t\tprovide: HTTP_INTERCEPTORS,\n\t\t\tuseClass: UniversalInterceptor,\n\t\t},\n\t],\n})\n/* istanbul ignore next */\nexport class AppServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationState.html":{"url":"interfaces/ApplicationState.html","title":"interface - ApplicationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApplicationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/application/application.reducer.ts\n        \n\n\n            \n                Description\n            \n            \n                Application store state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isPendingRequest\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isPendingRequest\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPendingRequest:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    isPendingRequest represents the state wether a XHR call is pending\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Action, createReducer, on } from '@ngrx/store';\nimport * as applicationActions from './application.actions';\n\n/**\n * Application store state\n */\nexport interface ApplicationState {\n\t/**\n\t * isPendingRequest represents the state wether a XHR call is pending\n\t */\n\tisPendingRequest: boolean;\n}\n\nexport const initialState: ApplicationState = {\n\tisPendingRequest: false,\n};\n\nconst createApplicationReducer = createReducer(\n\tinitialState,\n\ton(applicationActions.SetRequestStatus, (state, action) => ({\n\t\t...state,\n\t\tisPendingRequest: action.isPendingRequest,\n\t})),\n);\n\n/**\n * The Application reducer, which contain all state differentiates when an action is dispatched\n * @param {ApplicationState} state - the initial state\n * @param {ApplicationActions} action - the action from actionTypes to perform\n * @return {ApplicationState} The new state\n */\nexport function reducer(state: ApplicationState, action: Action): any {\n\treturn createApplicationReducer(state, action);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseComponent.html":{"url":"components/BaseComponent.html","title":"component - BaseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/base/base.component.ts\n\n\n\n    \n        Description\n    \n    \n        Extendable base class, all pages should use.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-base-component\n            \n\n\n\n            \n                template\n                no-ui\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                mutableSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addSubscription\n                            \n                            \n                                    Protected\n                                extendedNgOnDestroy\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                unsubscribeAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        addSubscription\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSubscription(subscription: Subscription)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/base/base.component.ts:23\n                \n            \n\n\n            \n                \n                    Add a subscription.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n                                    \n                                            Subscription\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        extendedNgOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    extendedNgOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/base/base.component.ts:42\n                \n            \n\n\n            \n                \n                    Should be used by all pages when ngOnDestroy wants to be triggered.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/base/base.component.ts:47\n                \n            \n\n\n            \n                \n                    Destructor which unsubscribe the dangling subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        unsubscribeAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribeAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/base/base.component.ts:32\n                \n            \n\n\n            \n                \n                    Unsubscribe from all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        mutableSubscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/base/base.component.ts:15\n                        \n                    \n\n            \n                \n                    Array of subscriptions handled by this component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n/**\n * Extendable base class, all pages should use.\n */\n@Component({\n\tselector: 'app-base-component',\n\ttemplate: 'no-ui',\n})\nexport abstract class BaseComponent implements OnDestroy {\n\t/**\n\t * Array of subscriptions handled by this component.\n\t */\n\tprotected mutableSubscriptions: Array = [];\n\n\t/**\n\t * Add a subscription.\n\t * @access Protected\n\t * @param { Subscription } subscription\n\t * @return { Subscription }\n\t */\n\tprotected addSubscription(subscription: Subscription): Subscription {\n\t\tthis.mutableSubscriptions.push(subscription);\n\t\treturn subscription;\n\t}\n\n\t/**\n\t * Unsubscribe from all subscriptions.\n\t * @access Protected\n\t */\n\tprotected unsubscribeAll(): void {\n\t\tthis.mutableSubscriptions.forEach(\n\t\t\t(subscription: Subscription) =>\n\t\t\t\t!subscription['isUnsubscribed'] && subscription.unsubscribe(),\n\t\t);\n\t}\n\n\t/**\n\t * Should be used by all pages when ngOnDestroy wants to be triggered.\n\t */\n\tprotected extendedNgOnDestroy(): void {}\n\n\t/**\n\t * Destructor which unsubscribe the dangling subscriptions.\n\t */\n\tngOnDestroy(): void {\n\t\tthis.unsubscribeAll();\n\t\tthis.extendedNgOnDestroy();\n\t}\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'no-ui'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base-component'},{'name': 'ErrorPageComponent', 'selector': ''},{'name': 'HomePageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BaseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomSerializer.html":{"url":"injectables/CustomSerializer.html","title":"injectable - CustomSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/routes/app-routing.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Class to implements the RouterStateSerializer with a custom serializer\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize(routerState: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/app-routing.module.ts:22\n                \n            \n\n\n            \n                \n                    Serialize the RouterState with the CustomSerialzer\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routerState\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RouterStateUrl\n\n                    \n                    \n                        RouterStateUrl\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgModule } from '@angular/core';\nimport { RouterModule, RouterStateSnapshot, Routes } from '@angular/router';\nimport {\n\tRouterStateSerializer,\n\tStoreRouterConnectingModule,\n} from '@ngrx/router-store';\n\nimport { LanguageGuard } from '@routes/guards/language-guard.service';\nimport { RouterStateUrl } from '@store/router/router.interface';\nimport { ErrorPageComponent } from 'pages';\n\n/**\n * Class to implements the RouterStateSerializer with a custom serializer\n */\n@Injectable()\nexport class CustomSerializer implements RouterStateSerializer {\n\t/**\n\t * Serialize the RouterState with the CustomSerialzer\n\t * @param {RouterStateSnapshot} routerState\n\t * @returns RouterStateUrl\n\t */\n\tserialize(routerState: RouterStateSnapshot): RouterStateUrl {\n\t\tlet route = routerState.root;\n\t\twhile (route.firstChild) {\n\t\t\troute = route.firstChild;\n\t\t}\n\t\tconst {\n\t\t\turl,\n\t\t\troot: { queryParams },\n\t\t} = routerState;\n\t\tconst { params } = route;\n\t\treturn { params, queryParams, url };\n\t}\n}\n\n/* istanbul ignore next */\nconst appRoutes: Routes = [\n\t{\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tpath: '',\n\t\t\t\tpathMatch: 'prefix',\n\t\t\t\tredirectTo: 'en',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcanActivate: [LanguageGuard],\n\t\t\t\tchildren: [\n\t\t\t\t\t{\n\t\t\t\t\t\tloadChildren: () =>\n\t\t\t\t\t\t\timport('../pages/home/home.module').then(\n\t\t\t\t\t\t\t\t(m) => m.HomeModule,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\tpath: '',\n\t\t\t\t\t\tpathMatch: 'full',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tcomponent: ErrorPageComponent,\n\t\t\t\t\t\tpath: '404',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tpath: ':language',\n\t\t\t},\n\t\t],\n\t\tpath: '',\n\t\trunGuardsAndResolvers: 'always',\n\t},\n];\n\n/**\n * Marks an class as an NgModule so it could be configured\n */\n@NgModule({\n\texports: [RouterModule],\n\timports: [\n\t\tRouterModule.forRoot(appRoutes, {\n\t\t\tenableTracing: false,\n\t\t\tinitialNavigation: 'enabled',\n\t\t\tonSameUrlNavigation: 'reload',\n\t\t}),\n\t\tStoreRouterConnectingModule.forRoot({\n\t\t\tserializer: CustomSerializer,\n\t\t}),\n\t],\n\tproviders: [{ provide: RouterStateSerializer, useClass: CustomSerializer }],\n})\n\n/* istanbul ignore next */\n/**\n * Exports the AppRoutingModule from the NgModule\n */\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EntitiesEffects.html":{"url":"injectables/EntitiesEffects.html","title":"injectable - EntitiesEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EntitiesEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/entities/entities.effects.ts\n        \n\n\n            \n                Description\n            \n            \n                EntitiesEffects represents the class being used to trigger all effects used for the NGRX entities store\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getEntities$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, entitiesService: EntitiesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/entities/entities.effects.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitiesService\n                                                  \n                                                        \n                                                                        EntitiesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getEntities$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType(entitiesActions.Load),\n\t\t\t\tswitchMap(() => {\n\t\t\t\t\treturn this.entitiesService.getAll().pipe(\n\t\t\t\t\t\tswitchMap(\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\tresponse: HttpResponse,\n\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\t\t\tentitiesActions.LoadSuccess({\n\t\t\t\t\t\t\t\t\t\tentities: response.body.data,\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcatchError(() => {\n\t\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\t\tentitiesActions.LoadFail({\n\t\t\t\t\t\t\t\t\terrorMessage: 'global.something-went-wrong',\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t),\n\t\t{ useEffectsErrorHandler: false },\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/store/entities/entities.effects.ts:27\n                        \n                    \n\n            \n                \n                    getEntities$ Effect will be triggered when action LOAD is called from entitiesActions\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\n\nimport { EntitiesService } from '@services/entities/entities.service';\nimport * as entitiesActions from './entities.actions';\nimport { EntityInterface } from './entities.interface';\nimport { HttpResponse } from '@angular/common/http';\nimport { TypedAction } from '@ngrx/store/src/models';\n\n/**\n * EntitiesEffects represents the class being used to trigger all effects used for the NGRX entities store\n */\n@Injectable()\nexport class EntitiesEffects {\n\tconstructor(\n\t\tprivate readonly actions$: Actions,\n\t\tprivate readonly entitiesService: EntitiesService,\n\t) {}\n\n\t/**\n\t * getEntities$ Effect will be triggered when action LOAD is called from entitiesActions\n\t * @return Observable of LoadSuccess or LoadFail\n\t */\n\tgetEntities$: Observable\n\t\t| TypedAction\n\t> = createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType(entitiesActions.Load),\n\t\t\t\tswitchMap(() => {\n\t\t\t\t\treturn this.entitiesService.getAll().pipe(\n\t\t\t\t\t\tswitchMap(\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\tresponse: HttpResponse,\n\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\t\t\tentitiesActions.LoadSuccess({\n\t\t\t\t\t\t\t\t\t\tentities: response.body.data,\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcatchError(() => {\n\t\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\t\tentitiesActions.LoadFail({\n\t\t\t\t\t\t\t\t\terrorMessage: 'global.something-went-wrong',\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t),\n\t\t{ useEffectsErrorHandler: false },\n\t);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EntitiesService.html":{"url":"injectables/EntitiesService.html","title":"injectable - EntitiesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EntitiesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/entities/entities.service.ts\n        \n\n\n            \n                Description\n            \n            \n                EntitiesService provides a service to use CRUD actions\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/entities/entities.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/entities/entities.service.ts:19\n                \n            \n\n\n            \n                \n                    Get entities data\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        the response of the HTTP Get\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport { EntityInterface } from '@app/store/entities/entities.interface';\n\n/**\n * EntitiesService provides a service to use CRUD actions\n */\n@Injectable()\nexport class EntitiesService {\n\tconstructor(private readonly http: HttpClient) {}\n\n\t/**\n\t * Get entities data\n\t * @return the response of the HTTP Get\n\t */\n\tgetAll(): Observable {\n\t\treturn this.http.get(\n\t\t\t`${environment.apiUrl}entities`,\n\t\t\t{\n\t\t\t\t...environment.apiCookies,\n\t\t\t\tobserve: 'response',\n\t\t\t},\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntitiesState.html":{"url":"interfaces/EntitiesState.html","title":"interface - EntitiesState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EntitiesState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/entities/entities.reducer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entities\n                                        \n                                \n                                \n                                        \n                                            errorMessage\n                                        \n                                \n                                \n                                        \n                                            isLoading\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entities:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { Action, ActionReducerMap, createReducer, on } from '@ngrx/store';\n\nimport * as actions from './entities.actions';\nimport { EntityInterface } from './entities.interface';\n\nexport interface EntitiesState extends EntityState {\n\tentities: {\n\t\t[item: string]: EntityInterface;\n\t};\n\terrorMessage: string;\n\tisLoading: boolean;\n}\n\nexport function selectGuid(entity: EntityInterface): string {\n\treturn entity.guid;\n}\n\nexport const adapter: EntityAdapter =\n\tcreateEntityAdapter({\n\t\tselectId: selectGuid,\n\t});\n\nexport const initialState: EntitiesState = adapter.getInitialState({\n\terrorMessage: null,\n\tisLoading: false,\n});\n\nexport const entitiesReducer = createReducer(\n\tinitialState,\n\ton(actions.Load, (state) => ({\n\t\t...state,\n\t\terror: null,\n\t\tisLoading: true,\n\t})),\n\ton(actions.LoadSuccess, (state, action) => {\n\t\treturn adapter.setAll(action.entities, {\n\t\t\t...state,\n\t\t\tselectedEntity: null,\n\t\t});\n\t}),\n\ton(actions.LoadFail, (state, { errorMessage }) => ({\n\t\t...state,\n\t\terrorMessage,\n\t\tisLoading: false,\n\t})),\n\ton(actions.ClearError, (state) => ({\n\t\t...state,\n\t\terrorMessage: null,\n\t})),\n);\n\nexport function reducer(state: EntitiesState, action: Action): EntitiesState {\n\treturn entitiesReducer(state, action);\n}\n\nexport const { selectIds, selectEntities, selectAll, selectTotal } =\n\tadapter.getSelectors();\n\nexport const reducerToken = new InjectionToken\n>('dealsState');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityInterface.html":{"url":"interfaces/EntityInterface.html","title":"interface - EntityInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EntityInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/entities/entities.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            country\n                                        \n                                \n                                \n                                        \n                                            currency\n                                        \n                                \n                                \n                                        \n                                            dateFormat\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            guid\n                                        \n                                \n                                \n                                        \n                                            markdown\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateFormat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateFormat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        guid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        markdown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        markdown:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EntityInterface {\n\tguid: string;\n\tcountry: string;\n\tcurrency: string;\n\tdateFormat: string;\n\temail: string;\n\tmarkdown: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ErrorModule\n\n\n\ncluster_ErrorModule_imports\n\n\n\ncluster_ErrorModule_declarations\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\n\n\nErrorModule\n\nErrorModule\n\nErrorModule -->\n\nErrorPageComponent->ErrorModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nErrorModule -->\n\nSharedModule->ErrorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/error/error.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Marks an class as an NgModule so it could be configured\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ErrorPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\n\nimport { ErrorPageComponent } from 'pages';\nimport { SharedModule } from '../../modules/shared.module';\n\n/**\n * Marks an class as an NgModule so it could be configured\n */\n@NgModule({\n\tdeclarations: [ErrorPageComponent],\n\timports: [CommonModule, SharedModule],\n\tproviders: [],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\n/* istanbul ignore next */\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorPageComponent.html":{"url":"components/ErrorPageComponent.html","title":"component - ErrorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/error/error-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        404 Error page Component which extends the BaseComponent\n\n    \n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                error-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                translate\n                            \n                            \n                                    Protected\n                                mutableSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                addSubscription\n                            \n                            \n                                    Protected\n                                extendedNgOnDestroy\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                unsubscribeAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(title: Title, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/error/error-page.component.ts:17\n                            \n                        \n\n                \n                    \n                            constructor - The function which is called when the class is instantiated\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/error/error-page.component.ts:35\n                \n            \n\n\n            \n                \n                    Initialize the directive/component after Angular first displays the data-bound properties and sets the directive/component's input properties\nCalled once, after the first ngOnChanges()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        addSubscription\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSubscription(subscription: Subscription)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:23\n\n                \n            \n\n\n            \n                \n                    Add a subscription.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n                                    \n                                            Subscription\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        extendedNgOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    extendedNgOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:42\n\n                \n            \n\n\n            \n                \n                    Should be used by all pages when ngOnDestroy wants to be triggered.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:47\n\n                \n            \n\n\n            \n                \n                    Destructor which unsubscribe the dangling subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        unsubscribeAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribeAll()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:32\n\n                \n            \n\n\n            \n                \n                    Unsubscribe from all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        translate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/error/error-page.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        mutableSubscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         BaseComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseComponent:15\n\n                        \n                    \n\n            \n                \n                    Array of subscriptions handled by this component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { BaseComponent } from 'components';\n\n/**\n * 404 Error page Component which extends the BaseComponent\n */\n@Component({\n\ttemplateUrl: 'error-page.component.html',\n})\n\n/**\n * Class representing the error page component, which extends BaseComponent.\n */\nexport class ErrorPageComponent extends BaseComponent implements OnInit {\n\t/**\n\t * constructor - The function which is called when the class is instantiated\n\t *\n\t * @param  {type} private title: Service to set the HTML title\n\t */\n\tconstructor(\n\t\tprivate readonly title: Title,\n\t\tpublic translate: TranslateService,\n\t) {\n\t\tsuper();\n\t\tthis.translate.use('en');\n\t}\n\n\t/**\n\t * Initialize the directive/component after Angular first displays the data-bound properties and sets the directive/component's input properties\n\t * Called once, after the first ngOnChanges()\n\t */\n\tngOnInit(): void {\n\t\tthis.title.setTitle('404 Error: Page not Found / Angular SSR');\n\t}\n}\n\n    \n\n    \n        \n\t{{ 'error.heading' | translate }}\n\t{{ 'error.description' | translate }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t{{ \\'error.heading\\' | translate }}\t{{ \\'error.description\\' | translate }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base-component'},{'name': 'ErrorPageComponent', 'selector': ''},{'name': 'HomePageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeneralHelper.html":{"url":"classes/GeneralHelper.html","title":"class - GeneralHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeneralHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/general.helper.ts\n        \n\n\n            \n                Description\n            \n            \n                Class representing the general helper.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                flattensObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                dateSort\n                            \n                            \n                                    Static\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        flattensObject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/helpers/general.helper.ts:10\n                        \n                    \n\n            \n                \n                    flattensObject Flatten a multidimensional object\n\n                \n            \n\n                \n                    \n                        \n                                Parameters :\n                                \n                                    \n                                        \n                                            Name\n                                        \n                                    \n                                    \n                                            \n                                                    obj\n                                            \n                                    \n                                \n                        \n                    \n                \n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        dateSort\n                        \n                    \n                \n            \n            \n                \n                    \n                    dateSort(data: any[], field: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/helpers/general.helper.ts:46\n                \n            \n\n\n            \n                \n                    dateSort will sort the given object by the given field param\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nall object data in an array\n\n\n                                    \n                                \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe field which will be used to sort\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        sort\n                        \n                    \n                \n            \n            \n                \n                    \n                    sort(data: any[], field: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/helpers/general.helper.ts:34\n                \n            \n\n\n            \n                \n                    sort will sort the given object by the given field param\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nall object data in an array\n\n\n                                    \n                                \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe field which will be used to sort\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class GeneralHelper {\n\t/**\n\t * flattensObject Flatten a multidimensional object\n\t * @param { any } obj\n\t * @return { any } flattened object\n\t */\n\tstatic flattensObject = (obj: any): any => {\n\t\tconst flattened = {};\n\n\t\tObject.keys(obj).forEach((key) => {\n\t\t\tif (typeof obj[key] === 'object' && obj[key] !== null) {\n\t\t\t\tObject.assign(\n\t\t\t\t\tflattened,\n\t\t\t\t\tGeneralHelper.flattensObject(obj[key]),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tflattened[key] = obj[key];\n\t\t\t}\n\t\t});\n\n\t\treturn flattened;\n\t\t/* eslint-disable @typescript-eslint/semi, @typescript-eslint/member-delimiter-style */\n\t};\n\n\t/**\n\t * sort will sort the given object by the given field param\n\t * @param { any[] } data - all object data in an array\n\t * @param { string } field - the field which will be used to sort\n\t * @return { any[] }\n\t */\n\tstatic sort(data: any[], field: string): any[] {\n\t\treturn data.sort((a, b) =>\n\t\t\ta[field] > b[field] ? 1 : b[field] > a[field] ? -1 : 0,\n\t\t);\n\t}\n\n\t/**\n\t * dateSort will sort the given object by the given field param\n\t * @param { any[] } data - all object data in an array\n\t * @param { string } field - the field which will be used to sort\n\t * @return { any[] }\n\t */\n\tstatic dateSort(data: any[], field: string): any[] {\n\t\treturn data.sort((a, b) => {\n\t\t\treturn new Date(b[field]).getTime() - new Date(a[field]).getTime();\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleAnalyticsEffects.html":{"url":"injectables/GoogleAnalyticsEffects.html","title":"injectable - GoogleAnalyticsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleAnalyticsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/routes/effects/google-analytics.effects.ts\n        \n\n\n            \n                Description\n            \n            \n                An Injectable to inject GoogleAnalytics Effects\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageView$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: string, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/routes/effects/google-analytics.effects.ts:12\n                            \n                        \n\n                \n                    \n                            constructor - The function which is called when the class is instantiated\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pageView$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : createEffect(\n\t\t() =>\n\t\t\tthis.router.events.pipe(\n\t\t\t\tfilter((event) => event instanceof NavigationEnd),\n\t\t\t\ttap((event: NavigationEnd) => {\n\t\t\t\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\t\t\t\t(window as any).ga(\n\t\t\t\t\t\t\t'set',\n\t\t\t\t\t\t\t'page',\n\t\t\t\t\t\t\tevent.urlAfterRedirects,\n\t\t\t\t\t\t);\n\t\t\t\t\t\t(window as any).ga('send', 'pageview');\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t),\n\t\t{ dispatch: false, useEffectsErrorHandler: true },\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/routes/effects/google-analytics.effects.ts:27\n                        \n                    \n\n            \n                \n                    Whenever an Router Event takes place with an instanceof NavigationEnd, trigger the GoogleAnalytics Effect\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { createEffect } from '@ngrx/effects';\nimport { Observable } from 'rxjs';\nimport { filter, tap } from 'rxjs/operators';\n\n/**\n * An Injectable to inject GoogleAnalytics Effects\n */\n@Injectable()\nexport class GoogleAnalyticsEffects {\n\t/**\n\t * constructor - The function which is called when the class is instantiated\n\t *\n\t * @param  {type} private platformId: check wether the page is browser or server\n\t * @param  {type} private router: Subscription for the Angular Router\n\t */\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private readonly platformId: string,\n\t\tprivate readonly router: Router,\n\t) {}\n\n\t/**\n\t * Whenever an Router Event takes place with an instanceof NavigationEnd, trigger the GoogleAnalytics Effect\n\t */\n\tpageView$: Observable = createEffect(\n\t\t() =>\n\t\t\tthis.router.events.pipe(\n\t\t\t\tfilter((event) => event instanceof NavigationEnd),\n\t\t\t\ttap((event: NavigationEnd) => {\n\t\t\t\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\t\t\t\t(window as any).ga(\n\t\t\t\t\t\t\t'set',\n\t\t\t\t\t\t\t'page',\n\t\t\t\t\t\t\tevent.urlAfterRedirects,\n\t\t\t\t\t\t);\n\t\t\t\t\t\t(window as any).ga('send', 'pageview');\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t),\n\t\t{ dispatch: false, useEffectsErrorHandler: true },\n\t);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_providers\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomePageComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\nEntitiesService\n\nEntitiesService\n\nHomeModule -->\n\nEntitiesService->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Marks an class as an NgModule so it could be configured\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePageComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            EntitiesService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomeRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { MarkdownModule } from 'ngx-markdown';\n\nimport { getInitialState } from '@app/ssr/tokens';\nimport { EntitiesService } from '@app/services/entities/entities.service';\nimport { EntitiesEffects } from '@app/store/entities/entities.effects';\nimport * as fromEntities from '@app/store/entities/entities.reducer';\nimport { HomePageComponent } from 'pages';\nimport { HomeRoutingModule } from 'routes';\nimport { SharedModule } from '../../modules/shared.module';\n\n/**\n * Marks an class as an NgModule so it could be configured\n */\n@NgModule({\n\tdeclarations: [HomePageComponent],\n\timports: [\n\t\tCommonModule,\n\t\tEffectsModule.forFeature([EntitiesEffects]),\n\t\tMarkdownModule.forRoot(),\n\t\tStoreModule.forFeature('entitiesState', fromEntities.reducer, {\n\t\t\tinitialState: getInitialState,\n\t\t}),\n\t\tSharedModule,\n\t\tHomeRoutingModule,\n\t],\n\tproviders: [EntitiesService],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\n/* istanbul ignore next */\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePageComponent.html":{"url":"components/HomePageComponent.html","title":"component - HomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Home page Component which extends the BaseComponent\n\n    \n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                home-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entities\n                            \n                            \n                                entities$\n                            \n                            \n                                    Protected\n                                mutableSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                addSubscription\n                            \n                            \n                                    Protected\n                                extendedNgOnDestroy\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                unsubscribeAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(replayer: EventReplayer, store: Store, title: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home-page.component.ts:27\n                            \n                        \n\n                \n                    \n                            constructor - The function which is called when the class is instantiated\n @param  {type} private title: Service to set the HTML title\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        replayer\n                                                  \n                                                        \n                                                                    EventReplayer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/home-page.component.ts:50\n                \n            \n\n\n            \n                \n                    Initialize the directive/component after Angular first displays the data-bound properties and sets the directive/component's input properties\nCalled once, after the first ngOnChanges()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        addSubscription\n                        \n                    \n                \n            \n            \n                \n                    \n                    addSubscription(subscription: Subscription)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:23\n\n                \n            \n\n\n            \n                \n                    Add a subscription.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n                                    \n                                            Subscription\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        extendedNgOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    extendedNgOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:42\n\n                \n            \n\n\n            \n                \n                    Should be used by all pages when ngOnDestroy wants to be triggered.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:47\n\n                \n            \n\n\n            \n                \n                    Destructor which unsubscribe the dangling subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        unsubscribeAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribeAll()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:32\n\n                \n            \n\n\n            \n                \n                    Unsubscribe from all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        entities\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityInterface[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home-page.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entities$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home-page.component.ts:26\n                        \n                    \n\n            \n                \n                    entities$ is an Observable of the EntityInterface[] from the EntitiesStore\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        mutableSubscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         BaseComponent\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseComponent:15\n\n                        \n                    \n\n            \n                \n                    Array of subscriptions handled by this component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { select, Store } from '@ngrx/store';\nimport { EventReplayer } from 'preboot';\nimport { Observable } from 'rxjs';\n\nimport { Load } from '@store/entities/entities.actions';\nimport { EntityInterface } from '@store/entities/entities.interface';\nimport * as entitiesSelectors from '@store/entities/entities.selectors';\nimport { BaseComponent } from 'components';\n\n/**\n * Home page Component which extends the BaseComponent\n */\n@Component({\n\ttemplateUrl: 'home-page.component.html',\n})\n\n/**\n * Class representing the home page component, which extends BaseComponent.\n */\nexport class HomePageComponent extends BaseComponent implements OnInit {\n\t/**\n\t * entities$ is an Observable of the EntityInterface[] from the EntitiesStore\n\t */\n\tentities$: Observable;\n\tentities: EntityInterface[];\n\n\t/**\n\t * constructor - The function which is called when the class is instantiated\n\t *\n\t *  @param  {type} private title: Service to set the HTML title\n\t */\n\tconstructor(\n\t\tprivate readonly replayer: EventReplayer,\n\t\tprivate readonly store: Store,\n\t\tprivate readonly title: Title,\n\t) {\n\t\tsuper();\n\n\t\tthis.entities$ = this.store.pipe(\n\t\t\tselect(entitiesSelectors.selectAllEntities),\n\t\t);\n\t}\n\n\t/**\n\t * Initialize the directive/component after Angular first displays the data-bound properties and sets the directive/component's input properties\n\t * Called once, after the first ngOnChanges()\n\t */\n\tngOnInit(): void {\n\t\tthis.title.setTitle('Homepage / Angular SSR');\n\t\tthis.store.dispatch(Load());\n\n\t\tthis.addSubscription(\n\t\t\tthis.entities$.subscribe((entities) => {\n\t\t\t\tthis.entities = entities;\n\t\t\t\tthis.replayer.replayAll();\n\t\t\t}),\n\t\t);\n\t}\n}\n\n    \n\n    \n        \n\t\n\t\t{{ 'hello' | translate: { value: 'world' } }}\n\t\t{{ 'hello-description' | translate }}\n\t\n\t\n\t\n\t\tNGRX Entity Adapter\n\t\t\n\t\t\t\n\t\t\t\tGuid:\n\t\t\t\t{{ entity.guid }}\n\t\t\t\tCountry ISO:\n\t\t\t\t{{ entity.country }}\n\t\t\t\tCurrency ISO:\n\t\t\t\t{{ entity.currency }}\n\t\t\t\tDateformat:\n\t\t\t\t{{ entity.dateFormat }}\n\t\t\t\tEmail:\n\t\t\t\t{{ entity.email }}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t{{ \\'hello\\' | translate: { value: \\'world\\' } }}\t\t{{ \\'hello-description\\' | translate }}\t\t\t\t\tNGRX Entity Adapter\t\t\t\t\t\t\t\t\tGuid:\t\t\t\t{{ entity.guid }}\t\t\t\tCountry ISO:\t\t\t\t{{ entity.country }}\t\t\t\tCurrency ISO:\t\t\t\t{{ entity.currency }}\t\t\t\tDateformat:\t\t\t\t{{ entity.dateFormat }}\t\t\t\tEmail:\t\t\t\t{{ entity.email }}\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base-component'},{'name': 'ErrorPageComponent', 'selector': ''},{'name': 'HomePageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutingModule.html":{"url":"modules/HomeRoutingModule.html","title":"module - HomeRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/routes/home/home-routing.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Marks an class as an NgModule so it could be configured\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomePageComponent } from '@pages/home/home-page.component';\n\nconst routes: Routes = [\n\t{\n\t\tcomponent: HomePageComponent,\n\t\tpath: '',\n\t},\n];\n\n/**\n * Marks an class as an NgModule so it could be configured\n */\n@NgModule({\n\texports: [RouterModule],\n\timports: [RouterModule.forChild(routes)],\n})\n/* istanbul ignore next */\nexport class HomeRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LanguageGuard.html":{"url":"guards/LanguageGuard.html","title":"guard - LanguageGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LanguageGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/routes/guards/language-guard.service.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard which checks if the given language is permitted as an Route\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/routes/guards/language-guard.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/guards/language-guard.service.ts:26\n                \n            \n\n\n            \n                \n                    Should the language exist, return true, else return 404\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ActivatedRouteSnapshot\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | UrlTree\n\n                    \n                    \n                        boolean | UrlTree\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n\tActivatedRouteSnapshot,\n\tCanActivate,\n\tRouter,\n\tUrlTree,\n} from '@angular/router';\n\nimport { fallbackLanguage, languages } from '@app/globals';\n\n/**\n * Guard which checks if the given language is permitted as an Route\n */\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class LanguageGuard implements CanActivate {\n\tconstructor(private readonly router: Router) {}\n\n\t/**\n\t * Should the language exist, return true, else return 404\n\t * @param  next ActivatedRouteSnapshot\n\t * @param  routerState RouterStateSnapshot\n\t * @return boolean | UrlTree\n\t */\n\tcanActivate(next: ActivatedRouteSnapshot): boolean | UrlTree {\n\t\tif (languages.includes(next.params.language)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn this.router.parseUrl(`${fallbackLanguage}/404`);\n\t\t}\n\t}\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/local-storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                LocalStorageService provides a service to save and gets the Store\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                platformId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSavedState\n                            \n                            \n                                setSavedState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/local-storage.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSavedState\n                        \n                    \n                \n            \n            \n                \ngetSavedState(localStorageKey: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/local-storage.service.ts:27\n                \n            \n\n\n            \n                \n                    getSavedState retrieves the store from localStorage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    localStorageKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        key of the store\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        JSON for given store Key\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSavedState\n                        \n                    \n                \n            \n            \n                \nsetSavedState(state: any, localStorageKey: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/local-storage.service.ts:16\n                \n            \n\n\n            \n                \n                    setSavedState stores the store as a localStorage JSON blob\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        current State\n\n                                    \n                                \n                                \n                                    localStorageKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        key of the store\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        platformId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(PLATFORM_ID)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/services/local-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\n/* istanbul ignore next */\n/**\n * LocalStorageService provides a service to save and gets the Store\n */\n@Injectable({ providedIn: 'root' })\nexport class LocalStorageService {\n\tconstructor(@Inject(PLATFORM_ID) public platformId: string) {}\n\n\t/**\n\t * setSavedState stores the store as a localStorage JSON blob\n\t * @param  state           current State\n\t * @param  localStorageKey key of the store\n\t */\n\tsetSavedState(state: any, localStorageKey: string): void {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tsessionStorage.setItem(localStorageKey, JSON.stringify(state));\n\t\t}\n\t}\n\n\t/**\n\t * getSavedState retrieves the store from localStorage\n\t * @param  localStorageKey key of the store\n\t * @return JSON for given store Key\n\t */\n\tgetSavedState(localStorageKey: string): any {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\treturn JSON.parse(sessionStorage.getItem(localStorageKey));\n\t\t}\n\t\treturn {};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MockActiveStateSnapshot.html":{"url":"interfaces/MockActiveStateSnapshot.html","title":"interface - MockActiveStateSnapshot","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MockActiveStateSnapshot\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/testing/mock-store.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            firstChild\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            params\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            queryParams\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstChild\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstChild:         MockActiveStateSnapshot | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MockActiveStateSnapshot | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The route of the Mocked Router State\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:         Params\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Params\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The params of the Mocked Router State\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queryParams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queryParams:         Params\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Params\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The params of the Mocked Router State\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Params } from '@angular/router';\n\nexport interface MockActiveStateSnapshot {\n\t/**\n\t * The route of the Mocked Router State\n\t */\n\tfirstChild: MockActiveStateSnapshot | null;\n\t/**\n\t * The params of the Mocked Router State\n\t */\n\tparams?: Params;\n\t/**\n\t * The params of the Mocked Router State\n\t */\n\tqueryParams?: Params;\n}\n\nexport interface MockRouterStateSnapshot {\n\t/**\n\t * The route of the Mocked Router State\n\t */\n\troot: MockActiveStateSnapshot;\n\t/**\n\t * The URL of the Mocked Router State\n\t */\n\turl: string;\n}\n\n/*\n * Initital state used for the mock store provided by ngrx\n */\nexport const initialState = {\n\tapplicationState: {\n\t\tisPendingRequest: false,\n\t},\n\tentitiesState: {\n\t\tentities: {\n\t\t\t'93dd0fd6-fd8c-4c70-a213-cb76d1ef6eda': {\n\t\t\t\tcountry: 'NL',\n\t\t\t\tcurrency: 'EUR',\n\t\t\t\tdateFormat: 'DD-MM-YYYY',\n\t\t\t\temail: 'no-reply@domein.nl',\n\t\t\t\tguid: '93dd0fd6-fd8c-4c70-a213-cb76d1ef6eda',\n\t\t\t\tmarkdown:\n\t\t\t\t\t'# Male est natusque femina et iuvenis Procnes\\r\\n## Eram huc inpetus\\r\\nLorem markdownum *et erectus custodes* imago, dantque, locus vocandus candore. Inpius nymphas tu nondum divitior novissima visus pariter peioris; ferrum, de. Haec in eripe cupidine erat; claris Aetne, partu, in haut Idomeneus herbis meorum cum posse. Coniunx lacertis! Ne Oetaeus, et lassant alios circumdata quod convicia Ossa: aesculeae admonita que.\\r\\n## Dum ponendi sistitur saepe triplicesque\\r\\n*De est* servet, animalia spoliis servavique dulce. Formidine posset. **Lato prato** enim animam exit coniugis duabus, in lucum [videoque ecce et](http://thymo-simul.net/neritius-tu) numine. Mihi quoque patruique sollicitis: postquam ab qua parientem, molior in [Delphos verba et](http://www.ingeniis-tangam.io/eloquitur.php) imperat.\\r\\n> Ait flebile. Numine tela lumina, illa, omnes verba! **Aethere posito**, quae\\r\\n> cucurri ita. Manibus tinguamus lustrantem si erat inposita mater, mutilatae\\r\\n> fugiunt egredior, formae piscator nisi adludentibus media vix. Odorant iuvat.',\n\t\t\t},\n\t\t},\n\t\terrorMessage: null,\n\t\tids: ['93dd0fd6-fd8c-4c70-a213-cb76d1ef6eda'],\n\t\tisLoaded: true,\n\t\tisLoading: false,\n\t},\n\tnotifications: {\n\t\tentities: {\n\t\t\t'2': {\n\t\t\t\tbody: 'message test',\n\t\t\t\tid: 2,\n\t\t\t\ttimeStamp: new Date(),\n\t\t\t\ttitle: 'title test',\n\t\t\t\ttype: 'success',\n\t\t\t},\n\t\t},\n\t\tids: [2],\n\t},\n\trouterState: {\n\t\tstate: {\n\t\t\tparams: {\n\t\t\t\tlanguage: 'nl',\n\t\t\t},\n\t\t\tqueryParams: {\n\t\t\t\tq: 'nothing',\n\t\t\t},\n\t\t\turl: 'nl',\n\t\t},\n\t},\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MockRouterStateSnapshot.html":{"url":"interfaces/MockRouterStateSnapshot.html","title":"interface - MockRouterStateSnapshot","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MockRouterStateSnapshot\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/testing/mock-store.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            root\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        root\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        root:         MockActiveStateSnapshot\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MockActiveStateSnapshot\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The route of the Mocked Router State\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL of the Mocked Router State\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Params } from '@angular/router';\n\nexport interface MockActiveStateSnapshot {\n\t/**\n\t * The route of the Mocked Router State\n\t */\n\tfirstChild: MockActiveStateSnapshot | null;\n\t/**\n\t * The params of the Mocked Router State\n\t */\n\tparams?: Params;\n\t/**\n\t * The params of the Mocked Router State\n\t */\n\tqueryParams?: Params;\n}\n\nexport interface MockRouterStateSnapshot {\n\t/**\n\t * The route of the Mocked Router State\n\t */\n\troot: MockActiveStateSnapshot;\n\t/**\n\t * The URL of the Mocked Router State\n\t */\n\turl: string;\n}\n\n/*\n * Initital state used for the mock store provided by ngrx\n */\nexport const initialState = {\n\tapplicationState: {\n\t\tisPendingRequest: false,\n\t},\n\tentitiesState: {\n\t\tentities: {\n\t\t\t'93dd0fd6-fd8c-4c70-a213-cb76d1ef6eda': {\n\t\t\t\tcountry: 'NL',\n\t\t\t\tcurrency: 'EUR',\n\t\t\t\tdateFormat: 'DD-MM-YYYY',\n\t\t\t\temail: 'no-reply@domein.nl',\n\t\t\t\tguid: '93dd0fd6-fd8c-4c70-a213-cb76d1ef6eda',\n\t\t\t\tmarkdown:\n\t\t\t\t\t'# Male est natusque femina et iuvenis Procnes\\r\\n## Eram huc inpetus\\r\\nLorem markdownum *et erectus custodes* imago, dantque, locus vocandus candore. Inpius nymphas tu nondum divitior novissima visus pariter peioris; ferrum, de. Haec in eripe cupidine erat; claris Aetne, partu, in haut Idomeneus herbis meorum cum posse. Coniunx lacertis! Ne Oetaeus, et lassant alios circumdata quod convicia Ossa: aesculeae admonita que.\\r\\n## Dum ponendi sistitur saepe triplicesque\\r\\n*De est* servet, animalia spoliis servavique dulce. Formidine posset. **Lato prato** enim animam exit coniugis duabus, in lucum [videoque ecce et](http://thymo-simul.net/neritius-tu) numine. Mihi quoque patruique sollicitis: postquam ab qua parientem, molior in [Delphos verba et](http://www.ingeniis-tangam.io/eloquitur.php) imperat.\\r\\n> Ait flebile. Numine tela lumina, illa, omnes verba! **Aethere posito**, quae\\r\\n> cucurri ita. Manibus tinguamus lustrantem si erat inposita mater, mutilatae\\r\\n> fugiunt egredior, formae piscator nisi adludentibus media vix. Odorant iuvat.',\n\t\t\t},\n\t\t},\n\t\terrorMessage: null,\n\t\tids: ['93dd0fd6-fd8c-4c70-a213-cb76d1ef6eda'],\n\t\tisLoaded: true,\n\t\tisLoading: false,\n\t},\n\tnotifications: {\n\t\tentities: {\n\t\t\t'2': {\n\t\t\t\tbody: 'message test',\n\t\t\t\tid: 2,\n\t\t\t\ttimeStamp: new Date(),\n\t\t\t\ttitle: 'title test',\n\t\t\t\ttype: 'success',\n\t\t\t},\n\t\t},\n\t\tids: [2],\n\t},\n\trouterState: {\n\t\tstate: {\n\t\t\tparams: {\n\t\t\t\tlanguage: 'nl',\n\t\t\t},\n\t\t\tqueryParams: {\n\t\t\t\tq: 'nothing',\n\t\t\t},\n\t\t\turl: 'nl',\n\t\t},\n\t},\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificationInterface.html":{"url":"interfaces/NotificationInterface.html","title":"interface - NotificationInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NotificationInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/notifications/notifications.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                NotificationInterface is the interface representing a notification\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            prettyTimeStamp\n                                        \n                                \n                                \n                                        \n                                            timeStamp\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body of the notification\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    id represents the unique id of the notification\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prettyTimeStamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prettyTimeStamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    prettyTimeStamp prettifies the timeStamp\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeStamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeStamp:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    timeStamp of the notification that has been sent\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    title of the notification\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    type of the notification, for example success, warning, danger, info\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface NotificationInterface {\n\t/**\n\t * id represents the unique id of the notification\n\t */\n\tid?: number;\n\t/**\n\t * timeStamp of the notification that has been sent\n\t */\n\ttimeStamp: Date;\n\t/**\n\t * prettyTimeStamp prettifies the timeStamp\n\t */\n\tprettyTimeStamp?: string;\n\t/**\n\t * body of the notification\n\t */\n\tbody: string;\n\t/**\n\t * title of the notification\n\t */\n\ttitle: string;\n\t/**\n\t * type of the notification, for example success, warning, danger, info\n\t */\n\ttype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificationsState.html":{"url":"interfaces/NotificationsState.html","title":"interface - NotificationsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NotificationsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/notifications/notifications.reducer.ts\n        \n\n\n            \n                Description\n            \n            \n                Notification store state\n\n            \n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entities\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entities:     literal type | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    entities are all notifications entities for the the store\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { Action, createReducer, on } from '@ngrx/store';\n\nimport * as NotificationActions from './notifications.actions';\nimport { NotificationInterface } from './notifications.interface';\n\n/**\n * Notification store state\n */\nexport interface NotificationsState extends EntityState {\n\t/**\n\t * entities are all notifications entities for the the store\n\t */\n\tentities: { [item: string]: NotificationInterface } | null;\n}\n\nexport const adapter: EntityAdapter =\n\tcreateEntityAdapter();\n\nexport const initialState: NotificationsState = adapter.getInitialState();\n\nconst notificationReducer = createReducer(\n\tinitialState,\n\ton(NotificationActions.loadNotificationsSuccess, (state, action) =>\n\t\tadapter.addMany(action.notifications, { ...state, isLoading: false }),\n\t),\n\ton(NotificationActions.addNotification, (state, action) =>\n\t\tadapter.addOne(action.notification, { ...state, isLoading: false }),\n\t),\n\ton(NotificationActions.clearNotifications, (state) =>\n\t\tadapter.removeAll(state),\n\t),\n);\n\n/**\n * The notification reducer\n * @param  {State|undefined} state\n * @param  {Action} action\n */\nexport function reducer(\n\tstate: NotificationsState | undefined,\n\taction: Action,\n): NotificationsState {\n\treturn notificationReducer(state, action);\n}\n\nexport const { selectIds, selectEntities, selectAll, selectTotal } =\n\tadapter.getSelectors();\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PushNotificationService.html":{"url":"injectables/PushNotificationService.html","title":"injectable - PushNotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PushNotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/push-notifications/push-notifications.service.ts\n        \n\n\n            \n                Description\n            \n            \n                PushNotificationService provides a service to get push notifications\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadNotifications\n                            \n                            \n                                sendNotification\n                            \n                            \n                                    Public\n                                sendSubscriptionToTheServer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/push-notifications/push-notifications.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadNotifications\n                        \n                    \n                \n            \n            \n                \nloadNotifications()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/push-notifications/push-notifications.service.ts:33\n                \n            \n\n\n            \n                \n                    loadNotifications makes an API call to get notifications\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        the response of the HTTP GET\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendNotification\n                        \n                    \n                \n            \n            \n                \nsendNotification(notification: NotificationInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/push-notifications/push-notifications.service.ts:65\n                \n            \n\n\n            \n                \n                    sendNotification makes an API call to send a new notification\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notification\n                                    \n                                                NotificationInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        the response of the HTTP POST\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        sendSubscriptionToTheServer\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendSubscriptionToTheServer(subscription: PushSubscription)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/push-notifications/push-notifications.service.ts:20\n                \n            \n\n\n            \n                \n                    sendSubscriptionToTheServer returns an HTTP client POST for push notifications\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    subscription\n                                    \n                                            PushSubscription\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the subscription\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        push notification\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport { NotificationInterface } from '@store/notifications/notifications.interface';\n\n/**\n * PushNotificationService provides a service to get push notifications\n */\n@Injectable()\nexport class PushNotificationService {\n\tconstructor(private readonly http: HttpClient) {}\n\n\t/**\n\t * sendSubscriptionToTheServer returns an HTTP client POST for push notifications\n\t * @param { PushSubscription } subscription the subscription\n\t * @return { Observable } push notification\n\t */\n\tpublic sendSubscriptionToTheServer(\n\t\tsubscription: PushSubscription,\n\t): Observable {\n\t\treturn this.http.post(\n\t\t\t`${environment.notificationServer}subscription`,\n\t\t\tsubscription,\n\t\t);\n\t}\n\n\t/**\n\t * loadNotifications makes an API call to get notifications\n\t * @return the response of the HTTP GET\n\t */\n\tloadNotifications(): Observable {\n\t\treturn this.http.get(`${environment.apiUrl}notifications`, {\n\t\t\t...environment.apiCookies,\n\t\t\tobserve: 'response',\n\t\t});\n\t}\n\n\t/**\n\t * sendNotification makes an API call to send a new notification\n\t * @param { title: string, body: string; type: string } notification - which should be the notification\n\t * @return the response of the HTTP POST\n\t */\n\tsendNotification(notification: NotificationInterface): Observable {\n\t\treturn this.http.post(\n\t\t\t`${environment.apiUrl}notifications`,\n\t\t\t{ ...notification },\n\t\t\t{ ...environment.apiCookies, observe: 'response' },\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouterEffects.html":{"url":"injectables/RouterEffects.html","title":"injectable - RouterEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RouterEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/router/router.effects.ts\n        \n\n\n            \n                Description\n            \n            \n                RouterEffects class which contains all effects when route effects are triggered\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                navigate$\n                            \n                            \n                                navigateBack$\n                            \n                            \n                                navigateForward$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, router: Router, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/router/router.effects.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        navigate$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType(routerActions.go),\n\t\t\t\tmap((action: any) => action.payload),\n\t\t\t\ttap(({ path, query: queryParams, extras }) => {\n\t\t\t\t\tthis.router.navigate(path, { queryParams, ...extras });\n\t\t\t\t}),\n\t\t\t),\n\t\t{ dispatch: false, useEffectsErrorHandler: true },\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/store/router/router.effects.ts:26\n                        \n                    \n\n            \n                \n                    navigate Effect of the RouterEffects class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateBack$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType(routerActions.back),\n\t\t\t\ttap(() => this.location.back()),\n\t\t\t),\n\t\t{ dispatch: false, useEffectsErrorHandler: true },\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/store/router/router.effects.ts:54\n                        \n                    \n\n            \n                \n                    navigateBack Effect of the RouterEffects class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateForward$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType(routerActions.forward),\n\t\t\t\ttap(() => this.location.forward()),\n\t\t\t),\n\t\t{ dispatch: false, useEffectsErrorHandler: true },\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/store/router/router.effects.ts:66\n                        \n                    \n\n            \n                \n                    navigateForward Effect of the RouterEffects class\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Location } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport * as routerActions from '@store/router/router.actions';\n\n/**\n * RouterEffects class which contains all effects when route effects are triggered\n * @return [description]\n */\n@Injectable()\nexport class RouterEffects {\n\tconstructor(\n\t\tprivate readonly actions$: Actions,\n\t\tprivate readonly router: Router,\n\t\tprivate readonly location: Location,\n\t) {}\n\n\t/**\n\t * navigate Effect of the RouterEffects class\n\t */\n\tnavigate$: Observable = createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType(routerActions.go),\n\t\t\t\tmap((action: any) => action.payload),\n\t\t\t\ttap(({ path, query: queryParams, extras }) => {\n\t\t\t\t\tthis.router.navigate(path, { queryParams, ...extras });\n\t\t\t\t}),\n\t\t\t),\n\t\t{ dispatch: false, useEffectsErrorHandler: true },\n\t);\n\n\t/**\n\t * navigateBack Effect of the RouterEffects class\n\t */\n\tnavigateBack$: Observable = createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType(routerActions.back),\n\t\t\t\ttap(() => this.location.back()),\n\t\t\t),\n\t\t{ dispatch: false, useEffectsErrorHandler: true },\n\t);\n\n\t/**\n\t * navigateForward Effect of the RouterEffects class\n\t */\n\tnavigateForward$: Observable = createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType(routerActions.forward),\n\t\t\t\ttap(() => this.location.forward()),\n\t\t\t),\n\t\t{ dispatch: false, useEffectsErrorHandler: true },\n\t);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouterStateUrl.html":{"url":"interfaces/RouterStateUrl.html","title":"interface - RouterStateUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RouterStateUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/router/router.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface to define the Router State URL\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            params\n                                        \n                                \n                                \n                                        \n                                            queryParams\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:         Params\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Params\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The params of the Router State\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queryParams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queryParams:         Params\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Params\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The queryParams of the Router State\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL of the Router State\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Params } from '@angular/router';\n\n/**\n * Interface to define the Router State URL\n */\nexport interface RouterStateUrl {\n\t/**\n\t * The URL of the Router State\n\t */\n\turl: string;\n\n\t/**\n\t * The params of the Router State\n\t */\n\tparams: Params;\n\n\t/**\n\t * The queryParams of the Router State\n\t */\n\tqueryParams: Params;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/shared.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Marks an class as an NgModule so it could be configured\n\n        \n\n\n        \n            \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CurrencyPipe } from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\n/**\n * Marks an class as an NgModule so it could be configured\n */\n@NgModule({\n\tdeclarations: [],\n\texports: [TranslateModule],\n\timports: [RouterModule, TranslateModule.forChild({})],\n\tproviders: [CurrencyPipe],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\n/* istanbul ignore next */\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TranslateUniversalLoader.html":{"url":"classes/TranslateUniversalLoader.html","title":"class - TranslateUniversalLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TranslateUniversalLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ssr/translate.loader.ts\n        \n\n\n            \n                Description\n            \n            \n                class for SSR translations which implements the TranslateLoader from ngx-translate\n\n            \n\n\n            \n                Implements\n            \n            \n                            TranslateLoader\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prefix: string, suffix: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/ssr/translate.loader.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prefix\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        suffix\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getTranslation\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTranslation(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ssr/translate.loader.ts:23\n                \n            \n\n\n            \n                \n                    getTranslation which will provide the given language\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the language code\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TranslateLoader } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\n\nimport * as fs from 'fs';\n\n/* istanbul ignore next */\n/**\n * class for SSR translations which implements the TranslateLoader from ngx-translate\n * @param prefix [description]\n * @param suffix [description]\n */\nexport class TranslateUniversalLoader implements TranslateLoader {\n\tconstructor(\n\t\tprivate readonly prefix: string = 'i18n',\n\t\tprivate readonly suffix: string = '.json',\n\t) {}\n\n\t/**\n\t * getTranslation which will provide the given language\n\t * @param  lang the language code\n\t * @return      Observable\n\t */\n\tpublic getTranslation(lang: string): Observable {\n\t\treturn Observable.create((observer: any) => {\n\t\t\tobserver.next(\n\t\t\t\tJSON.parse(\n\t\t\t\t\tfs.readFileSync(\n\t\t\t\t\t\t`${this.prefix}/${lang}${this.suffix}`,\n\t\t\t\t\t\t'utf8',\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t\tobserver.complete();\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/UniversalInterceptor.html":{"url":"interceptors/UniversalInterceptor.html","title":"interceptor - UniversalInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  UniversalInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ssr/http.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                AppHttpInterceptor Intercepts all incoming XHR calls and defines the store if a request is pending\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transferState: TransferState)\n                    \n                \n                        \n                            \n                                Defined in src/app/ssr/http.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transferState\n                                                  \n                                                        \n                                                                        TransferState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ssr/http.interceptor.ts:25\n                \n            \n\n\n            \n                \n                    Intercepts HttpRequest or HttpResponse and set the transferState\nto save the status in the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n\tHttpHandler,\n\tHttpInterceptor,\n\tHttpRequest,\n\tHttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { makeStateKey, TransferState } from '@angular/platform-browser';\nimport { tap } from 'rxjs/operators';\n\n/* istanbul ignore next */\n/**\n * AppHttpInterceptor Intercepts all incoming XHR calls and defines the store if a request is pending\n */\n@Injectable()\nexport class UniversalInterceptor implements HttpInterceptor {\n\tconstructor(private readonly transferState: TransferState) {}\n\t/* istanbul ignore next */\n\t/**\n\t * Intercepts HttpRequest or HttpResponse and set the transferState\n\t * to save the status in the store\n\t * @param  {HttpRequest} request\n\t * @param  {HttpHandler} next\n\t */\n\tintercept(req: HttpRequest, next: HttpHandler) {\n\t\treturn next.handle(req).pipe(\n\t\t\ttap((event) => {\n\t\t\t\tif (event instanceof HttpResponse) {\n\t\t\t\t\tthis.transferState.set(makeStateKey(req.url), event.body);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\n5.0.0\nBreaking Changes\n\n  Testing: migrate from Karma/jasmine to Jest, faster experience, inline test runners\n  Testing: moved from marbles and using testScheduler from rxjs\n\nFeatures\n\n  Angular: Updated to Angular 12.x\n  SSR: Created new interceptor for transferStateKey management\n  Packages: Updated all dependencies to the latest version of 2021-06-17\n\n4.1.0\nBreaking Changes\n\n  ESLint: migrate from TSlint to ESlint, tslint is deprecated\n\n4.0.0\nFeatures\n\n  Packages: Updated all dependencies to the latest version of 2021-02-03\n  Packages: Removed deprecated dependency @nguniversal/module-map-ngfactory-loader\n  Husky: Upgrade to latest husky with new hooks\n  CHROME_BIN: Provide 'chromeVersion' into package json\n  Testing: All reports are now provided inside 'reports' folder which will be ignored by .gitignore\n\nBugfix\n\n  Travis: Fix the SonarCloud instance, moving from dist trusty to xenial. Java 11 supported\n\nBreaking Changes\n\n  NGX-build-plus: removed ngx-build-plus because seems obsolete\n\n3.0.0\nFeatures\n\n  Angular: Updated to Angular 10.x\n  Packages: Updated all dependencies to the latest version of 2020-10-01\n  mockServer: Add Vapid keys, to make it possible for push notifications\n  Push notifications: Add store to save all push notifications to\n\n2.1.0\nFeatures\n\n  Packages: Updated all dependencies to the latest version of 2020-03-26\n  mockServer: Converted mockserver from javascript to Typescript\n  mockServer: Updated mockserver to HTTPS/HTTP2\n  mockServer: Mockserver gets served from Docker image\n  mockServer: Seperated the mockServer with its own package.json\n\nBugfix\n\n  Travis: Fix the SonarCloud instance\n  Husky: Downgrade Husky because git hooks doesn't seem to work on V4.\n\n2.0.1\nBugfix\n\n  Unit Test: Stability on unit test with NGRX effects\n\n2.0.0\nFeatures\n\n  Angular: Updated to Angular 9.x\n  IVY: IVY enabled by default\n\nBreaking Changes\n\n  SSR: New way to use SSR and Prerender, compare the server.ts file with the previous carefully. Also webpack.server.config.js is removed\n  Compodoc: Compodoc has its own tsconfig now\n  Lighthouse: Lighthouse new API needs a API key, and could be added optionally\n\n1.6.0\nFeatures\n\n  Preboot: Implemented Preboot and remove flickering between SSG and Angular App\n  Packages: Updated all dependencies to the latest version of 2019-10-07\n\n1.5.3\nBugfix\n\n  Travis: Integrates SonarCloud in Travis\n\n1.5.2\nBugfix\n\n  SonarCloud: removed code smells based on stricter Typescript\n\n1.5.1\nBugfix\n\n  SonarCloud: removed code smells\n\n1.5.0\nFeatures\n\n  Travis: Introduced Travis CI\n  Codecov: Introduced Codecov as a badge\n  SonarCloud: Introduced SonarCloud\n\n1.4.0\nFeatures\n\n  Packages: Updated all dependencies to the latest version of 2019-08-18\n\n1.3.0\nFeatures\n\n  SSR / Prerender Within SSR and Prerender, store actions within OnInit lifecycle will be rendered on the mockServer\n  Service Updated services with HTTP get handling with correct behaviour for SSR lifecycle\n  Packages: Updated all dependencies to the latest version of 2019-08-03\n\nBreaking Changes\n\n  Prerender Prerender now works completely different, it uses the SSR config and server to handle each file, see commitHash: 'bd876b5cb040b60d34355f0b41cfc183455b3d52'\n\n1.2.2\nBug fixes\n\n  SSR fixed an issue with Angular 8 for server side rendering for DOM rendering\n\n1.2.1\nBug fixes\n\n  mockServer fixed mockServer for serving data like json files and API calls\n\n1.2.0\nFeatures\n\n  Packages: Updated all dependencies to the latest version of 2019-07-21\n  Packages: Added 'package-lock.json' for better understanding of all dependencies\n  Development: Update README.md and new command with fix for webdriver issues for E2E\n\nBug fixes\n\n  Angular fixed build version for differential loading with ngx-build-plus:browser; es5 vs. es2015\n\n1.1.3\nBug fixes\n\n  Testing: remove protractor-image-comparison due not working on Windows and is obsolete\n  Development: Update README.md with quickstart for Windows.\n\n1.1.2\nBug fixes\n\n  Webpack: fixed extendible webpack for npm run start & npm run build\n\n1.1.1\nBug fixes\n\n  E2E: fixed path steps in 'cucumber.conf.js'\n  E2E: added @skip tag for example cucumber test\n  WPO fixed stats when IVY is disabled\n\n1.1.0\nFeatures\n\n  CHANGELOG: a Changelog.md is added\n  mockServer: Introduced option to use a mockServer with npm run server:mock\n  mockServer: Added mockServer to E2E test\n  mockServer: Added mock environment\n  httpInterceptor: Added httpInterceptor to watch all pending XHR calls in applicationState inside NGRX store\n  Service Worker When a new version is detected by the service worker, show confirmPrompt\n\nBreaking Changes\n\n  E2E: renamed './features' to './e2e'\n  Testing renamed './src/app/testing/mock-actions.ts' to './src/app/testing/mocks.spec.ts'\n\n1.0.0\n\n  Initial Commit (see README.md for all first features)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            createTranslateLoader\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            getMetaReducers\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.server.module.ts\n            \n            function\n            TranslateUniversalService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/base/base.component.ts\n            \n            component\n            BaseComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/globals.ts\n            \n            variable\n            fallbackLanguage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/globals.ts\n            \n            variable\n            languages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/globals.ts\n            \n            variable\n            languagesLabels\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/globals.ts\n            \n            variable\n            languagesRegex\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/helpers/general.helper.ts\n            \n            class\n            GeneralHelper\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/interceptors/http.interceptor.ts\n            \n            interceptor\n            AppHttpInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/pages/error/error-page.component.ts\n            \n            component\n            ErrorPageComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/pages/home/home-page.component.ts\n            \n            component\n            HomePageComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/routes/app-routing.module.ts\n            \n            injectable\n            CustomSerializer\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/routes/effects/google-analytics.effects.ts\n            \n            injectable\n            GoogleAnalyticsEffects\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/routes/guards/language-guard.service.ts\n            \n            guard\n            LanguageGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/routes/static.paths.ts\n            \n            variable\n            ROUTES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/routes/static.paths.ts\n            \n            variable\n            routesWithLanguages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/entities/entities.service.ts\n            \n            injectable\n            EntitiesService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/services/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/services/push-notifications/push-notifications.service.ts\n            \n            injectable\n            PushNotificationService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/ssr/app.interceptor.ts\n            \n            interceptor\n            AppHttpInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/ssr/http.interceptor.ts\n            \n            interceptor\n            UniversalInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/ssr/tokens.ts\n            \n            function\n            getInitialState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/ssr/tokens.ts\n            \n            variable\n            STATE_CB\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ssr/tokens.ts\n            \n            variable\n            window\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ssr/translate.loader.ts\n            \n            class\n            TranslateUniversalLoader\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/store/application/application.actions.ts\n            \n            variable\n            SetRequestStatus\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/application/application.reducer.ts\n            \n            interface\n            ApplicationState\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/store/application/application.reducer.ts\n            \n            function\n            reducer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/application/application.reducer.ts\n            \n            variable\n            createApplicationReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/application/application.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/application/application.selectors.ts\n            \n            variable\n            selectFeature\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/application/application.selectors.ts\n            \n            variable\n            selectIsMakingRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.actions.ts\n            \n            variable\n            ClearError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.actions.ts\n            \n            variable\n            Load\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.actions.ts\n            \n            variable\n            LoadFail\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.actions.ts\n            \n            variable\n            LoadSuccess\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.effects.ts\n            \n            injectable\n            EntitiesEffects\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.interface.ts\n            \n            interface\n            EntityInterface\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.reducer.ts\n            \n            interface\n            EntitiesState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.reducer.ts\n            \n            function\n            selectGuid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.reducer.ts\n            \n            variable\n            adapter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.reducer.ts\n            \n            variable\n            entitiesReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.reducer.ts\n            \n            variable\n            reducerToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.reducer.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.selectors.ts\n            \n            variable\n            selectAllEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.selectors.ts\n            \n            variable\n            selectFeature\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.selectors.ts\n            \n            variable\n            selectLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.selectors.ts\n            \n            variable\n            selectStandardEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.selectors.ts\n            \n            variable\n            selectStandardIds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/meta/app.tokens.ts\n            \n            variable\n            LOCAL_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/meta/app.tokens.ts\n            \n            variable\n            STORAGE_KEYS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/meta/storage.metareducer.ts\n            \n            function\n            storageMetaReducer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/meta/storage.metareducer.ts\n            \n            variable\n            merge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/meta/storage.metareducer.ts\n            \n            variable\n            pick\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.actions.ts\n            \n            variable\n            addNotification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.actions.ts\n            \n            variable\n            clearNotifications\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.actions.ts\n            \n            variable\n            loadNotifications\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.actions.ts\n            \n            variable\n            loadNotificationsFail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.actions.ts\n            \n            variable\n            loadNotificationsSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.actions.ts\n            \n            variable\n            sendNotification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.interface.ts\n            \n            interface\n            NotificationInterface\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.reducer.ts\n            \n            interface\n            NotificationsState\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.reducer.ts\n            \n            function\n            reducer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.reducer.ts\n            \n            variable\n            adapter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.reducer.ts\n            \n            variable\n            notificationReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.reducer.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.selectors.ts\n            \n            variable\n            selectAllNotifications\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.selectors.ts\n            \n            variable\n            selectFeature\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/router/router.actions.ts\n            \n            variable\n            back\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/router/router.actions.ts\n            \n            variable\n            forward\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/router/router.actions.ts\n            \n            variable\n            go\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/router/router.effects.ts\n            \n            injectable\n            RouterEffects\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/store/router/router.interface.ts\n            \n            interface\n            RouterStateUrl\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/store/router/router.selectors.ts\n            \n            variable\n            getRouterInfo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/router/router.selectors.ts\n            \n            variable\n            getRouterLanguage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/router/router.selectors.ts\n            \n            variable\n            selectReducerState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/testing/mock-store.ts\n            \n            interface\n            MockActiveStateSnapshot\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/testing/mock-store.ts\n            \n            interface\n            MockRouterStateSnapshot\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/testing/mock-store.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.mock.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 12.1.2\n        \n            @angular/common : 12.1.2\n        \n            @angular/compiler : 12.1.2\n        \n            @angular/core : 12.1.2\n        \n            @angular/forms : 12.1.2\n        \n            @angular/platform-browser : 12.1.2\n        \n            @angular/platform-browser-dynamic : 12.1.2\n        \n            @angular/platform-server : 12.1.2\n        \n            @angular/router : 12.1.2\n        \n            @angular/service-worker : 12.1.2\n        \n            @ngrx/effects : 12.2.0\n        \n            @ngrx/entity : 12.2.0\n        \n            @ngrx/router-store : 12.2.0\n        \n            @ngrx/store : 12.2.0\n        \n            @ngrx/store-devtools : 12.2.0\n        \n            @nguniversal/express-engine : 12.1.0\n        \n            @ngx-translate/core : 13.0.0\n        \n            @ngx-translate/http-loader : 6.0.0\n        \n            classlist.js : 1.1.20150312\n        \n            core-js : 3.15.2\n        \n            express : 4.17.1\n        \n            lodash.merge : 4.6.2\n        \n            lodash.pick : 4.4.0\n        \n            ngx-markdown : 12.0.1\n        \n            preboot : 8.0.0\n        \n            rxjs : 7.2.0\n        \n            tslib : 2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                        \n                            getInitialState   (src/.../tokens.ts)\n                        \n                        \n                            getMetaReducers   (src/.../app.module.ts)\n                        \n                        \n                            reducer   (src/.../application.reducer.ts)\n                        \n                        \n                            reducer   (src/.../entities.reducer.ts)\n                        \n                        \n                            reducer   (src/.../notifications.reducer.ts)\n                        \n                        \n                            selectGuid   (src/.../entities.reducer.ts)\n                        \n                        \n                            storageMetaReducer   (src/.../storage.metareducer.ts)\n                        \n                        \n                            TranslateUniversalService   (src/.../app.server.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTranslateLoader\n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http)\n                \n            \n\n\n\n\n            \n                \n                    Custom TranslateService Loader to load the given language\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        HttpClient to 'mock' the call to the assets i18n json file\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TranslateHttpLoader\n\n                    \n                    \n                        JSON\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMetaReducers\n                        \n                    \n                \n            \n            \n                \ngetMetaReducers(saveKeys, localStorageKey, storageService)\n                \n            \n\n\n\n\n            \n                \n                    factory meta-reducer configuration function\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saveKeys\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    localStorageKey\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    storageService\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MetaReducer[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/ssr/tokens.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getInitialState\n                        \n                    \n                \n            \n            \n                \ngetInitialState()\n                \n            \n\n\n\n\n            \n                \n                    getInitialState will return the initalState from window if defined\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        [description]\n\n                    \n                \n            \n        \n    \n    src/app/store/application/application.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n                    The Application reducer, which contain all state differentiates when an action is dispatched\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe initial state\n\n\n                                    \n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe action from actionTypes to perform\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The new state\n\n                    \n                \n            \n        \n    \n    src/app/store/entities/entities.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntitiesState\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectGuid\n                        \n                    \n                \n            \n            \n                \nselectGuid(entity)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/store/notifications/notifications.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n                    The notification reducer\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NotificationsState\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/store/meta/storage.metareducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        storageMetaReducer\n                        \n                    \n                \n            \n            \n                \nstorageMetaReducer(saveKeys, localStorageKey, storageService)\n                \n            \n\n\n\n\n            \n                \n                    storageMetaReducer is a function which gets and sets the Store to and from localStorage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saveKeys\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    localStorageKey\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    storageService\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         function\n\n                    \n                    \n                        state\n\n                    \n                \n            \n        \n    \n    src/app/app.server.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TranslateUniversalService\n                        \n                    \n                \n            \n            \n                \nTranslateUniversalService()\n                \n            \n\n\n\n\n            \n                \n                    Custom TranslateUniversalService Loader to load the given language\n\n\n                    \n                    \n                    \n                        Returns :         TranslateUniversalLoader\n\n                    \n                    \n                        JSON\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\nBlazing fast advanced Angular Starterkit\nPowerful Starterkit combining all latest advanced Angular features. Strict typescript mode and preventing pushing untested code. Read more for all features.\nFeatures\n\n  ⭐️ Modern vs. Legacy build (ES5 vs ES2015)\n  😍 IVY by default\n  ⭐️ NGRX store (implemented according ngrx.io)\n  😴 Lazy Loading\n  ⭐️ HttpInterceptor\n  ⭐️ NGX-Translate (assets/i18n/{locale}.json)\n  🚀 SSR (Server Side Rendering)\n  🚀 Prerendering (for SEO and static HTML generation)\n  😍 PWA (Progressive Web App)\n  😍 Service Worker detects new build versions\n  🤓 Unit Test (Jest)\n  🤓 E2E Test / Reports (Protractor / Cucumber)\n  🗃 Documentation Generation (Compodoc)\n  🚀 WPO: Google Lighthouse reporter (save to Compodoc additional docs)\n  🚀 WPO: Stats for ES5 build and ES2015\n  🎯 Git hooks (husky)\n  🤩 Ability to Mock data (mockServer) (Docker)\n  🎰 WebPush integration (mockServer and PWA)\n\nQuickstart:\n\n  MAC: npm run certificate:generate:mac && npm run start:clean\n  Windows: remove ssl from serve inside 'angular.json' and npm run start:clean\n\nPerfect score application 🤩\n\nDevelopment server\nnpm run start available at https://localhost:4202/ (Hot reloading enabled)\nnpm run start:mock will use the mock environment, which connects with the mockServer at https://localhost:4000\nBecause we are running localhost on SSL (https), you will need to generate a certificate and key, and place them in a folder called build. Run npm run certificate:generate:mac to create the required certificates and place them in the required folder.\nGit hooks 🎯\nGit hooks are active, which means you only can commit when there are no linting errors, and all unit-tests succeeds. Other commmands can be implemented in the package.json with husky.\nWhen using nvm, the default node should be > 10. nvm alias stable default\nBuild\n\n  npm run build - normal production build\n  npm run build:gzip - production build with files already gzipped\n  npm run prerender:build - npm run build:gzip with prerendering all routes\n  npm run ssr:build- production build with Server Side Rendering\n\nIvy Build 😍\nIvy is set to true by default and works with SSR / Prerendering\nServer Side Rendering (SSR) 😍\nThis project comes with built-in SSR functionality. The effect of SSR will be valuable on larger projects or slower internet connections, run Google Audit with slow network to see the difference.\n\n  For Serving - npm run start:ssr\n  For Building - npm run ssr:build\n\nPrerendering Angular 😍😍😍\n\n  For Serving - npm run start:prerender\n  For Building - npm run prerender:build\n\nTesting\n\n  npm run lint - Linting application\n  npm run test - Unit test Watcher (only runs tests for changed files)\n  npm run test-all - Unit test Watcher (runs all tests)\n  npm run test:ci - Unit test single Run\n  npm run test:e2e - End to End test with Protractor and reports with Cucumber\n\nRunning unit tests with Jest 🤓\nRun npm run test to execute the unit tests via Jest. This script will be run as a watcher and only runs tests for changed files. Most effective to run this alongside npm run start while developing.\nRun test-all to execute a all unit tests when a file change.\nRun test:ci to execute a single run for the Unit test. Best usecases are for pre-commit checks and in pipeline scripts.\nBoth scripts will provide a Code Coverage file, which can be found in './reports/coverage'\nRunning E2E tests with Protractor and Cucumber 🤓\nRun npm run test:e2e to execute the E2E protractor tests. Tests can be found within ./e2e all written in Cucumber style.\nThis test will provide an report which will be shown at the end of all tests. It can also be found in ./reports/e2e/report. When tests fails, there will be a screenshot attached to the scenario where the test has failed.\nKnown issue(s) 💊\nWhen npm run test:e2e fails to compile as of webdriver issues, run npm run test:e2e:fix-webdriver to fix this compile error and try again.\nDocumentation 🗃\n\nnpm run doc:full - create documentation with compodoc\n  Unit test coverage\n  E2E reports\n  WPO reports\n\n\n\nsample can be fount at './documentation/index.html'\nWebsite Performance Optimization 🚀\n\n  npm run wpo:stats to get a clear view of all dependencies and their dependencies for your project.\n  npm run wpo:lighthouse to get a lighthouse score for your current project. (change the URL in ci/fetchLighthouse.js).\n\nMock data (MockServer) 🤩\nAs of version 1.1.0 it is possible to setup a mockServer with npm run server:mock. Port will be https://localhost:4000 and the different status can be set at https://localhost:4000/mocking. All data can be setup in './mockServer'. Examples of API, JSON and images are added.\nAs of version 2.1.0 the mockServer is running through Docker and runs with HTTPS/HTTP2\nWeb push\nDo a POST call to https://localhost:4000/notification to create a mocked push notification.\nBest can be tested after npm run build && npm run start:dist. The application will then be available at https://localhost:8081\nNOTE: for the mockserver to work for this production build use npm run server:mock:prod\nexample sites:\n\n  IVY build - https://angular.rickvandermeij.nl\n  Prerendering - https://angular-prerender.rickvandermeij.nl\n  Server Side Rendering - npm run start:ssr\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Rick van der Meij\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_providers\n\n\n\ncluster_ErrorModule\n\n\n\ncluster_ErrorModule_declarations\n\n\n\ncluster_ErrorModule_imports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_HomeModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\nAppModule -->\n\nErrorModule->AppModule\n\n\n\n\n\nAppHttpInterceptor\n\nAppHttpInterceptor\n\nAppModule -->\n\nAppHttpInterceptor->AppModule\n\n\n\n\n\nPushNotificationService\n\nPushNotificationService\n\nAppModule -->\n\nPushNotificationService->AppModule\n\n\n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\nUniversalInterceptor\n\nUniversalInterceptor\n\nAppServerModule -->\n\nUniversalInterceptor->AppServerModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nErrorModule -->\n\nErrorPageComponent->ErrorModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nErrorModule -->\n\nSharedModule->ErrorModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nHomeModule -->\n\nHomePageComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nEntitiesService\n\nEntitiesService\n\nHomeModule -->\n\nEntitiesService->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"unit-test.html":{"url":"unit-test.html","title":"unit-test - unit-test","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n  Unit test coverage\n\n\n\n    \n    \n    \n    \n\n\n\n    \n        \n            File\n            Statements\n            Branches\n            Functions\n            Lines\n        \n    \n    \n        \n            \n                \n                        /Users/rickvandermeij/Sources/angular-starterkit/src/app/interceptors/http.interceptor.ts\n            \n            \n                100 %\n                (11/11)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (3/3)\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                        /Users/rickvandermeij/Sources/angular-starterkit/src/app/pages/home/home-page.component.ts\n            \n            \n                100 %\n                (19/19)\n            \n            \n                100 %\n                (1/1)\n            \n            \n                100 %\n                (3/3)\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                        /Users/rickvandermeij/Sources/angular-starterkit/src/app/services/entities/entities.service.ts\n            \n            \n                100 %\n                (8/8)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (2/2)\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        /Users/rickvandermeij/Sources/angular-starterkit/src/app/ssr/tokens.ts\n            \n            \n                100 %\n                (5/5)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        /Users/rickvandermeij/Sources/angular-starterkit/src/app/store/application/application.actions.ts\n            \n            \n                100 %\n                (2/2)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        /Users/rickvandermeij/Sources/angular-starterkit/src/app/store/entities/entities.actions.ts\n            \n            \n                100 %\n                (5/5)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        /Users/rickvandermeij/Sources/angular-starterkit/src/app/store/entities/entities.effects.ts\n            \n            \n                100 %\n                (16/16)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (5/5)\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                        /Users/rickvandermeij/Sources/angular-starterkit/src/app/store/entities/entities.selectors.ts\n            \n            \n                100 %\n                (7/7)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (1/1)\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                        /Users/rickvandermeij/Sources/angular-starterkit/src/environments/environment.ts\n            \n            \n                100 %\n                (1/1)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            adapter   (src/.../entities.reducer.ts)\n                        \n                        \n                            adapter   (src/.../notifications.reducer.ts)\n                        \n                        \n                            addNotification   (src/.../notifications.actions.ts)\n                        \n                        \n                            back   (src/.../router.actions.ts)\n                        \n                        \n                            ClearError   (src/.../entities.actions.ts)\n                        \n                        \n                            clearNotifications   (src/.../notifications.actions.ts)\n                        \n                        \n                            createApplicationReducer   (src/.../application.reducer.ts)\n                        \n                        \n                            entitiesReducer   (src/.../entities.reducer.ts)\n                        \n                        \n                            environment   (src/.../environment.mock.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            fallbackLanguage   (src/.../globals.ts)\n                        \n                        \n                            forward   (src/.../router.actions.ts)\n                        \n                        \n                            getRouterInfo   (src/.../router.selectors.ts)\n                        \n                        \n                            getRouterLanguage   (src/.../router.selectors.ts)\n                        \n                        \n                            go   (src/.../router.actions.ts)\n                        \n                        \n                            initialState   (src/.../mock-store.ts)\n                        \n                        \n                            initialState   (src/.../application.reducer.ts)\n                        \n                        \n                            initialState   (src/.../entities.reducer.ts)\n                        \n                        \n                            initialState   (src/.../notifications.reducer.ts)\n                        \n                        \n                            languages   (src/.../globals.ts)\n                        \n                        \n                            languagesLabels   (src/.../globals.ts)\n                        \n                        \n                            languagesRegex   (src/.../globals.ts)\n                        \n                        \n                            Load   (src/.../entities.actions.ts)\n                        \n                        \n                            LoadFail   (src/.../entities.actions.ts)\n                        \n                        \n                            loadNotifications   (src/.../notifications.actions.ts)\n                        \n                        \n                            loadNotificationsFail   (src/.../notifications.actions.ts)\n                        \n                        \n                            loadNotificationsSuccess   (src/.../notifications.actions.ts)\n                        \n                        \n                            LoadSuccess   (src/.../entities.actions.ts)\n                        \n                        \n                            LOCAL_STORAGE_KEY   (src/.../app.tokens.ts)\n                        \n                        \n                            merge   (src/.../storage.metareducer.ts)\n                        \n                        \n                            notificationReducer   (src/.../notifications.reducer.ts)\n                        \n                        \n                            pick   (src/.../storage.metareducer.ts)\n                        \n                        \n                            reducerToken   (src/.../entities.reducer.ts)\n                        \n                        \n                            ROUTES   (src/.../static.paths.ts)\n                        \n                        \n                            routesWithLanguages   (src/.../static.paths.ts)\n                        \n                        \n                            selectAllEntities   (src/.../entities.selectors.ts)\n                        \n                        \n                            selectAllNotifications   (src/.../notifications.selectors.ts)\n                        \n                        \n                            selectFeature   (src/.../application.selectors.ts)\n                        \n                        \n                            selectFeature   (src/.../entities.selectors.ts)\n                        \n                        \n                            selectFeature   (src/.../notifications.selectors.ts)\n                        \n                        \n                            selectIsMakingRequest   (src/.../application.selectors.ts)\n                        \n                        \n                            selectLoading   (src/.../entities.selectors.ts)\n                        \n                        \n                            selectReducerState   (src/.../router.selectors.ts)\n                        \n                        \n                            selectStandardEntities   (src/.../entities.selectors.ts)\n                        \n                        \n                            selectStandardIds   (src/.../entities.selectors.ts)\n                        \n                        \n                            sendNotification   (src/.../notifications.actions.ts)\n                        \n                        \n                            SetRequestStatus   (src/.../application.actions.ts)\n                        \n                        \n                            STATE_CB   (src/.../tokens.ts)\n                        \n                        \n                            STORAGE_KEYS   (src/.../app.tokens.ts)\n                        \n                        \n                            window   (src/.../tokens.ts)\n                        \n                        \n                               (src/.../entities.reducer.ts)\n                        \n                        \n                               (src/.../notifications.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/entities/entities.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        adapter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityAdapter\n\n                    \n                \n                \n                    \n                        Default value : createEntityAdapter({\n\t\tselectId: selectGuid,\n\t})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        entitiesReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n\tinitialState,\n\ton(actions.Load, (state) => ({\n\t\t...state,\n\t\terror: null,\n\t\tisLoading: true,\n\t})),\n\ton(actions.LoadSuccess, (state, action) => {\n\t\treturn adapter.setAll(action.entities, {\n\t\t\t...state,\n\t\t\tselectedEntity: null,\n\t\t});\n\t}),\n\ton(actions.LoadFail, (state, { errorMessage }) => ({\n\t\t...state,\n\t\terrorMessage,\n\t\tisLoading: false,\n\t})),\n\ton(actions.ClearError, (state) => ({\n\t\t...state,\n\t\terrorMessage: null,\n\t})),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntitiesState\n\n                    \n                \n                \n                    \n                        Default value : adapter.getInitialState({\n\terrorMessage: null,\n\tisLoading: false,\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reducerToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken\n>('dealsState')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : adapter.getSelectors()\n                    \n                \n\n\n        \n    \n\n    src/app/store/notifications/notifications.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        adapter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityAdapter\n\n                    \n                \n                \n                    \n                        Default value : createEntityAdapter()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NotificationsState\n\n                    \n                \n                \n                    \n                        Default value : adapter.getInitialState()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notificationReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n\tinitialState,\n\ton(NotificationActions.loadNotificationsSuccess, (state, action) =>\n\t\tadapter.addMany(action.notifications, { ...state, isLoading: false }),\n\t),\n\ton(NotificationActions.addNotification, (state, action) =>\n\t\tadapter.addOne(action.notification, { ...state, isLoading: false }),\n\t),\n\ton(NotificationActions.clearNotifications, (state) =>\n\t\tadapter.removeAll(state),\n\t),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : adapter.getSelectors()\n                    \n                \n\n\n        \n    \n\n    src/app/store/notifications/notifications.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        addNotification\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n\t'[Notifications] Add Notification',\n\tprops(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearNotifications\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n\t'[Notifications] Clear Notifications',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadNotifications\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n\t'[Notifications] Load Notifications',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadNotificationsFail\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n\t'[Notifications] Load Notifications Fail',\n\tprops(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadNotificationsSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n\t'[Notifications] Load Notifications Success',\n\tprops(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendNotification\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n\t'[Notifications] Send Notification',\n\tprops(),\n)\n                    \n                \n\n\n        \n    \n\n    src/app/store/router/router.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        back\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Router] Back')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forward\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Router] Forward')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        go\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n\t'[Router] Go',\n\tprops(),\n)\n                    \n                \n\n\n        \n    \n\n    src/app/store/entities/entities.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ClearError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[ENTITIES] CLEAR ERROR')\n                    \n                \n\n            \n                \n                    ClearError Action will be used for NGRX Action emitter, when the error needs to be cleared\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Load\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[ENTITIES] LOAD')\n                    \n                \n\n            \n                \n                    Load Action will be used for NGRX Action emitter, when the Entities info Load Action is being called\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoadFail\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n\t'[ENTITIES] LOAD FAIL',\n\tprops(),\n)\n                    \n                \n\n            \n                \n                    LoadFail Action will be used for NGRX Action emitter, when the Entities info is failed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoadSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n\t'[ENTITIES] LOAD SUCCESS',\n\tprops(),\n)\n                    \n                \n\n            \n                \n                    LoadSuccess Action will be used for NGRX Action emitter, when the Entities info is succesfull\n\n                \n            \n\n        \n    \n\n    src/app/store/application/application.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createApplicationReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n\tinitialState,\n\ton(applicationActions.SetRequestStatus, (state, action) => ({\n\t\t...state,\n\t\tisPendingRequest: action.isPendingRequest,\n\t})),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApplicationState\n\n                    \n                \n                \n                    \n                        Default value : {\n\tisPendingRequest: false,\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t/**\n\t * VAPID_PUBLIC is the vapid public key\n\t */\n\tVAPID_PUBLIC:\n\t\t'BEgAWMdgbjHjFJp6i7hCKrbkXzSnRixZKRHLiruZb7hhopEdgvWeUftsjleOVUZEvjhCWHyoeoGsaO3-uH61qYk',\n\t/**\n\t * apiCookies will be used to test mocking request\n\t */\n\tapiCookies: { withCredentials: true },\n\t/**\n\t * apiUrl will return the API url for selected enviroment\n\t */\n\tapiUrl: `https://localhost:4000/api/`,\n\t/**\n\t * assetsRoot provides the start of the URI for assets\n\t */\n\tassetsRoot: 'https://localhost:4000/assets/',\n\t/**\n\t * notificationServer will return the notificationServer url for selected enviroment\n\t */\n\tnotificationServer: `https://localhost:4000/v1/`,\n\t/**\n\t * Boolean to declare if the environment is in production mode\n\t */\n\tproduction: false,\n\n\t/**\n\t * Integer of the version which is defined in the Package.json\n\t */\n\tversion: require('../../package.json').version,\n}\n                    \n                \n\n            \n                \n                    The environment Object\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t/**\n\t * VAPID_PUBLIC is the vapid public key\n\t */\n\tVAPID_PUBLIC:\n\t\t'BEgAWMdgbjHjFJp6i7hCKrbkXzSnRixZKRHLiruZb7hhopEdgvWeUftsjleOVUZEvjhCWHyoeoGsaO3-uH61qYk',\n\t/**\n\t * apiCookies will be used to test mocking request\n\t */\n\tapiCookies: {},\n\t/**\n\t * apiUrl will return the API url for selected enviroment\n\t */\n\tapiUrl: `https://localhost:4000/api/`,\n\t/**\n\t * assetsRoot provides the start of the URI for assets\n\t */\n\tassetsRoot: 'https://localhost:4000/assets/',\n\t/**\n\t * notificationServer will return the notificationServer url for selected enviroment\n\t */\n\tnotificationServer: `https://localhost:4000/v1/`,\n\t/**\n\t * Boolean to declare if the environment is in production mode\n\t */\n\tproduction: true,\n\n\t/**\n\t * Integer of the version which is defined in the Package.json\n\t */\n\tversion: require('../../package.json').version,\n}\n                    \n                \n\n            \n                \n                    The environment Object\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t/**\n\t * VAPID_PUBLIC is the vapid public key\n\t */\n\tVAPID_PUBLIC:\n\t\t'BEgAWMdgbjHjFJp6i7hCKrbkXzSnRixZKRHLiruZb7hhopEdgvWeUftsjleOVUZEvjhCWHyoeoGsaO3-uH61qYk',\n\t/**\n\t * apiCookies will be used to test mocking request\n\t */\n\tapiCookies: {},\n\t/**\n\t * apiUrl will return the API url for selected enviroment\n\t */\n\tapiUrl: `https://localhost:4000/api/`,\n\t/**\n\t * assetsRoot provides the start of the URI for assets\n\t */\n\tassetsRoot: 'https://localhost:4000/assets/',\n\t/**\n\t * notificationServer will return the notificationServer url for selected enviroment\n\t */\n\tnotificationServer: `https://localhost:4000/v1/`,\n\t/**\n\t * Boolean to declare if the environment is in production mode\n\t */\n\tproduction: false,\n\n\t/**\n\t * Integer of the version which is defined in the Package.json\n\t */\n\tversion: require('../../package.json').version,\n}\n                    \n                \n\n            \n                \n                    The environment Object\n\n                \n            \n\n        \n    \n\n    src/app/globals.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fallbackLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'en'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['nl', 'en']\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        languagesLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\ten: 'English',\n\tnl: 'Nederlands',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        languagesRegex\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /\\/nl\\/|\\/en\\//\n                    \n                \n\n\n        \n    \n\n    src/app/store/router/router.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRouterInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n\tselectReducerState,\n\t(state) => state && state.state,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRouterLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n\tgetRouterInfo,\n\t(state) => state && state.params && state.params.language,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectReducerState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector>('routerState')\n                    \n                \n\n\n        \n    \n\n    src/app/testing/mock-store.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tapplicationState: {\n\t\tisPendingRequest: false,\n\t},\n\tentitiesState: {\n\t\tentities: {\n\t\t\t'93dd0fd6-fd8c-4c70-a213-cb76d1ef6eda': {\n\t\t\t\tcountry: 'NL',\n\t\t\t\tcurrency: 'EUR',\n\t\t\t\tdateFormat: 'DD-MM-YYYY',\n\t\t\t\temail: 'no-reply@domein.nl',\n\t\t\t\tguid: '93dd0fd6-fd8c-4c70-a213-cb76d1ef6eda',\n\t\t\t\tmarkdown:\n\t\t\t\t\t'# Male est natusque femina et iuvenis Procnes\\r\\n## Eram huc inpetus\\r\\nLorem markdownum *et erectus custodes* imago, dantque, locus vocandus candore. Inpius nymphas tu nondum divitior novissima visus pariter peioris; ferrum, de. Haec in eripe cupidine erat; claris Aetne, partu, in haut Idomeneus herbis meorum cum posse. Coniunx lacertis! Ne Oetaeus, et lassant alios circumdata quod convicia Ossa: aesculeae admonita que.\\r\\n## Dum ponendi sistitur saepe triplicesque\\r\\n*De est* servet, animalia spoliis servavique dulce. Formidine posset. **Lato prato** enim animam exit coniugis duabus, in lucum [videoque ecce et](http://thymo-simul.net/neritius-tu) numine. Mihi quoque patruique sollicitis: postquam ab qua parientem, molior in [Delphos verba et](http://www.ingeniis-tangam.io/eloquitur.php) imperat.\\r\\n> Ait flebile. Numine tela lumina, illa, omnes verba! **Aethere posito**, quae\\r\\n> cucurri ita. Manibus tinguamus lustrantem si erat inposita mater, mutilatae\\r\\n> fugiunt egredior, formae piscator nisi adludentibus media vix. Odorant iuvat.',\n\t\t\t},\n\t\t},\n\t\terrorMessage: null,\n\t\tids: ['93dd0fd6-fd8c-4c70-a213-cb76d1ef6eda'],\n\t\tisLoaded: true,\n\t\tisLoading: false,\n\t},\n\tnotifications: {\n\t\tentities: {\n\t\t\t'2': {\n\t\t\t\tbody: 'message test',\n\t\t\t\tid: 2,\n\t\t\t\ttimeStamp: new Date(),\n\t\t\t\ttitle: 'title test',\n\t\t\t\ttype: 'success',\n\t\t\t},\n\t\t},\n\t\tids: [2],\n\t},\n\trouterState: {\n\t\tstate: {\n\t\t\tparams: {\n\t\t\t\tlanguage: 'nl',\n\t\t\t},\n\t\t\tqueryParams: {\n\t\t\t\tq: 'nothing',\n\t\t\t},\n\t\t\turl: 'nl',\n\t\t},\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    src/app/store/meta/app.tokens.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOCAL_STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('appStorage')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STORAGE_KEYS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('StoreKeys')\n                    \n                \n\n\n        \n    \n\n    src/app/store/meta/storage.metareducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        merge\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('lodash.merge')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pick\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('lodash.pick')\n                    \n                \n\n\n        \n    \n\n    src/app/routes/static.paths.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROUTES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : routesWithLanguages as Array\n                    \n                \n\n            \n                \n                    Should declare all Route URLs in an Array\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routesWithLanguages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n\n\n        \n    \n\n    src/app/store/entities/entities.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectAllEntities\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(selectFeature, selectAll)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFeature\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector('entitiesState')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n\tselectFeature,\n\t(state) => state.isLoading,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectStandardEntities\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n\tselectFeature,\n\tselectEntities,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectStandardIds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(selectFeature, selectIds)\n                    \n                \n\n\n        \n    \n\n    src/app/store/notifications/notifications.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectAllNotifications\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n\tselectFeature,\n\tfromReducer.selectAll,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFeature\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector('notifications')\n                    \n                \n\n\n        \n    \n\n    src/app/store/application/application.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        selectFeature\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector('applicationState')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectIsMakingRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n\tselectFeature,\n\t(state) => state.isPendingRequest,\n)\n                    \n                \n\n\n        \n    \n\n    src/app/store/application/application.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SetRequestStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n\t'[Application] SET REQUEST STATUS',\n\tprops(),\n)\n                    \n                \n\n            \n                \n                    SetRequestStatus Action will be used for NGRX Action emitter\n\n                \n            \n\n        \n    \n\n    src/app/ssr/tokens.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        STATE_CB\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('to provide the state cb')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/bundle-analytics.html":{"url":"additional-documentation/bundle-analytics.html","title":"additional-page - Bundle Analytics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/e2e-testing-report-(cucumber).html":{"url":"additional-documentation/e2e-testing-report-(cucumber).html","title":"additional-page - E2E Testing Report (Cucumber)","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/lighthouse-mobile-report.html":{"url":"additional-documentation/lighthouse-mobile-report.html","title":"additional-page - Lighthouse Mobile Report","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/lighthouse-desktop-report.html":{"url":"additional-documentation/lighthouse-desktop-report.html","title":"additional-page - Lighthouse Desktop Report","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
