var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.433,1,1.73]],["body/components/AppComponent.html",[0,2.088,1,2.079,2,2.454,3,0.198,4,0.215,5,1.369,6,1.155,7,1.369,8,0.132,9,1.713,10,0.462,11,2.893,12,2.789,13,3.477,14,1.299,15,2.684,16,1.369,17,3.532,18,1.475,19,2.396,20,3.178,21,0.292,22,1.284,23,3.674,24,1.878,25,5.185,26,2.421,27,5.185,28,4.877,29,6.327,30,6.568,31,3.23,32,3.834,33,2.165,34,1.085,35,3.91,36,2.165,37,2.684,38,3.05,39,2.684,40,1.529,41,2.011,42,1.665,43,3.05,44,1.399,45,1.639,46,5.795,47,3.328,48,3.947,49,1.616,50,3.178,51,1.578,52,0.613,53,2.165,54,0.86,55,0.023,56,1.32,57,0.923,58,1.079,59,3.178,60,2.707,61,2.396,62,1.578,63,1.475,64,1.693,65,1.475,66,2.707,67,3.743,68,3.281,69,1.956,70,2.011,71,3.178,72,3.178,73,3.178,74,3.178,75,1.83,76,2.707,77,3.178,78,3.178,79,3.178,80,1.693,81,2.396,82,2.165,83,3.178,84,1.65,85,3.038,86,1.369,87,3.678,88,1.516,89,1.155,90,1.516,91,0.875,92,0.998,93,1.155,94,1.516,95,1.369,96,2.165,97,1.369,98,2.684,99,1.516,100,2.011,101,2.263,102,1.475,103,3.178,104,2.011,105,2.122,106,2.011,107,3.178,108,2.396,109,2.011,110,2.011,111,2.011,112,1.825,113,1.516,114,1.369,115,0.855,116,1.516,117,1.369,118,0.38,119,1.516,120,1.252,121,1.713,122,0.875,123,0.875,124,1.071,125,0.728,126,1.369,127,0.933,128,0.998,129,1.369,130,1.369,131,2.011,132,1.713,133,1.369,134,1.713,135,2.396,136,2.011,137,1.713,138,2.011,139,2.011,140,1.516,141,1.713,142,1.713,143,1.369,144,0.998,145,1.713,146,0.215,147,1.308,148,2.011,149,2.1,150,1.516,151,1.516,152,2.011,153,1.713,154,2.011,155,1.427,156,1.427,157,1.024,158,2.011,159,2.011,160,2.011,161,1.369,162,1.516,163,2.011,164,1.516,165,2.011,166,2.011,167,0.728,168,3.178,169,2.011,170,1.713,171,1.071,172,2.011,173,3.178,174,2.011,175,1.252,176,2.011,177,2.011,178,2.011,179,2.011,180,2.011,181,2.011,182,2.011,183,1.713,184,2.011,185,2.011,186,1.713,187,2.011,188,2.011,189,2.011,190,2.011,191,2.011,192,0.933,193,1.979,194,2.165,195,1.369,196,3.05,197,1.369,198,1.369,199,1.369,200,1.369,201,0.875,202,0.933,203,1.369,204,1.369,205,0.006,206,0.01,207,0.006]],["title/interceptors/AppHttpInterceptor.html",[208,2.141,209,1.851]],["body/interceptors/AppHttpInterceptor.html",[3,0.388,4,0.422,8,0.258,10,0.573,14,1.612,21,0.573,24,1.428,34,1.771,40,1.346,45,1.878,49,1.325,52,0.614,54,1.404,55,0.023,56,1.404,57,0.807,58,1.25,84,1.198,105,2.522,115,0.888,118,0.746,122,1.716,125,1.428,146,0.422,147,1.25,157,2.061,170,3.359,205,0.012,206,0.016,207,0.012,209,3.058,210,2.686,211,3.359,212,4.644,213,4.418,214,3.533,215,3.911,216,4.418,217,4.358,218,3.533,219,4.371,220,3.943,221,3.943,222,3.943,223,5.049,224,4.825,225,3.943,226,3.533,227,5.187,228,2.979,229,2.979,230,3.231,231,3.359,232,3.231,233,1.958,234,1.25,235,5.187,236,2.456,237,3.911,238,3.943,239,2.265,240,3.943,241,3.231,242,1.612,243,0.793,244,3.943,245,3.943,246,1.516]],["title/interceptors/AppHttpInterceptor-1.html",[208,1.814,209,1.568,247,2.382]],["body/interceptors/AppHttpInterceptor-1.html",[3,0.39,4,0.425,8,0.26,14,1.621,18,1.841,21,0.576,24,1.436,34,1.778,40,1.354,44,1.137,45,1.409,49,1.33,52,0.617,54,1.409,55,0.023,56,1.409,57,0.81,58,1.254,63,1.841,84,1.205,105,2.529,115,0.835,118,0.75,125,1.436,146,0.425,147,1.254,155,1.886,156,1.886,157,2.119,167,1.886,205,0.012,206,0.016,207,0.012,209,2.585,210,2.701,212,3.926,217,2.701,219,4.383,223,5.056,224,4.834,226,4.204,229,2.99,230,3.621,231,3.378,232,3.243,233,1.969,234,1.254,239,2.278,243,1.17,248,3.378,249,3.378,250,5.795,251,3.966,252,3.378,253,3.966,254,2.585,255,4.435,256,3.378,257,2.113,258,2.99,259,3.966,260,5.207,261,5.813,262,3.966,263,3.966,264,2.113,265,2.701,266,1.277,267,2.278,268,3.966,269,3.966]],["title/modules/AppModule.html",[270,1.433,271,2.322]],["body/modules/AppModule.html",[1,2.976,3,0.234,4,0.255,6,1.367,8,0.237,10,0.346,11,1.268,18,1.105,26,1.182,42,1.801,43,1.621,44,1.039,45,0.981,47,3.191,48,1.621,52,0.682,55,0.023,63,1.105,64,1.93,65,1.105,68,1.268,115,0.945,117,2.467,118,0.45,119,1.795,120,1.483,122,1.576,123,1.576,124,1.268,126,1.621,127,1.105,128,1.182,129,1.621,132,2.027,133,1.621,134,2.027,141,2.027,146,0.47,147,0.573,155,1.775,156,1.775,157,1.579,167,1.312,192,1.105,205,0.007,206,0.011,207,0.007,208,1.367,209,2.868,233,1.182,242,1.792,243,0.986,257,1.268,266,0.767,270,0.915,271,4.12,272,1.576,273,1.105,274,2.519,275,2.732,276,2.177,277,1.105,278,2.027,279,2.027,280,2.027,281,2.027,282,2.027,283,3.191,284,3.46,285,2.256,286,1.483,287,1.367,288,1.795,289,1.799,290,2.434,291,1.799,292,1.799,293,4.386,294,3.735,295,3.592,296,3.623,297,3.623,298,2.38,299,3.623,300,2.38,301,2.38,302,3.623,303,1.621,304,2.732,305,1.795,306,3.735,307,2.027,308,2.732,309,2.38,310,2.987,311,2.027,312,1.367,313,3.086,314,2.027,315,3.623,316,2.38,317,2.027,318,2.987,319,2.38,320,2.38,321,2.38,322,2.38,323,3.307,324,3.307,325,2.38,326,1.795,327,2.38,328,2.38,329,2.38,330,2.467,331,2.38,332,2.027,333,2.027,334,1.799,335,1.621,336,2.38,337,2.38,338,3.623,339,2.38,340,2.467,341,1.483,342,1.268,343,1.268,344,1.036,345,1.483,346,1.367,347,1.483,348,1.795,349,1.795,350,2.337,351,2.027,352,2.38,353,2.38,354,2.027,355,2.027,356,1.483,357,2.027,358,2.732,359,2.027,360,2.732,361,3.086,362,2.027,363,2.38,364,2.38,365,2.38,366,2.38,367,2.38,368,2.38,369,2.38,370,1.799,371,2.38,372,2.38,373,2.38,374,1.93,375,1.105,376,2.38,377,2.38,378,2.38,379,1.483,380,2.38,381,2.027,382,4.386,383,2.868,384,3.735,385,1.795,386,3.623,387,1.182,388,2.38,389,3.735,390,2.467,391,2.38,392,1.367,393,2.38,394,2.38,395,3.623,396,2.38,397,2.38,398,4.386,399,3.623,400,3.307,401,2.38,402,2.38,403,2.38,404,2.38,405,1.621,406,3.623,407,2.38,408,2.38,409,2.027,410,2.38,411,2.38]],["title/modules/AppRoutingModule.html",[270,1.433,283,2.141]],["body/modules/AppRoutingModule.html",[0,1.372,3,0.351,4,0.382,8,0.234,10,0.518,14,1.983,18,1.657,45,0.966,52,0.963,55,0.023,84,1.085,92,1.772,115,0.863,118,0.675,144,2.737,146,0.52,147,0.86,155,1.758,156,1.758,157,1.563,167,1.997,201,2.112,205,0.011,206,0.015,207,0.011,234,1.169,243,0.718,246,1.372,272,1.553,276,1.772,277,2.253,283,3.167,289,2.409,290,3.072,291,2.409,292,1.772,303,2.431,334,2.409,341,2.223,344,1.553,374,2.938,379,2.223,383,1.772,390,2.431,412,2.692,413,2.692,414,3.305,415,4.158,416,1.459,417,5.04,418,3.04,419,3.023,420,3.04,421,3.04,422,3.434,423,3.04,424,4.134,425,3.756,426,3.04,427,3.04,428,3.04,429,3.04,430,4.134,431,2.586,432,2.586,433,2.787,434,3.04,435,4.134,436,3.854,437,4.134,438,2.692,439,3.04,440,2.692,441,2.692,442,3.04,443,3.04,444,3.04,445,3.04,446,3.04,447,2.431,448,3.04,449,3.04,450,3.04,451,3.04,452,3.04,453,3.04,454,3.04,455,3.04]],["title/modules/AppServerModule.html",[270,1.433,456,2.539]],["body/modules/AppServerModule.html",[1,3.098,3,0.383,4,0.417,8,0.255,10,0.565,42,1.329,52,0.896,55,0.023,64,2.073,115,0.916,118,0.736,123,1.693,124,2.073,146,0.551,155,1.409,156,1.409,157,1.253,192,1.806,205,0.012,206,0.016,207,0.012,210,2.65,233,1.932,242,1.59,243,1.035,257,2.073,266,1.253,270,1.496,271,4.076,272,1.693,273,1.806,274,2.235,275,3.587,276,2.859,277,1.806,285,3.203,286,2.424,287,2.235,289,2.553,290,3.042,291,2.553,292,2.553,294,4.38,304,3.877,305,2.934,308,3.203,333,3.314,341,2.424,342,2.073,343,2.073,344,1.693,350,2.74,381,3.314,383,2.553,384,3.314,389,4.38,390,2.65,456,4.67,457,3.314,458,3.892,459,3.892,460,3.314,461,4.076,462,2.934,463,5.142,464,5.142,465,3.892,466,3.892,467,3.587,468,3.892,469,4.343,470,3.892,471,3.892,472,3.892]],["title/interfaces/ApplicationState.html",[370,1.851,473,1.069]],["body/interfaces/ApplicationState.html",[3,0.42,4,0.458,8,0.28,10,0.621,21,0.621,22,1.568,42,1.46,45,1.48,55,0.023,57,0.665,61,4.123,115,0.739,122,1.861,143,2.913,146,0.646,147,1.317,167,1.98,205,0.013,206,0.017,207,0.013,214,3.724,218,3.724,241,4.305,243,1.1,246,1.644,266,1.377,347,3.406,356,2.664,370,3.333,375,2.538,473,1.227,474,1.985,475,2.913,476,4.105,477,3.265,478,4.105,479,4.123,480,3.431,481,3.724,482,5.468,483,4.277,484,3.225,485,3.643,486,3.643,487,3.643,488,3.643,489,3.643,490,3.643,491,3.643,492,3.225,493,4.277]],["title/components/BaseComponent.html",[0,1.433,13,2.141]],["body/components/BaseComponent.html",[0,2.463,1,1.543,2,2.878,3,0.327,4,0.356,5,3.147,6,1.909,7,2.264,8,0.218,10,0.483,11,3.059,13,3.297,14,1.888,16,2.264,17,4.254,21,0.483,22,1.325,32,4.729,33,3.618,34,1.577,36,3.147,37,3.91,38,4.254,39,3.91,49,1.541,52,0.826,54,0.9,55,0.023,56,1.554,57,0.719,58,0.801,67,4.01,75,1.358,84,1.745,85,3.89,86,3.147,89,2.654,91,2.01,92,2.85,93,2.654,95,3.147,96,3.91,97,3.147,98,4.254,102,1.543,112,3.297,114,3.147,115,0.625,118,0.629,125,1.204,146,0.356,147,0.801,192,1.543,193,2.878,194,3.147,195,2.264,196,3.91,197,2.264,198,2.264,199,4.109,200,2.264,201,1.446,202,1.543,203,2.264,204,2.264,205,0.01,206,0.014,207,0.01,243,0.93,494,2.831,495,4.621,496,2.294,497,5.312,498,5.312,499,3.323,500,3.323,501,3.323,502,3.323,503,3.323,504,3.323,505,4.621,506,3.323,507,3.323,508,3.323,509,3.323,510,3.323,511,3.323]],["title/injectables/CustomSerializer.html",[234,0.898,425,2.539]],["body/injectables/CustomSerializer.html",[0,1.316,3,0.336,4,0.367,8,0.224,10,0.497,14,2.205,18,1.588,21,0.497,34,1.61,45,0.926,49,0.874,52,0.949,54,0.926,55,0.023,56,0.926,57,0.532,58,0.824,84,1.433,92,1.699,115,0.852,118,0.647,144,2.678,146,0.505,147,0.824,155,1.708,156,1.708,157,1.518,167,1.954,201,2.052,205,0.011,206,0.015,207,0.011,234,1.136,243,0.689,246,1.316,276,1.699,277,2.189,283,2.708,289,1.699,290,2.886,291,1.699,292,1.699,303,2.331,334,2.341,341,2.937,344,1.489,374,3.249,379,2.131,383,1.699,390,2.331,412,3.555,413,2.581,414,3.211,415,4.598,416,1.399,417,5.193,418,2.915,419,2.937,420,2.915,421,2.915,422,3.798,423,2.915,424,4.595,425,3.959,426,4.951,427,4.016,428,4.016,429,2.915,430,4.016,431,2.512,432,2.512,433,2.708,434,2.915,435,4.016,436,3.798,437,4.016,438,2.581,439,2.915,440,2.581,441,2.581,442,2.915,443,2.915,444,2.915,445,2.915,446,2.915,447,2.331,448,2.915,449,2.915,450,2.915,451,2.915,452,2.915,453,2.915,454,2.915,455,2.915,512,1.699,513,3.422]],["title/injectables/EntitiesEffects.html",[234,0.898,514,2.539]],["body/injectables/EntitiesEffects.html",[3,0.27,4,0.295,8,0.18,10,0.399,21,0.399,22,1.157,24,1.461,40,1.378,45,1.092,49,1.221,51,2.615,52,0.744,54,0.744,55,0.023,56,0.744,57,0.744,58,0.662,65,1.873,75,1.649,91,2.291,93,3.025,102,1.873,105,2.636,115,0.857,118,0.52,125,0.996,146,0.295,149,2.15,205,0.009,206,0.013,207,0.009,226,3.82,228,3.367,233,1.365,234,0.972,236,1.713,243,1.355,246,2.025,265,3.587,312,1.579,342,2.15,479,3.043,480,2.615,496,2.003,512,1.365,514,3.587,515,2.342,516,3.437,517,3.437,518,3.025,519,2.911,520,5.609,521,5.609,522,2.342,523,3.48,524,2.75,525,4.229,526,4.486,527,4.036,528,6.341,529,5.267,530,4.036,531,5.267,532,5.609,533,5.267,534,3.28,535,5.267,536,5.267,537,5.267,538,3.971,539,2.75,540,3.587,541,5.609,542,4.036,543,4.036,544,2.75,545,2.513,546,2.749,547,2.749,548,3.043,549,3.043,550,2.513,551,2.749,552,3.043,553,2.318,554,2.342,555,2.75,556,2.342,557,1.465,558,2.342,559,4.781,560,2.75,561,3.043,562,4.036]],["title/injectables/EntitiesService.html",[234,0.898,523,2.141]],["body/injectables/EntitiesService.html",[3,0.434,4,0.473,8,0.289,10,0.641,21,0.641,24,1.598,34,1.904,40,1.507,49,1.425,52,0.687,54,1.195,55,0.023,56,1.195,57,0.687,58,1.063,69,2.769,80,2.972,84,1.341,105,2.661,115,0.896,118,0.835,125,1.598,128,2.191,129,3.006,146,0.473,205,0.014,206,0.017,207,0.014,228,3.204,233,2.191,234,1.344,239,2.535,243,1.123,265,4.166,295,4.377,345,4.002,496,2.769,512,2.191,519,2.769,523,3.691,557,2.352,563,3.759,564,3.799,565,5.579,566,6.426,567,3.759,568,4.414,569,4.414,570,3.759,571,4.414,572,4.414,573,4.414,574,3.759,575,3.759]],["title/interfaces/EntitiesState.html",[387,1.851,473,1.069]],["body/interfaces/EntitiesState.html",[3,0.338,4,0.368,8,0.225,12,2.943,21,0.499,22,1.355,42,1.613,44,1.751,55,0.023,57,0.95,115,0.825,118,0.649,122,1.494,146,0.705,167,2.341,205,0.011,206,0.015,207,0.011,228,1.972,242,1.403,243,1.171,246,2.078,264,3.102,266,1.106,375,2.194,387,3.031,473,0.985,474,1.594,477,3.139,478,3.68,480,3.031,481,3.219,492,2.589,496,1.705,518,1.972,519,3.031,534,4.101,546,2.339,547,2.339,548,2.589,549,2.589,550,2.139,551,2.339,552,2.589,553,1.972,556,2.924,557,2.879,558,2.924,576,2.339,577,4.603,578,4.101,579,3.564,580,4.025,581,3.564,582,3.564,583,2.589,584,3.434,585,2.924,586,2.924,587,2.924,588,2.139,589,2.924,590,2.339,591,2.589,592,2.589,593,2.924,594,2.924,595,2.139,596,2.924,597,2.924,598,2.924,599,2.924,600,2.924,601,2.924,602,4.603,603,2.924,604,2.924,605,2.139,606,2.924,607,2.924,608,2.924,609,2.924,610,2.924,611,2.924,612,3.434,613,2.589,614,2.589,615,2.589,616,2.924,617,2.589,618,2.589,619,2.924]],["title/interfaces/EntityInterface.html",[473,1.069,557,1.986]],["body/interfaces/EntityInterface.html",[3,0.457,4,0.498,8,0.305,21,0.676,22,1.653,44,2.107,55,0.022,57,1.102,146,0.498,205,0.014,206,0.018,207,0.014,473,1.334,474,2.159,557,3.071,579,4.347,605,4.078,620,3.962,621,4.078,622,4.078,623,4.078,624,4.078,625,4.078,626,3.761,627,3.168,628,3.168]],["title/modules/ErrorModule.html",[270,1.433,284,2.322]],["body/modules/ErrorModule.html",[3,0.448,4,0.488,8,0.299,10,0.662,52,0.966,55,0.023,92,2.264,115,0.879,118,0.862,127,2.116,146,0.488,155,1.651,156,1.651,157,1.468,192,2.116,201,2.97,205,0.014,206,0.018,207,0.014,270,1.753,272,1.984,273,2.116,274,3.565,275,2.84,276,2.826,277,2.116,284,4.359,285,3.546,286,2.84,287,2.619,289,2.826,290,3.228,291,2.826,292,2.826,629,3.883,630,3.883,631,3.883,632,3.92,633,4.559,634,4.293,635,4.681,636,4.849,637,3.883]],["title/components/ErrorPageComponent.html",[0,1.433,201,1.622]],["body/components/ErrorPageComponent.html",[0,2.372,1,1.354,2,3.079,3,0.287,4,0.312,5,1.986,6,1.675,7,1.986,8,0.191,10,0.424,11,2.244,12,3.577,13,3.841,14,1.721,15,3.367,16,1.986,17,3.688,19,3.176,21,0.424,22,1.716,23,2.839,24,1.056,31,4.008,32,4.302,33,2.869,34,1.438,35,4.083,36,2.869,37,3.367,38,3.688,39,3.367,40,1.849,42,1.438,48,3.911,49,1.613,51,2.688,52,0.842,53,2.869,54,1.14,55,0.023,56,1.554,57,0.893,58,1.015,62,2.688,63,1.354,67,3.298,68,2.634,69,1.448,75,1.192,80,2.244,81,3.176,82,3.688,84,1.745,85,3.577,86,1.986,87,4.33,88,2.199,89,1.675,90,2.199,91,1.269,92,1.448,93,1.675,94,2.199,95,1.986,96,2.869,97,1.986,98,3.367,99,2.199,102,1.354,112,2.419,113,2.199,114,1.986,115,0.732,118,0.552,123,1.269,124,1.554,146,0.312,147,0.702,149,2.244,151,2.199,192,1.354,193,3.079,194,2.869,195,1.986,196,3.688,197,1.986,198,1.986,199,1.986,200,1.986,201,2.356,202,1.354,203,1.986,204,1.986,205,0.009,206,0.013,207,0.009,254,1.448,257,1.554,447,2.869,595,3.727,638,4.612,639,1.986,640,3.587,641,2.916,642,3.365,643,2.916,644,2.916,645,3.587,646,3.587,647,3.587,648,3.176,649,3.587,650,3.587,651,3.587,652,3.587,653,2.916,654,1.986,655,2.916,656,2.916,657,2.484,658,1.816,659,4.212,660,4.212]],["title/classes/GeneralHelper.html",[52,0.58,130,2.539]],["body/classes/GeneralHelper.html",[3,0.321,4,0.349,8,0.214,10,0.764,21,0.474,22,1.308,34,1.557,44,1.865,49,1.343,52,0.709,54,1.423,55,0.023,56,1.423,57,0.709,58,1.098,75,1.333,80,3.464,84,1.386,91,2.477,102,1.513,112,3.27,130,3.105,146,0.349,147,1.591,167,1.181,205,0.01,206,0.014,207,0.01,243,1.282,247,3.438,264,1.737,266,1.468,343,3.464,392,3.92,654,2.221,661,2.459,662,2.777,663,3.261,664,3.261,665,5.627,666,5.992,667,5.694,668,6.825,669,3.261,670,4.56,671,4.56,672,5.258,673,4.56,674,6.999,675,3.261,676,4.56,677,3.261,678,5.694,679,3.261,680,3.261,681,5.258,682,3.261,683,3.261,684,3.261,685,2.777,686,3.261,687,3.438,688,3.261,689,3.261,690,3.261,691,2.777,692,4.56,693,4.56,694,4.56,695,4.56,696,2.777,697,3.261,698,3.261]],["title/injectables/GoogleAnalyticsEffects.html",[234,0.898,335,2.539]],["body/injectables/GoogleAnalyticsEffects.html",[3,0.346,4,0.376,8,0.23,10,0.51,21,0.51,22,1.377,24,1.739,40,2.007,42,1.64,43,3.726,44,1.569,49,1.227,51,2.384,52,0.851,53,3.271,54,0.951,55,0.023,56,0.951,57,0.915,58,0.847,60,2.994,61,2.651,62,2.716,63,1.632,64,1.873,67,2.019,68,1.873,75,1.437,102,1.632,105,2.38,115,0.859,116,4.125,117,2.394,118,0.665,125,1.273,126,2.394,127,1.632,146,0.376,147,1.157,149,3.132,150,2.651,164,3.621,205,0.011,206,0.015,207,0.011,234,1.416,236,2.189,242,1.963,246,1.847,254,2.384,312,2.019,335,3.271,416,1.437,512,1.745,517,4.09,518,2.758,525,4.125,538,3.621,540,3.271,699,4.659,700,2.994,701,5.879,702,6.155,703,2.994,704,3.654,705,3.515,706,4.803,707,4.803,708,4.433,709,5.007,710,6.504,711,4.09,712,4.004,713,4.803,714,4.803,715,4.803,716,4.09,717,3.515,718,4.803,719,4.803,720,4.09,721,3.515,722,2.651]],["title/modules/HomeModule.html",[270,1.433,723,2.539]],["body/modules/HomeModule.html",[3,0.391,4,0.426,8,0.26,10,0.577,52,0.905,55,0.023,92,1.973,115,0.953,118,0.752,122,1.729,123,1.729,127,1.844,146,0.426,155,1.439,156,1.439,157,1.28,192,1.844,202,3.056,205,0.012,206,0.016,207,0.012,270,1.528,272,1.729,273,1.844,274,3.342,275,2.475,276,2.889,277,1.844,285,3.247,286,2.475,287,2.282,289,2.588,290,3.067,291,2.588,292,2.588,311,3.384,312,2.282,314,3.384,334,1.973,340,3.551,375,1.844,514,2.706,523,3.781,626,2.282,632,3.781,634,3.931,635,4.388,636,4.44,637,3.384,723,4.799,724,3.384,725,3.384,726,3.384,727,3.384,728,4.1,729,3.974,730,3.974,731,3.974,732,3.974,733,3.974,734,3.974,735,3.974,736,3.974,737,3.974,738,3.974,739,3.974]],["title/components/HomePageComponent.html",[0,1.433,202,1.73]],["body/components/HomePageComponent.html",[0,2.252,1,1.151,2,2.801,3,0.244,4,0.266,5,1.689,6,1.424,7,1.689,8,0.163,10,0.653,11,1.991,12,3.345,13,3.716,14,1.527,15,3.063,16,1.689,17,3.409,19,2.818,21,0.36,22,1.619,24,1.629,31,3.118,32,4.106,33,2.545,34,1.276,35,3.775,36,2.545,37,3.063,38,3.409,39,3.063,40,1.709,42,1.276,45,1.586,49,1.576,51,2.485,52,0.779,53,2.545,54,1.012,55,0.023,56,1.454,57,0.878,58,0.9,62,2.232,63,1.151,65,1.735,67,3.084,68,2.396,69,1.231,75,1.014,80,1.991,81,2.818,82,3.409,84,1.632,85,3.345,86,1.689,87,4.049,88,1.87,89,1.424,90,1.87,91,1.079,92,1.231,93,1.424,94,1.87,95,1.689,96,2.545,97,1.689,98,3.063,99,1.87,102,2.087,105,2.337,112,2.146,113,1.87,114,1.689,115,0.834,118,0.469,121,2.112,122,1.079,125,0.898,146,0.266,147,0.597,149,2.667,151,1.87,153,2.112,186,2.112,192,1.151,193,2.801,194,2.545,195,1.689,196,3.409,197,1.689,198,1.689,199,1.689,200,1.689,201,1.079,202,2.323,203,1.689,204,1.689,205,0.008,206,0.012,207,0.008,254,1.231,257,1.321,310,1.689,342,1.321,519,3.063,557,2.861,587,3.183,588,2.328,621,2.328,622,2.328,623,2.328,624,2.328,625,2.328,639,1.689,640,3.183,642,3.287,645,3.183,646,3.183,647,3.183,648,2.818,649,3.183,650,3.183,651,3.183,652,3.183,654,1.689,658,1.545,740,4.574,741,5.37,742,2.48,743,5.006,744,3.737,745,3.737,746,2.48,747,2.48,748,3.737,749,2.48,750,2.48,751,2.48,752,2.48,753,3.737,754,2.48,755,2.48,756,2.48,757,2.48,758,2.48,759,5.006,760,3.737,761,2.818,762,5.006,763,3.737,764,3.737,765,3.737,766,3.737]],["title/modules/HomeRoutingModule.html",[270,1.433,728,2.322]],["body/modules/HomeRoutingModule.html",[0,1.877,3,0.48,4,0.523,8,0.32,10,0.709,52,0.996,55,0.023,115,0.865,118,0.923,146,0.523,155,1.768,156,1.768,157,1.572,167,1.768,202,2.756,205,0.015,206,0.018,207,0.015,272,2.124,277,2.266,289,2.948,290,3.306,291,2.948,292,2.424,334,3.177,414,4.044,416,1.995,436,3.04,728,3.698,767,4.882,768,4.882,769,4.882,770,4.882,771,4.882]],["title/guards/LanguageGuard.html",[419,2.322,772,2.539]],["body/guards/LanguageGuard.html",[3,0.405,4,0.441,8,0.27,10,0.775,14,1.682,18,1.91,21,0.598,24,1.49,34,1.821,40,1.405,49,1.362,52,0.64,54,1.444,55,0.023,56,1.444,57,0.83,58,1.285,84,1.251,115,0.8,118,0.778,144,2.648,146,0.441,147,1.285,157,1.718,205,0.013,206,0.017,207,0.013,234,1.285,239,2.364,242,2.419,243,1.361,258,3.103,343,2.842,344,2.724,374,2.193,415,3.103,416,1.682,419,3.322,441,4.721,447,3.633,478,4.264,704,3.541,772,3.633,773,4.116,774,5.041,775,3.505,776,4.543,777,5.334,778,4.116,779,4.116,780,5.334,781,6.646,782,4.116,783,5.334,784,6.487,785,3.103,786,3.103,787,4.116,788,4.116,789,4.116]],["title/injectables/LocalStorageService.html",[234,0.898,318,2.539]],["body/injectables/LocalStorageService.html",[3,0.362,4,0.395,8,0.241,10,0.814,18,1.71,21,0.535,22,1.422,23,3.218,34,1.693,40,1.258,43,4.082,44,1.966,45,1.885,49,1.531,52,0.573,54,1.517,55,0.023,56,1.517,57,0.933,58,1.35,69,2.461,84,1.507,85,3.088,115,0.67,116,2.778,117,2.509,118,0.697,126,2.509,127,1.71,146,0.395,147,1.35,150,2.778,155,1.334,156,1.334,157,1.186,164,3.738,205,0.011,206,0.015,207,0.011,229,2.847,234,1.194,243,1.128,258,2.778,318,4.082,343,2.641,350,3.194,360,4.858,477,2.782,512,1.829,564,3.377,703,3.138,790,5.328,791,3.138,792,3.738,793,5.994,794,5.994,795,3.684,796,4.958,797,3.684,798,4.958,799,5.105,800,4.388,801,4.958,802,3.684,803,4.958,804,4.958,805,4.223,806,3.684,807,3.684,808,3.684,809,3.684,810,3.684,811,3.684]],["title/interfaces/MockActiveStateSnapshot.html",[473,1.069,812,2.539]],["body/interfaces/MockActiveStateSnapshot.html",[3,0.276,4,0.301,8,0.184,18,1.304,21,0.408,22,1.176,26,1.395,42,0.959,44,0.806,45,0.761,55,0.023,57,0.828,58,1.282,65,1.304,91,1.784,115,0.38,144,2.403,146,0.57,147,0.677,167,1.018,175,1.75,205,0.009,206,0.013,207,0.009,241,1.75,242,1.148,243,0.565,246,1.576,264,2.835,266,0.905,267,1.614,344,1.222,346,1.614,370,1.395,374,1.497,375,1.304,387,1.395,392,1.614,405,1.914,416,1.148,431,2.579,432,3.014,433,3.935,473,1.176,474,1.304,477,3.047,519,2.035,534,1.75,578,1.75,605,1.75,621,1.75,622,1.75,623,1.75,624,1.75,625,1.75,626,1.614,627,1.914,628,1.914,642,2.184,704,3.331,812,4.023,813,1.614,814,1.75,815,4.532,816,4.714,817,1.914,818,2.119,819,1.75,820,1.914,821,3.091,822,2.119,823,2.393,824,2.393,825,1.914,826,3.65,827,3.65,828,3.65,829,3.65,830,3.65,831,3.65,832,2.119,833,2.119,834,2.119,835,2.119,836,3.091,837,2.119,838,2.119,839,3.091,840,2.119,841,2.119,842,3.65,843,2.119,844,2.119,845,2.119,846,2.119,847,2.119,848,2.119,849,2.119,850,2.119,851,2.119,852,2.119,853,2.119,854,2.119,855,2.119,856,2.119,857,2.119,858,3.091,859,2.119,860,2.119,861,2.119,862,2.119,863,2.119,864,2.119,865,2.119,866,2.119,867,2.119,868,2.119,869,2.119,870,3.091,871,2.119,872,2.119,873,2.119,874,2.119,875,2.119,876,2.119,877,2.119,878,2.119,879,2.119,880,2.119,881,2.119,882,2.119,883,2.119,884,2.119,885,2.119,886,2.119,887,2.119,888,2.119,889,2.119,890,2.119,891,2.119,892,2.119,893,2.119,894,2.119,895,2.119,896,2.119,897,2.119,898,2.119,899,2.119,900,2.119,901,2.119,902,2.119,903,2.119,904,2.119,905,2.119,906,2.119,907,2.119,908,2.119,909,2.119,910,2.119,911,2.119,912,2.119,913,2.119,914,2.119,915,2.119,916,2.119,917,3.091,918,2.119,919,2.119,920,2.119,921,2.119,922,2.119,923,2.119,924,2.119,925,2.119,926,2.119,927,2.119,928,3.091,929,2.119,930,2.119,931,2.119,932,2.119,933,2.119,934,2.119,935,2.119,936,2.119,937,2.119,938,2.119,939,2.119,940,2.119,941,2.119,942,2.119,943,2.119,944,2.119,945,2.119,946,2.119,947,2.119,948,2.119,949,2.119,950,2.119,951,2.119,952,2.119,953,2.119,954,2.119,955,2.119,956,2.119,957,2.119,958,2.119,959,2.119,960,3.091,961,2.119,962,3.296,963,2.119,964,2.184,965,1.914,966,1.914,967,1.914,968,2.119,969,2.119]],["title/interfaces/MockRouterStateSnapshot.html",[473,1.069,817,2.539]],["body/interfaces/MockRouterStateSnapshot.html",[3,0.283,4,0.309,8,0.189,18,2.5,21,0.419,22,1.198,26,1.432,42,0.985,44,1.409,45,0.781,55,0.023,57,0.764,65,1.339,91,1.818,115,0.39,144,2.439,146,0.577,147,0.695,167,1.044,175,1.796,205,0.009,206,0.013,207,0.009,241,1.796,242,1.179,243,0.58,246,1.606,264,2.226,266,0.929,267,1.656,344,1.255,346,1.656,370,1.432,374,1.537,375,1.339,387,1.432,392,1.656,405,1.964,416,1.179,431,3.276,432,2.226,433,3.531,473,1.198,474,1.339,477,3.025,519,2.074,534,1.796,578,1.796,605,1.796,621,1.796,622,1.796,623,1.796,624,1.796,625,1.796,626,1.656,627,1.964,628,1.964,642,2.226,704,3.276,812,3.894,813,1.656,814,1.796,815,2.456,816,4.636,817,2.846,818,2.175,819,1.796,820,1.964,821,3.15,822,2.175,823,2.456,824,2.456,825,1.964,826,3.704,827,3.704,828,3.704,829,3.704,830,3.704,831,3.704,832,2.175,833,2.175,834,2.175,835,2.175,836,3.15,837,2.175,838,2.175,839,3.15,840,2.175,841,2.175,842,3.704,843,2.175,844,2.175,845,2.175,846,2.175,847,2.175,848,2.175,849,2.175,850,2.175,851,2.175,852,2.175,853,2.175,854,2.175,855,2.175,856,2.175,857,2.175,858,3.15,859,2.175,860,2.175,861,2.175,862,2.175,863,2.175,864,2.175,865,2.175,866,2.175,867,2.175,868,2.175,869,2.175,870,3.15,871,2.175,872,2.175,873,2.175,874,2.175,875,2.175,876,2.175,877,2.175,878,2.175,879,2.175,880,2.175,881,2.175,882,2.175,883,2.175,884,2.175,885,2.175,886,2.175,887,2.175,888,2.175,889,2.175,890,2.175,891,2.175,892,2.175,893,2.175,894,2.175,895,2.175,896,2.175,897,2.175,898,2.175,899,2.175,900,2.175,901,2.175,902,2.175,903,2.175,904,2.175,905,2.175,906,2.175,907,2.175,908,2.175,909,2.175,910,2.175,911,2.175,912,2.175,913,2.175,914,2.175,915,2.175,916,2.175,917,3.15,918,2.175,919,2.175,920,2.175,921,2.175,922,2.175,923,2.175,924,2.175,925,2.175,926,2.175,927,2.175,928,3.15,929,2.175,930,2.175,931,2.175,932,2.175,933,2.175,934,2.175,935,2.175,936,2.175,937,2.175,938,2.175,939,2.175,940,2.175,941,2.175,942,2.175,943,2.175,944,2.175,945,2.175,946,2.175,947,2.175,948,2.175,949,2.175,950,2.175,951,2.175,952,2.175,953,2.175,954,2.175,955,2.175,956,2.175,957,2.175,958,2.175,959,2.175,960,3.15,961,2.175,962,3.346,963,2.175,964,2.226,965,1.964,966,1.964,967,1.964,968,2.175,969,2.175]],["title/interfaces/NotificationInterface.html",[101,2.141,473,1.069]],["body/interfaces/NotificationInterface.html",[3,0.583,4,0.443,8,0.271,10,0.601,21,0.601,22,1.536,44,2.033,55,0.023,57,1.103,58,1.512,101,3.409,146,0.443,171,3.754,175,4.276,205,0.013,206,0.017,207,0.013,267,3.823,473,1.536,474,1.922,479,4.038,642,3.547,654,2.82,965,4.676,966,4.042,967,3.647,970,3.526,971,6.657,972,5.935,973,5.355,974,5.355,975,5.355,976,3.335,977,5.355,978,5.355]],["title/interfaces/NotificationsState.html",[473,1.069,979,2.322]],["body/interfaces/NotificationsState.html",[3,0.386,4,0.421,8,0.258,10,0.57,12,3.223,21,0.57,22,1.484,26,2.569,42,1.341,44,1.127,45,1.665,55,0.023,57,0.9,101,2.972,115,0.832,122,1.709,146,0.684,147,1.246,167,2.227,171,3.083,205,0.012,206,0.016,207,0.012,243,0.79,246,1.989,264,3.083,356,3.223,375,2.402,473,1.127,474,1.823,477,3.188,480,3.371,481,3.524,519,3.371,577,4.928,578,3.223,579,3.902,581,3.902,582,3.902,583,2.962,585,3.346,588,2.447,591,2.962,613,2.962,614,2.962,615,2.962,616,3.346,617,2.962,979,3.98,980,2.676,981,3.928,982,3.928,983,3.928,984,2.962,985,3.346,986,3.346,987,3.346,988,3.346,989,3.346,990,3.346,991,3.928,992,3.928,993,3.928]],["title/injectables/PushNotificationService.html",[47,2.141,234,0.898]],["body/injectables/PushNotificationService.html",[3,0.33,4,0.359,8,0.22,10,0.676,21,0.487,23,3.066,24,1.215,26,3.11,34,1.588,40,1.146,44,1.531,47,3.311,49,1.472,52,0.522,54,1.445,55,0.023,56,1.445,57,0.897,58,1.286,67,3.598,69,2.309,84,1.84,101,3.311,105,2.849,115,0.819,118,0.635,125,1.215,128,1.666,129,2.286,133,4.124,137,2.858,146,0.359,147,1.12,171,3.489,183,2.858,205,0.01,206,0.014,207,0.01,233,1.666,234,1.12,239,1.927,243,1.261,265,4.267,266,1.498,267,1.927,295,3.926,345,4.078,347,3.59,512,1.666,564,3.168,567,2.858,570,2.858,574,3.962,575,3.962,642,1.788,994,5.157,995,2.858,996,4.724,997,4.724,998,4.347,999,6.055,1000,3.356,1001,3.356,1002,5.765,1003,3.926,1004,4.652,1005,3.356,1006,3.962,1007,4.91,1008,5.765,1009,3.356,1010,4.652,1011,4.652,1012,3.356,1013,3.356,1014,3.356]],["title/injectables/RouterEffects.html",[234,0.898,330,2.539]],["body/injectables/RouterEffects.html",[3,0.303,4,0.33,8,0.202,10,0.636,21,0.447,22,1.257,24,1.846,40,1.496,49,1.418,52,1.015,54,0.834,55,0.023,56,0.834,57,0.864,58,0.742,75,2.084,93,2.516,102,2.366,105,2.728,115,0.867,118,0.583,122,1.341,125,1.116,127,1.43,142,3.732,144,2.175,146,0.33,149,2.716,205,0.01,206,0.014,207,0.01,228,3.501,234,1.055,236,1.919,242,2.491,243,0.62,246,2.344,312,1.77,330,4.504,416,1.259,432,2.958,436,2.729,480,1.53,512,1.53,518,3.189,522,2.624,525,4.728,526,5.192,538,4.596,540,4.152,545,1.919,554,2.624,704,3.341,716,5.192,722,4.728,976,1.919,1015,2.624,1016,5.866,1017,5.866,1018,5.866,1019,6.271,1020,3.081,1021,4.381,1022,4.381,1023,4.381,1024,4.381,1025,5.552,1026,4.381,1027,3.081,1028,4.381,1029,4.381,1030,3.081,1031,4.381,1032,4.381,1033,3.081,1034,3.081,1035,3.081,1036,3.081]],["title/interfaces/RouterStateUrl.html",[422,2.322,473,1.069]],["body/interfaces/RouterStateUrl.html",[3,0.454,4,0.495,8,0.303,10,0.671,21,0.671,22,1.646,44,1.791,55,0.023,57,0.972,115,0.625,146,0.495,205,0.014,206,0.018,207,0.014,416,1.888,422,3.575,431,3.738,432,3.648,433,4.148,473,1.791,474,2.145,477,3.257,704,3.738,1037,3.935,1038,5.741]],["title/modules/SharedModule.html",[270,1.433,632,2.141]],["body/modules/SharedModule.html",[3,0.479,4,0.522,8,0.319,10,0.707,52,0.995,55,0.023,115,0.9,118,0.921,123,2.119,124,2.595,127,2.261,146,0.522,155,1.764,156,1.764,157,1.568,205,0.015,206,0.018,207,0.015,272,2.119,274,2.797,276,2.418,277,2.261,289,2.944,290,3.303,291,2.944,292,2.418,305,4.471,414,4.039,416,1.99,632,3.406,634,4.471,635,4.821,1039,4.87,1040,5.93,1041,4.87]],["title/classes/TranslateUniversalLoader.html",[52,0.58,467,2.322]],["body/classes/TranslateUniversalLoader.html",[3,0.393,4,0.428,8,0.262,10,0.899,14,2.53,21,0.58,23,3.351,24,1.895,31,3.259,34,1.787,40,1.787,44,1.977,49,1.337,52,0.908,54,1.417,55,0.023,56,1.417,57,0.814,58,1.261,84,1.215,105,2.796,115,0.789,123,2.539,124,2.129,125,1.447,146,0.428,147,1.406,149,2.788,155,1.447,156,1.447,157,1.287,205,0.012,206,0.016,207,0.012,243,1.053,304,4.846,343,2.788,344,2.694,349,3.014,350,2.129,383,2.598,438,4.4,467,3.259,658,3.259,661,3.014,976,2.489,1042,3.404,1043,5.233,1044,6.191,1045,3.997,1046,6.191,1047,3.997,1048,5.233,1049,3.997,1050,5.233,1051,3.946,1052,5.233,1053,3.997,1054,3.997,1055,3.997,1056,3.997,1057,3.997,1058,3.997,1059,3.997]],["title/interceptors/UniversalInterceptor.html",[208,2.141,461,2.322]],["body/interceptors/UniversalInterceptor.html",[3,0.392,4,0.427,8,0.261,10,0.579,14,1.63,21,0.579,24,1.445,34,1.784,40,1.362,45,1.675,49,1.335,52,0.621,54,1.415,55,0.023,56,1.415,57,0.813,58,1.259,63,1.851,84,1.212,115,0.836,118,0.754,146,0.427,147,1.259,155,1.893,156,1.893,157,2.122,205,0.012,206,0.016,207,0.012,209,2.595,210,2.717,212,4.665,213,4.452,214,3.56,215,3.941,216,4.452,217,3.97,218,3.56,219,3.941,223,5.063,224,4.843,226,4.213,229,3.002,230,3.255,232,3.255,233,1.98,234,1.259,236,2.484,239,2.291,243,0.803,249,3.397,250,5.802,252,4.452,254,2.595,255,3.397,256,3.397,257,2.125,461,3.255,708,3.008,709,3.397,711,3.397,722,3.008,1060,3.397,1061,3.989,1062,3.989,1063,3.989,1064,3.989,1065,3.989]],["title/changelog.html",[1066,2.382,1067,2.382,1068,2.69]],["body/changelog.html",[6,1.249,8,0.222,11,1.159,15,1.482,26,2.058,42,0.743,45,1.37,51,1.08,55,0.017,64,1.801,65,2.17,68,3.39,69,2.058,75,0.889,80,1.159,82,1.482,89,1.941,120,2.105,123,1.804,125,0.788,128,1.08,143,1.482,145,1.853,161,4.276,205,0.007,206,0.01,207,0.007,208,1.249,214,1.482,215,2.549,218,1.482,228,1.249,229,1.249,232,2.105,254,1.08,266,1.726,273,2.87,308,1.355,310,2.302,345,1.355,346,1.249,350,1.801,370,1.08,379,1.355,383,1.08,400,2.549,436,2.582,496,1.678,518,1.249,545,2.105,550,1.355,551,1.482,553,2.908,595,2.105,658,3.602,685,2.879,687,2.549,761,1.64,792,1.64,800,1.482,813,1.249,819,2.105,821,1.64,825,1.482,964,2.698,976,2.105,996,3.126,1003,2.824,1051,2.549,1068,2.879,1069,2.175,1070,5.783,1071,5.783,1072,3.65,1073,6.702,1074,2.105,1075,5.538,1076,2.175,1077,6.279,1078,5.266,1079,4.675,1080,2.175,1081,3.38,1082,2.175,1083,3.531,1084,2.175,1085,2.175,1086,2.175,1087,2.175,1088,3.38,1089,3.38,1090,2.175,1091,2.175,1092,2.175,1093,5.36,1094,2.175,1095,3.38,1096,2.175,1097,4.925,1098,2.175,1099,4.146,1100,2.175,1101,2.175,1102,3.38,1103,2.175,1104,1.853,1105,2.175,1106,2.175,1107,2.175,1108,2.175,1109,2.175,1110,2.175,1111,1.853,1112,2.175,1113,2.175,1114,2.175,1115,2.175,1116,2.175,1117,2.175,1118,2.175,1119,3.38,1120,3.38,1121,2.175,1122,2.175,1123,4.146,1124,2.175,1125,2.175,1126,2.175,1127,3.982,1128,2.175,1129,2.879,1130,2.175,1131,2.175,1132,2.879,1133,2.879,1134,4.146,1135,1.853,1136,2.175,1137,2.175,1138,5.36,1139,5.36,1140,3.531,1141,5.594,1142,3.38,1143,2.175,1144,2.175,1145,2.175,1146,2.175,1147,2.175,1148,2.175,1149,4.312,1150,3.38,1151,2.175,1152,3.38,1153,2.175,1154,2.175,1155,3.38,1156,2.879,1157,2.175,1158,5.632,1159,1.853,1160,2.175,1161,2.175,1162,1.853,1163,1.853,1164,2.175,1165,2.175,1166,2.175,1167,1.853,1168,2.175,1169,1.853,1170,3.38,1171,2.175,1172,1.64,1173,2.175,1174,1.853,1175,2.175,1176,2.175,1177,1.853,1178,2.175,1179,2.175,1180,2.302,1181,2.175,1182,2.175,1183,2.175,1184,3.531,1185,2.175,1186,5.063,1187,2.175,1188,2.175,1189,2.175,1190,2.175,1191,2.175,1192,2.175,1193,1.853,1194,2.175,1195,2.175,1196,1.853,1197,2.175,1198,2.175,1199,2.175,1200,3.982,1201,2.175,1202,2.175,1203,2.175,1204,3.38,1205,2.175,1206,2.175,1207,2.175,1208,2.175,1209,4.675,1210,2.175,1211,3.38,1212,2.175,1213,2.175,1214,3.38,1215,2.175,1216,2.175,1217,2.879,1218,3.38,1219,2.175,1220,2.175,1221,2.175,1222,2.175,1223,1.853,1224,2.175,1225,1.853,1226,2.175,1227,2.175,1228,2.175,1229,2.175,1230,2.879,1231,2.175,1232,2.175,1233,2.175,1234,5.36,1235,5.36,1236,5.36,1237,2.175,1238,1.853,1239,1.853,1240,2.879,1241,2.175,1242,1.853,1243,1.64,1244,2.175,1245,2.175,1246,2.175,1247,2.175,1248,2.175,1249,2.879,1250,3.38,1251,4.146,1252,2.175,1253,1.853,1254,1.853,1255,4.041,1256,2.175,1257,1.853,1258,2.175,1259,1.853,1260,1.853,1261,1.853,1262,2.175,1263,1.853,1264,2.175,1265,2.175,1266,2.879,1267,1.853,1268,2.175,1269,3.38,1270,2.175,1271,3.531,1272,3.531,1273,1.64,1274,2.175,1275,2.175,1276,2.175,1277,2.175,1278,2.175,1279,1.64,1280,1.853,1281,1.853,1282,2.175,1283,1.853,1284,2.175,1285,2.175,1286,1.853,1287,2.175,1288,2.175,1289,2.175,1290,2.175,1291,3.38,1292,2.175,1293,2.175,1294,2.175,1295,1.853]],["title/coverage.html",[1296,3.404]],["body/coverage.html",[0,1.831,1,1.045,8,0.148,9,1.917,13,1.293,42,2.092,47,1.293,52,0.54,55,0.023,57,0.35,101,1.293,108,1.697,128,2.103,130,1.533,133,1.533,135,1.697,140,1.697,201,0.979,202,1.045,205,0.007,206,0.011,207,0.007,208,2.433,209,1.723,211,1.917,234,1.364,237,1.697,248,1.917,266,0.725,288,2.617,318,1.533,323,1.697,324,1.697,326,1.697,330,1.533,334,1.118,335,1.533,340,1.533,342,1.199,356,2.639,358,1.697,370,1.118,375,2.21,385,1.697,387,1.118,412,1.697,413,1.697,419,1.402,422,1.402,425,1.533,461,1.402,462,1.697,467,1.402,469,1.697,473,1.677,475,3.243,484,1.697,494,1.917,514,1.533,515,1.917,523,1.293,545,1.402,547,1.533,557,1.199,561,1.697,563,1.917,576,3.983,588,2.162,590,1.533,592,1.697,618,1.697,620,1.917,638,1.917,639,2.364,662,1.917,696,6.151,699,1.917,700,1.917,712,1.533,740,1.917,772,1.533,774,1.917,775,1.917,785,1.697,786,1.697,790,1.917,791,1.917,812,1.533,813,2.735,814,2.965,817,1.533,970,1.917,979,1.402,980,3.701,984,1.697,994,1.917,995,1.917,997,1.697,998,1.697,1015,1.917,1037,1.917,1042,1.917,1060,1.917,1296,1.533,1297,1.697,1298,2.251,1299,1.917,1300,5.951,1301,2.251,1302,5.74,1303,1.917,1304,4.055,1305,7.266,1306,7.208,1307,1.917,1308,1.917,1309,3.471,1310,5.435,1311,5.435,1312,2.251,1313,2.251,1314,2.251,1315,2.251,1316,3.608,1317,1.917,1318,2.956,1319,1.917,1320,2.251,1321,2.251,1322,3.471,1323,3.471,1324,2.251,1325,2.251,1326,3.194,1327,1.917,1328,2.956,1329,3.608,1330,1.917,1331,4.629,1332,1.917,1333,1.917,1334,3.471,1335,3.471,1336,2.251,1337,2.251,1338,4.381,1339,1.917,1340,1.917,1341,1.917,1342,1.917,1343,2.956,1344,3.194,1345,1.697,1346,1.917,1347,4.629,1348,1.917,1349,1.917,1350,1.917,1351,1.917,1352,2.956,1353,1.917,1354,3.608,1355,1.917,1356,1.917,1357,1.917,1358,3.608,1359,1.917,1360,1.917,1361,1.917,1362,1.917,1363,1.917,1364,1.917,1365,1.917,1366,1.917]],["title/dependencies.html",[273,2.07,1132,2.69]],["body/dependencies.html",[45,1.221,55,0.023,63,2.625,64,2.403,118,0.853,119,3.401,120,2.809,122,2.46,123,2.688,124,2.403,125,1.633,127,2.093,205,0.014,206,0.018,207,0.014,257,3.291,273,2.093,303,3.072,307,3.841,308,2.809,310,3.072,312,2.59,317,3.841,332,3.841,416,1.843,583,3.401,626,2.59,1367,4.51,1368,7.096,1369,4.51,1370,4.51,1371,4.51,1372,6.671,1373,4.51,1374,4.51,1375,4.51,1376,4.51,1377,4.51,1378,4.51,1379,4.51,1380,4.51,1381,4.51,1382,3.841,1383,4.51,1384,4.51,1385,4.51,1386,4.51,1387,4.51,1388,4.51,1389,4.51,1390,4.51,1391,4.51,1392,4.51,1393,4.51,1394,4.51]],["title/miscellaneous/functions.html",[1395,2.151,1396,3.362]],["body/miscellaneous/functions.html",[8,0.244,10,0.817,21,0.54,42,1.922,44,1.066,45,1.006,48,2.532,49,0.949,54,1.815,55,0.022,56,1.815,58,1.616,84,2.086,91,1.617,143,2.532,171,1.98,205,0.012,206,0.015,207,0.012,243,0.748,266,1.197,288,2.803,295,2.532,306,3.166,308,3.106,313,3.166,326,4.244,340,4.097,341,3.106,342,2.657,343,2.657,344,2.17,345,2.315,346,2.135,347,2.315,348,2.803,349,2.803,350,2.999,351,3.166,354,3.166,355,3.166,356,4.231,357,3.166,358,3.761,359,4.248,360,4.536,361,5.124,362,3.166,385,3.761,387,1.845,392,2.135,462,2.803,467,2.315,469,4.536,475,2.532,476,2.532,477,3.113,480,3.33,487,3.166,488,3.166,489,3.166,490,3.166,491,3.166,492,4.244,576,2.532,586,3.166,590,3.397,648,2.803,712,2.532,761,2.803,792,2.803,799,3.166,813,2.135,814,3.106,818,2.803,819,2.315,820,2.532,822,2.803,979,2.315,980,2.532,1326,2.803,1344,2.803,1361,4.248,1395,2.532,1396,2.803,1397,3.166,1398,4.988,1399,3.166,1400,3.166,1401,3.166,1402,4.248,1403,3.166,1404,3.717,1405,3.717,1406,3.717]],["title/index.html",[21,0.459,1066,2.382,1067,2.382]],["body/index.html",[8,0.226,11,1.192,31,1.393,45,0.605,51,1.11,55,0.022,64,2.732,65,1.038,66,1.905,68,2.248,69,1.11,75,1.939,76,2.942,80,2.248,120,1.393,123,0.973,128,1.11,161,2.352,162,2.604,171,1.192,193,1.393,205,0.007,206,0.011,207,0.007,229,1.284,230,1.393,232,1.393,242,0.914,254,1.715,266,0.72,273,1.603,334,1.11,346,2.423,347,1.393,350,1.192,379,1.393,383,1.715,400,1.686,409,2.942,431,1.192,476,2.874,496,1.715,540,1.523,546,1.523,550,1.393,553,1.284,595,1.393,657,3.593,658,3.194,665,1.905,687,1.686,691,1.905,720,2.942,776,1.905,800,1.523,805,1.905,816,1.686,819,1.393,820,4.305,964,3.449,976,1.393,996,2.604,1003,1.523,1007,1.905,1051,2.604,1072,2.352,1074,1.393,1075,3.593,1078,1.905,1083,3.593,1097,1.905,1104,3.593,1111,1.905,1127,2.942,1129,3.593,1133,4.041,1135,2.942,1140,1.905,1149,5.453,1156,1.905,1158,4.97,1162,1.905,1163,1.905,1167,1.905,1169,2.942,1172,1.686,1174,3.593,1177,1.905,1180,4.166,1184,4.041,1196,2.942,1217,1.905,1223,1.905,1225,1.905,1230,1.905,1239,4.041,1240,4.041,1242,2.942,1243,3.181,1249,1.905,1253,2.942,1254,1.905,1255,3.867,1257,1.905,1259,2.942,1260,2.942,1261,2.942,1263,4.041,1266,1.905,1267,1.905,1271,6.019,1272,6.122,1273,2.604,1279,3.578,1280,3.593,1281,1.905,1283,1.905,1286,1.905,1295,2.942,1296,2.352,1297,3.181,1407,2.236,1408,2.236,1409,3.454,1410,3.454,1411,2.236,1412,2.236,1413,2.236,1414,1.905,1415,2.236,1416,2.236,1417,2.236,1418,2.236,1419,2.236,1420,2.236,1421,2.236,1422,2.236,1423,2.236,1424,2.236,1425,2.236,1426,5.128,1427,2.236,1428,3.454,1429,3.454,1430,2.236,1431,3.454,1432,2.236,1433,2.236,1434,3.454,1435,2.236,1436,1.393,1437,2.236,1438,2.236,1439,2.236,1440,2.236,1441,3.454,1442,3.454,1443,3.454,1444,2.236,1445,2.236,1446,2.236,1447,3.454,1448,2.236,1449,2.236,1450,2.236,1451,2.236,1452,2.236,1453,3.454,1454,4.745,1455,2.236,1456,2.236,1457,2.236,1458,2.236,1459,2.236,1460,4.219,1461,3.454,1462,2.236,1463,2.236,1464,2.236,1465,3.454,1466,2.236,1467,2.236,1468,2.236,1469,3.454,1470,2.236,1471,2.236,1472,2.236,1473,2.236,1474,4.041,1475,3.454,1476,2.236,1477,2.236,1478,3.454,1479,3.454,1480,4.219,1481,2.236,1482,2.236,1483,2.236,1484,2.236,1485,2.236,1486,2.236,1487,2.236,1488,2.236,1489,2.236,1490,2.236,1491,2.236,1492,2.236,1493,3.454,1494,3.454,1495,2.236,1496,2.236,1497,4.219,1498,4.745,1499,3.454,1500,3.454,1501,3.454,1502,4.219,1503,4.219,1504,4.745,1505,2.236,1506,2.236,1507,2.236,1508,2.236,1509,2.236,1510,3.454,1511,2.236,1512,2.236,1513,2.236,1514,2.236,1515,2.236,1516,2.236,1517,2.236,1518,2.236,1519,3.454,1520,2.236,1521,2.236,1522,2.236,1523,1.905,1524,2.236,1525,2.236,1526,3.454,1527,2.236,1528,2.236,1529,2.236,1530,2.236,1531,2.236,1532,2.236,1533,2.236,1534,2.236,1535,2.236,1536,2.236,1537,2.236,1538,1.905,1539,2.236,1540,2.236,1541,2.236,1542,3.454,1543,2.236,1544,2.236,1545,2.236,1546,2.236,1547,2.236,1548,2.236,1549,2.236,1550,2.236,1551,2.236,1552,2.236,1553,2.236,1554,2.236,1555,2.236,1556,2.236]],["title/license.html",[1066,2.382,1067,2.382,1557,2.69]],["body/license.html",[55,0.018,205,0.014,206,0.018,207,0.014,287,2.607,480,2.254,496,2.819,708,3.423,825,3.092,1200,3.866,1243,3.423,1297,3.423,1345,3.423,1382,3.866,1557,3.866,1558,4.539,1559,6.196,1560,4.539,1561,4.539,1562,4.539,1563,4.539,1564,4.539,1565,5.678,1566,4.539,1567,4.539,1568,4.539,1569,4.539,1570,4.539,1571,4.539,1572,5.678,1573,7.054,1574,4.539,1575,4.539,1576,6.196,1577,4.539,1578,5.678,1579,4.539,1580,4.539,1581,4.539,1582,4.539,1583,4.539,1584,4.539,1585,4.539,1586,4.539,1587,5.678,1588,4.539,1589,4.539,1590,4.539,1591,4.539,1592,4.539,1593,4.539,1594,4.539,1595,5.678,1596,5.678,1597,4.539,1598,4.539,1599,4.539,1600,4.539,1601,4.539,1602,4.539,1603,4.539,1604,4.539,1605,4.539,1606,4.539,1607,4.539,1608,4.539,1609,4.539,1610,4.539,1611,4.539,1612,4.539,1613,4.539,1614,4.539,1615,4.539,1616,4.539,1617,4.539,1618,4.539,1619,4.539,1620,4.539,1621,4.539,1622,4.539]],["title/modules.html",[272,2.174]],["body/modules.html",[55,0.019,63,3.167,162,4.98,205,0.016,206,0.019,207,0.016,271,3.272,272,2.286,283,3.017,284,3.272,456,3.578,632,3.017,723,3.578,728,3.272,1623,6.823,1624,6.823,1625,7.128,1626,6.604]],["title/overview.html",[1627,4.257]],["body/overview.html",[1,3.234,2,2.637,47,3.445,55,0.022,192,1.965,201,2.61,202,2.784,205,0.013,206,0.017,207,0.013,209,2.978,247,3.192,270,1.628,271,4.468,272,1.842,273,1.965,274,2.431,275,2.637,276,2.102,277,1.965,278,3.606,279,3.606,280,3.606,281,3.606,282,3.606,283,3.445,284,4.241,285,3.383,286,2.637,287,2.431,456,4.638,457,3.606,460,3.606,461,3.736,474,1.965,512,2.102,523,3.445,629,3.606,630,3.606,631,3.606,632,3.634,661,3.192,723,4.783,724,3.606,725,3.606,726,3.606,727,3.606,728,3.736,772,2.883,962,2.883,1238,3.606,1627,3.606,1628,5.432,1629,4.233]],["title/unit-test.html",[964,2.144,1180,2.741]],["body/unit-test.html",[8,0.272,55,0.023,205,0.013,206,0.017,207,0.013,266,1.336,639,2.826,964,2.21,1180,2.826,1296,2.826,1299,3.533,1300,6.31,1302,5.349,1303,3.533,1316,5.06,1317,4.567,1351,4.567,1365,3.533,1366,3.533,1396,3.128,1630,4.149,1631,4.149,1632,6.941,1633,4.149,1634,4.149,1635,7.09,1636,4.149,1637,4.149,1638,4.149,1639,4.149,1640,4.149,1641,4.149,1642,4.149,1643,6.503,1644,4.149,1645,4.149,1646,4.149,1647,4.149,1648,4.149,1649,4.149,1650,4.149]],["title/miscellaneous/variables.html",[1395,2.151,1651,3.798]],["body/miscellaneous/variables.html",[3,0.378,21,0.188,23,1.664,26,2.612,44,0.372,49,0.74,51,1.099,55,0.023,57,0.891,65,2.078,75,2.842,89,0.744,91,2.221,102,3.228,108,1.669,112,1.271,128,2.68,135,1.669,140,1.669,144,0.644,161,2.855,167,0.802,171,1.179,175,0.807,205,0.004,206,0.007,207,0.004,217,2.334,230,0.807,237,2.185,241,1.805,242,1.4,243,0.95,246,1.963,254,0.644,264,2.05,266,1.239,267,0.744,323,1.669,324,1.669,334,1.099,342,2.803,344,0.564,348,2.185,370,1.099,374,0.691,375,2.442,383,0.644,387,1.099,392,2.71,405,0.883,431,2.386,432,0.691,433,0.744,440,2.185,475,0.883,476,0.883,477,2.946,478,1.973,480,3.028,481,1.973,484,1.669,485,1.104,486,1.104,496,1.099,516,1.886,518,1.271,519,2.612,534,2.397,545,2.134,546,1.508,547,2.621,548,1.669,549,1.669,550,1.379,551,1.508,552,1.669,553,1.271,561,2.185,564,1.973,576,0.883,578,2.789,580,1.104,581,1.669,582,1.669,588,2.134,589,1.104,590,0.883,591,1.669,592,1.669,593,1.104,594,1.104,595,1.805,596,1.104,597,1.104,598,1.104,599,1.104,600,1.104,601,1.104,602,2.468,603,1.104,604,1.104,605,1.379,606,1.104,607,1.104,608,1.104,609,1.104,610,1.104,611,1.104,613,0.977,614,0.977,615,0.977,617,1.669,618,1.669,619,1.104,621,0.807,622,0.807,623,0.807,624,0.807,625,0.807,626,0.744,627,0.883,628,0.883,642,1.179,704,0.691,712,1.508,785,1.669,786,1.669,800,1.973,813,0.744,814,1.379,826,2.185,827,2.185,828,2.185,829,2.185,830,2.185,831,2.902,832,0.977,833,0.977,834,0.977,835,0.977,836,1.669,837,0.977,838,0.977,839,1.669,840,0.977,841,0.977,842,2.185,843,0.977,844,0.977,845,0.977,846,0.977,847,0.977,848,0.977,849,0.977,850,0.977,851,0.977,852,0.977,853,0.977,854,0.977,855,0.977,856,0.977,857,0.977,858,1.669,859,0.977,860,0.977,861,0.977,862,0.977,863,0.977,864,0.977,865,0.977,866,0.977,867,0.977,868,0.977,869,0.977,870,1.669,871,0.977,872,0.977,873,0.977,874,0.977,875,0.977,876,0.977,877,0.977,878,0.977,879,0.977,880,0.977,881,0.977,882,0.977,883,0.977,884,0.977,885,0.977,886,0.977,887,0.977,888,0.977,889,0.977,890,0.977,891,0.977,892,0.977,893,0.977,894,0.977,895,0.977,896,0.977,897,0.977,898,0.977,899,0.977,900,0.977,901,0.977,902,0.977,903,0.977,904,0.977,905,0.977,906,0.977,907,0.977,908,0.977,909,0.977,910,0.977,911,0.977,912,0.977,913,0.977,914,0.977,915,0.977,916,0.977,917,1.669,918,0.977,919,0.977,920,0.977,921,0.977,922,0.977,923,0.977,924,0.977,925,0.977,926,0.977,927,0.977,928,1.669,929,0.977,930,0.977,931,0.977,932,0.977,933,0.977,934,0.977,935,0.977,936,0.977,937,0.977,938,0.977,939,0.977,940,0.977,941,0.977,942,0.977,943,0.977,944,0.977,945,0.977,946,0.977,947,0.977,948,0.977,949,0.977,950,0.977,951,0.977,952,0.977,953,0.977,954,0.977,955,0.977,956,0.977,957,0.977,958,0.977,959,0.977,960,1.669,961,0.977,962,1.973,963,0.977,964,2.05,965,0.883,966,0.883,967,2.334,968,0.977,969,0.977,979,0.807,980,0.883,984,1.669,985,1.104,986,1.104,987,1.104,988,1.104,989,1.104,990,1.104,997,1.669,998,1.669,1003,1.973,1006,1.104,1159,2.468,1172,2.185,1193,1.104,1273,2.185,1304,1.104,1307,1.886,1308,1.886,1318,1.104,1319,2.468,1326,0.977,1327,1.104,1328,1.104,1329,4.348,1330,1.886,1331,1.104,1332,2.468,1333,3.278,1338,1.104,1339,1.886,1340,1.886,1341,1.886,1342,1.886,1343,1.104,1344,0.977,1345,1.669,1346,1.886,1347,1.104,1348,1.886,1349,1.886,1350,1.886,1352,1.104,1353,1.886,1354,1.104,1355,2.468,1356,2.468,1357,2.468,1358,1.104,1359,2.468,1360,2.468,1362,1.104,1363,1.104,1364,1.104,1395,0.883,1397,1.104,1399,1.886,1400,1.886,1401,2.918,1402,3.278,1403,1.886,1414,2.468,1474,3.57,1523,1.104,1538,1.886,1651,1.104,1652,4.192,1653,2.898,1654,4.192,1655,1.296,1656,1.296,1657,1.296,1658,3.427,1659,2.898,1660,2.214,1661,2.214,1662,3.848,1663,2.214,1664,2.214,1665,1.296,1666,5.261,1667,4.926,1668,2.214,1669,2.898,1670,4.478,1671,1.296,1672,2.214,1673,1.296,1674,4.192,1675,2.898,1676,2.898,1677,4.192,1678,2.898,1679,1.296,1680,4.192,1681,4.192,1682,4.192,1683,2.898,1684,4.192,1685,2.898,1686,2.898,1687,4.926,1688,2.898,1689,3.427,1690,2.898,1691,2.898,1692,1.296,1693,1.296,1694,1.296,1695,4.192,1696,1.296,1697,1.296,1698,1.296,1699,1.296,1700,1.296,1701,1.296,1702,1.296,1703,1.296,1704,1.296,1705,2.214,1706,1.296,1707,1.296,1708,1.296,1709,1.296,1710,1.296,1711,1.296,1712,1.296,1713,1.296]],["title/additional-documentation/bundle-analytics.html",[62,1.36,1436,1.707,1714,2.74,1715,2.74]],["body/additional-documentation/bundle-analytics.html",[55,0.02,205,0.018,206,0.02,207,0.018]],["title/additional-documentation/e2e-testing-report-(cucumber).html",[62,1.075,553,1.244,1074,1.349,1255,1.633,1279,1.633,1436,1.349]],["body/additional-documentation/e2e-testing-report-(cucumber).html",[55,0.02,205,0.018,206,0.02,207,0.018]],["title/additional-documentation/lighthouse-mobile-report.html",[62,1.201,1072,1.648,1074,1.507,1436,1.507,1716,2.42]],["body/additional-documentation/lighthouse-mobile-report.html",[55,0.02,205,0.018,206,0.02,207,0.018]],["title/additional-documentation/lighthouse-desktop-report.html",[62,1.201,1072,1.648,1074,1.507,1436,1.507,1717,2.42]],["body/additional-documentation/lighthouse-desktop-report.html",[55,0.02,205,0.018,206,0.02,207,0.018]]],"invertedIndex":[["",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{},"miscellaneous/variables.html":{},"additional-documentation/bundle-analytics.html":{},"additional-documentation/e2e-testing-report-(cucumber).html":{},"additional-documentation/lighthouse-mobile-report.html":{},"additional-documentation/lighthouse-desktop-report.html":{}}}],["0",{"_index":696,"title":{},"body":{"classes/GeneralHelper.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["0/0",{"_index":1635,"title":{},"body":{"unit-test.html":{}}}],["0/1",{"_index":1306,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1337,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1336,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":1157,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1122,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1123,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1116,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1099,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":1214,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":247,"title":{"interceptors/AppHttpInterceptor-1.html":{}},"body":{"classes/GeneralHelper.html":{},"overview.html":{}}}],["1.0.0",{"_index":1294,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":1283,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["1.1.1",{"_index":1274,"title":{},"body":{"changelog.html":{}}}],["1.1.11",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["1.1.2",{"_index":1268,"title":{},"body":{"changelog.html":{}}}],["1.1.20150312",{"_index":1379,"title":{},"body":{"dependencies.html":{}}}],["1.1.3",{"_index":1262,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":1244,"title":{},"body":{"changelog.html":{}}}],["1.2.1",{"_index":1241,"title":{},"body":{"changelog.html":{}}}],["1.2.2",{"_index":1233,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":1216,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":1213,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":1208,"title":{},"body":{"changelog.html":{}}}],["1.5.1",{"_index":1207,"title":{},"body":{"changelog.html":{}}}],["1.5.2",{"_index":1203,"title":{},"body":{"changelog.html":{}}}],["1.5.3",{"_index":1201,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":1195,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":1302,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["1/3",{"_index":1325,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1156,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["10.x",{"_index":1154,"title":{},"body":{"changelog.html":{}}}],["100",{"_index":1300,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["11",{"_index":1081,"title":{},"body":{"changelog.html":{}}}],["11/11",{"_index":1634,"title":{},"body":{"unit-test.html":{}}}],["12.0.1",{"_index":1388,"title":{},"body":{"dependencies.html":{}}}],["12.1.0",{"_index":1375,"title":{},"body":{"dependencies.html":{}}}],["12.1.x",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["12.2.5",{"_index":1368,"title":{},"body":{"dependencies.html":{}}}],["12.2.x",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["12.4.0",{"_index":1372,"title":{},"body":{"dependencies.html":{}}}],["12.x",{"_index":1113,"title":{},"body":{"changelog.html":{}}}],["13.0.0",{"_index":1376,"title":{},"body":{"dependencies.html":{}}}],["14/14",{"_index":1648,"title":{},"body":{"unit-test.html":{}}}],["15",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["15/15",{"_index":1301,"title":{},"body":{"coverage.html":{}}}],["16/16",{"_index":1647,"title":{},"body":{"unit-test.html":{}}}],["17",{"_index":1117,"title":{},"body":{"changelog.html":{}}}],["17/17",{"_index":1639,"title":{},"body":{"unit-test.html":{}}}],["18",{"_index":1215,"title":{},"body":{"changelog.html":{}}}],["19/19",{"_index":1638,"title":{},"body":{"unit-test.html":{}}}],["2",{"_index":962,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":1182,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":1179,"title":{},"body":{"changelog.html":{}}}],["2.1.0",{"_index":1163,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["2.3.1",{"_index":1392,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1316,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["2/3",{"_index":1311,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":268,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{}}}],["2019",{"_index":1200,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":1155,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":1245,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":1164,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":1153,"title":{},"body":{"changelog.html":{}}}],["3.17.2",{"_index":1381,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1317,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["3/4",{"_index":1335,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1321,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1324,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1629,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":1121,"title":{},"body":{"changelog.html":{}}}],["4.1.0",{"_index":1118,"title":{},"body":{"changelog.html":{}}}],["4.17.1",{"_index":1383,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":1387,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":1385,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1309,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":1323,"title":{},"body":{"coverage.html":{}}}],["404",{"_index":447,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"components/ErrorPageComponent.html":{},"guards/LanguageGuard.html":{}}}],["4c70",{"_index":828,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["5.1.0",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["5.1.1",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["5/5",{"_index":1643,"title":{},"body":{"unit-test.html":{}}}],["6.0.0",{"_index":1377,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1303,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["60",{"_index":1320,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1310,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1628,"title":{},"body":{"overview.html":{}}}],["7.3.0",{"_index":1390,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1351,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["75",{"_index":1334,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1238,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["8.0.0",{"_index":1389,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1641,"title":{},"body":{"unit-test.html":{}}}],["8/9",{"_index":1313,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1322,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1312,"title":{},"body":{"coverage.html":{}}}],["9.x",{"_index":1183,"title":{},"body":{"changelog.html":{}}}],["9/10",{"_index":1315,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":1636,"title":{},"body":{"unit-test.html":{}}}],["90",{"_index":1314,"title":{},"body":{"coverage.html":{}}}],["93dd0fd6",{"_index":826,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["__app_storage__",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["_statecb",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["a213",{"_index":829,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["a[field",{"_index":694,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["ab",{"_index":923,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["ability",{"_index":1438,"title":{},"body":{"index.html":{}}}],["above",{"_index":1594,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":504,"title":{},"body":{"components/BaseComponent.html":{}}}],["access",{"_index":505,"title":{},"body":{"components/BaseComponent.html":{}}}],["according",{"_index":1422,"title":{},"body":{"index.html":{}}}],["action",{"_index":480,"title":{},"body":{"interfaces/ApplicationState.html":{},"injectables/EntitiesEffects.html":{},"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{},"injectables/RouterEffects.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["action.ispendingrequest",{"_index":486,"title":{},"body":{"interfaces/ApplicationState.html":{},"miscellaneous/variables.html":{}}}],["action.payload",{"_index":1023,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["actionreducermap",{"_index":584,"title":{},"body":{"interfaces/EntitiesState.html":{}}}],["actions",{"_index":228,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"injectables/RouterEffects.html":{},"changelog.html":{}}}],["actions.map",{"_index":594,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["actions.ts",{"_index":1292,"title":{},"body":{"changelog.html":{}}}],["actiontypes",{"_index":490,"title":{},"body":{"interfaces/ApplicationState.html":{},"miscellaneous/functions.html":{}}}],["activatedroutesnapshot",{"_index":781,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["active",{"_index":1463,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["adapter",{"_index":588,"title":{},"body":{"interfaces/EntitiesState.html":{},"components/HomePageComponent.html":{},"interfaces/NotificationsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adapter.addmany(action.notifications",{"_index":986,"title":{},"body":{"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["adapter.addone(action.notification",{"_index":988,"title":{},"body":{"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["adapter.getinitialstate",{"_index":591,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["adapter.getselectors",{"_index":617,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["adapter.removeall(state",{"_index":990,"title":{},"body":{"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["adapter.setall(action.entities",{"_index":597,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["adapter.upsertmany(mappedentities",{"_index":609,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["add",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["added",{"_index":1097,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["additional",{"_index":1436,"title":{"additional-documentation/bundle-analytics.html":{},"additional-documentation/e2e-testing-report-(cucumber).html":{},"additional-documentation/lighthouse-mobile-report.html":{},"additional-documentation/lighthouse-desktop-report.html":{}},"body":{"index.html":{}}}],["addnotification",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["addsubscription",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["addsubscription(subscription",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["adludentibus",{"_index":955,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["admonita",{"_index":891,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["advanced",{"_index":1409,"title":{},"body":{"index.html":{}}}],["aesculeae",{"_index":890,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["aethere",{"_index":938,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["aetne",{"_index":872,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["again",{"_index":1529,"title":{},"body":{"index.html":{}}}],["ait",{"_index":932,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["alias",{"_index":1471,"title":{},"body":{"index.html":{}}}],["alios",{"_index":885,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["alongside",{"_index":1508,"title":{},"body":{"index.html":{}}}],["already",{"_index":1476,"title":{},"body":{"index.html":{}}}],["always",{"_index":449,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["analytics",{"_index":1715,"title":{"additional-documentation/bundle-analytics.html":{}},"body":{}}],["analytics.effects.ts",{"_index":700,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"coverage.html":{}}}],["analytics.effects.ts:12",{"_index":705,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["analytics.effects.ts:27",{"_index":717,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["and/or",{"_index":1585,"title":{},"body":{"license.html":{}}}],["angular",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{}}}],["angular.json",{"_index":1445,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1367,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/ErrorModule.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"injectables/LocalStorageService.html":{},"injectables/RouterEffects.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":233,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"injectables/PushNotificationService.html":{},"interceptors/UniversalInterceptor.html":{}}}],["angular/compiler",{"_index":1369,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"modules/SharedModule.html":{},"interceptors/UniversalInterceptor.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1370,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":257,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"interceptors/UniversalInterceptor.html":{},"dependencies.html":{}}}],["angular/router",{"_index":416,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/service",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["animalia",{"_index":899,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["animam",{"_index":908,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["any).ga",{"_index":713,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["any).ga('send",{"_index":715,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["api",{"_index":1003,"title":{},"body":{"injectables/PushNotificationService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["apicookies",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiurl",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{}}}],["app.component",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module",{"_index":465,"title":{},"body":{"modules/AppServerModule.html":{}}}],["app/globals",{"_index":787,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["app/pages/error/error.module",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["app/services/entities/entities.service",{"_index":732,"title":{},"body":{"modules/HomeModule.html":{}}}],["app/ssr/tokens",{"_index":731,"title":{},"body":{"modules/HomeModule.html":{}}}],["app/store/entities/entities.effects",{"_index":733,"title":{},"body":{"modules/HomeModule.html":{}}}],["app/store/entities/entities.interface",{"_index":571,"title":{},"body":{"injectables/EntitiesService.html":{}}}],["app/store/entities/entities.reducer",{"_index":735,"title":{},"body":{"modules/HomeModule.html":{}}}],["app_initializer",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["apphttpinterceptor",{"_index":209,"title":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{}},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"interceptors/UniversalInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["appinitializerfactory",{"_index":404,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":476,"title":{},"body":{"interfaces/ApplicationState.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application.actions",{"_index":483,"title":{},"body":{"interfaces/ApplicationState.html":{}}}],["applicationactions",{"_index":482,"title":{},"body":{"interfaces/ApplicationState.html":{}}}],["applicationstate",{"_index":370,"title":{"interfaces/ApplicationState.html":{}},"body":{"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":271,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["approot",{"_index":368,"title":{},"body":{"modules/AppModule.html":{}}}],["approutes",{"_index":434,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["approutingmodule",{"_index":283,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"modules.html":{},"overview.html":{}}}],["appservermodule",{"_index":456,"title":{"modules/AppServerModule.html":{}},"body":{"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["arising",{"_index":1620,"title":{},"body":{"license.html":{}}}],["array",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"components/HomePageComponent.html":{},"miscellaneous/variables.html":{}}}],["array.prototype.slice.apply",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["assets",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["assets/i18n",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/i18n/{locale}.json",{"_index":1425,"title":{},"body":{"index.html":{}}}],["assetsroot",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associated",{"_index":1574,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1521,"title":{},"body":{"index.html":{}}}],["attribute",{"_index":402,"title":{},"body":{"modules/AppModule.html":{}}}],["audit",{"_index":1489,"title":{},"body":{"index.html":{}}}],["authors",{"_index":1610,"title":{},"body":{"license.html":{}}}],["available",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"modules.html":{}}}],["b",{"_index":693,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["b[field",{"_index":695,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["babel",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":1355,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["badge",{"_index":1212,"title":{},"body":{"changelog.html":{}}}],["base",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["basecomponent",{"_index":13,"title":{"components/BaseComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"coverage.html":{}}}],["basecomponent:15",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["basecomponent:23",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["basecomponent:32",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["basecomponent:42",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["basecomponent:47",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["based",{"_index":1205,"title":{},"body":{"changelog.html":{}}}],["bd876b5cb040b60d34355f0b41cfc183455b3d52",{"_index":1232,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":405,"title":{},"body":{"modules/AppModule.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["begawmdgbjhjfjp6i7hckrbkxzsnrixzkrhliruzb7hhopedgvweuftsjleovuzevjhcwhyoeogsao3",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behaviour",{"_index":1222,"title":{},"body":{"changelog.html":{}}}],["being",{"_index":516,"title":{},"body":{"injectables/EntitiesEffects.html":{},"miscellaneous/variables.html":{}}}],["best",{"_index":1510,"title":{},"body":{"index.html":{}}}],["better",{"_index":1247,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1198,"title":{},"body":{"changelog.html":{}}}],["blazing",{"_index":1407,"title":{},"body":{"index.html":{}}}],["blob",{"_index":804,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["body",{"_index":267,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"injectables/PushNotificationService.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":478,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"guards/LanguageGuard.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"overview.html":{}}}],["both",{"_index":1514,"title":{},"body":{"index.html":{}}}],["bound",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["branches",{"_index":1630,"title":{},"body":{"unit-test.html":{}}}],["breaking",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1625,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"interceptors/UniversalInterceptor.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule.withservertransition",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["browsertransferstatemodule",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["bug",{"_index":1234,"title":{},"body":{"changelog.html":{}}}],["bugfix",{"_index":1138,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1149,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["build:gzip",{"_index":1475,"title":{},"body":{"index.html":{}}}],["building",{"_index":1494,"title":{},"body":{"index.html":{}}}],["built",{"_index":1482,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":1714,"title":{"additional-documentation/bundle-analytics.html":{}},"body":{}}],["c",{"_index":1560,"title":{},"body":{"license.html":{}}}],["call",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"injectables/PushNotificationService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["callback",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["called",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"injectables/EntitiesEffects.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":215,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{}}}],["canactivate",{"_index":441,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"guards/LanguageGuard.html":{}}}],["canactivate(next",{"_index":780,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["candore",{"_index":855,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["carefully",{"_index":1190,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["catcherror",{"_index":532,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["cb",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cb76d1ef6eda",{"_index":830,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["cd",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["certificate",{"_index":1459,"title":{},"body":{"index.html":{}}}],["certificate:generate:mac",{"_index":1441,"title":{},"body":{"index.html":{}}}],["certificates",{"_index":1462,"title":{},"body":{"index.html":{}}}],["change",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["changed",{"_index":1499,"title":{},"body":{"index.html":{}}}],["changedetectorref",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["changelog",{"_index":1068,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changelog.md",{"_index":1284,"title":{},"body":{"changelog.html":{}}}],["changes",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1569,"title":{},"body":{"license.html":{}}}],["check",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{}}}],["checked",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["checks",{"_index":776,"title":{},"body":{"guards/LanguageGuard.html":{},"index.html":{}}}],["children",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["chrome_bin",{"_index":1130,"title":{},"body":{"changelog.html":{}}}],["chromeversion",{"_index":1131,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":1210,"title":{},"body":{"changelog.html":{}}}],["ci/fetchlighthouse.js",{"_index":1541,"title":{},"body":{"index.html":{}}}],["circumdata",{"_index":886,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["claim",{"_index":1613,"title":{},"body":{"license.html":{}}}],["claris",{"_index":871,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":52,"title":{"classes/GeneralHelper.html":{},"classes/TranslateUniversalLoader.html":{}},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"coverage.html":{}}}],["classes",{"_index":661,"title":{},"body":{"classes/GeneralHelper.html":{},"classes/TranslateUniversalLoader.html":{},"overview.html":{}}}],["classlist.js",{"_index":1378,"title":{},"body":{"dependencies.html":{}}}],["clear",{"_index":1538,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["cleared",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clearerror",{"_index":1332,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["clearnotifications",{"_index":1348,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["client",{"_index":1010,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["clones",{"_index":818,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/functions.html":{}}}],["clonestate",{"_index":1361,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["clonestate(state",{"_index":822,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/functions.html":{}}}],["cluster_appmodule",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appservermodule",{"_index":457,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_bootstrap",{"_index":459,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_imports",{"_index":458,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_providers",{"_index":460,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_errormodule",{"_index":629,"title":{},"body":{"modules/ErrorModule.html":{},"overview.html":{}}}],["cluster_errormodule_declarations",{"_index":631,"title":{},"body":{"modules/ErrorModule.html":{},"overview.html":{}}}],["cluster_errormodule_imports",{"_index":630,"title":{},"body":{"modules/ErrorModule.html":{},"overview.html":{}}}],["cluster_homemodule",{"_index":724,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_declarations",{"_index":727,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_imports",{"_index":725,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["cluster_homemodule_providers",{"_index":726,"title":{},"body":{"modules/HomeModule.html":{},"overview.html":{}}}],["code",{"_index":1051,"title":{},"body":{"classes/TranslateUniversalLoader.html":{},"changelog.html":{},"index.html":{}}}],["codecov",{"_index":1211,"title":{},"body":{"changelog.html":{}}}],["combining",{"_index":1412,"title":{},"body":{"index.html":{}}}],["comes",{"_index":1481,"title":{},"body":{"index.html":{}}}],["command",{"_index":1252,"title":{},"body":{"changelog.html":{}}}],["commit",{"_index":1295,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["commithash",{"_index":1231,"title":{},"body":{"changelog.html":{}}}],["commmands",{"_index":1468,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":636,"title":{},"body":{"modules/ErrorModule.html":{},"modules/HomeModule.html":{}}}],["compare",{"_index":1187,"title":{},"body":{"changelog.html":{}}}],["comparison",{"_index":1264,"title":{},"body":{"changelog.html":{}}}],["compile",{"_index":1526,"title":{},"body":{"index.html":{}}}],["complete",{"_index":406,"title":{},"body":{"modules/AppModule.html":{}}}],["completely",{"_index":1224,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":1083,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"coverage.html":{}}}],["component'},{'name",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["component_template",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"overview.html":{}}}],["conditions",{"_index":1593,"title":{},"body":{"license.html":{}}}],["config",{"_index":1227,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["configured",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{}}}],["confirm('new",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["confirmprompt",{"_index":1290,"title":{},"body":{"changelog.html":{}}}],["coniugis",{"_index":910,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["coniunx",{"_index":880,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":1621,"title":{},"body":{"license.html":{}}}],["connections",{"_index":1488,"title":{},"body":{"index.html":{}}}],["connects",{"_index":1452,"title":{},"body":{"index.html":{}}}],["const",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ApplicationState.html":{},"injectables/CustomSerializer.html":{},"interfaces/EntitiesState.html":{},"classes/GeneralHelper.html":{},"modules/HomeRoutingModule.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["constructor(@inject(platform_id",{"_index":808,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["constructor(_statecb",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(actions",{"_index":522,"title":{},"body":{"injectables/EntitiesEffects.html":{},"injectables/RouterEffects.html":{}}}],["constructor(http",{"_index":567,"title":{},"body":{"injectables/EntitiesService.html":{},"injectables/PushNotificationService.html":{}}}],["constructor(platformid",{"_index":703,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"injectables/LocalStorageService.html":{}}}],["constructor(prefix",{"_index":1045,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["constructor(private",{"_index":239,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"injectables/EntitiesService.html":{},"guards/LanguageGuard.html":{},"injectables/PushNotificationService.html":{},"interceptors/UniversalInterceptor.html":{}}}],["constructor(replayer",{"_index":742,"title":{},"body":{"components/HomePageComponent.html":{}}}],["constructor(router",{"_index":778,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["constructor(store",{"_index":220,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{}}}],["constructor(title",{"_index":641,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["constructor(transferstate",{"_index":249,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{}}}],["contain",{"_index":487,"title":{},"body":{"interfaces/ApplicationState.html":{},"miscellaneous/functions.html":{}}}],["contains",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"injectables/RouterEffects.html":{}}}],["content",{"_index":836,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1617,"title":{},"body":{"license.html":{}}}],["converted",{"_index":1165,"title":{},"body":{"changelog.html":{}}}],["convicia",{"_index":888,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["copies",{"_index":1587,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1572,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1559,"title":{},"body":{"license.html":{}}}],["core",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["coreapphttpinterceptor",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["correct",{"_index":1221,"title":{},"body":{"changelog.html":{}}}],["country",{"_index":621,"title":{},"body":{"interfaces/EntityInterface.html":{},"components/HomePageComponent.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":1296,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{},"unit-test.html":{}}}],["create",{"_index":1460,"title":{},"body":{"index.html":{}}}],["createaction",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[entities",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[router",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createapplicationreducer",{"_index":484,"title":{},"body":{"interfaces/ApplicationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createapplicationreducer(state",{"_index":493,"title":{},"body":{"interfaces/ApplicationState.html":{}}}],["created",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["createeffect",{"_index":525,"title":{},"body":{"injectables/EntitiesEffects.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/RouterEffects.html":{}}}],["createentityadapter",{"_index":581,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["createfeatureselector('applicationstate",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createfeatureselector('entitiesstate",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createfeatureselector('notifications",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createfeatureselector>('routerstate",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreducer",{"_index":481,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["createselector",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectfeature",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createtranslateloader",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["crud",{"_index":565,"title":{},"body":{"injectables/EntitiesService.html":{}}}],["cucumber",{"_index":1279,"title":{"additional-documentation/e2e-testing-report-(cucumber).html":{}},"body":{"changelog.html":{},"index.html":{}}}],["cucumber.conf.js",{"_index":1276,"title":{},"body":{"changelog.html":{}}}],["cucurri",{"_index":941,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["cum",{"_index":878,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["cupidine",{"_index":869,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["currency",{"_index":622,"title":{},"body":{"interfaces/EntityInterface.html":{},"components/HomePageComponent.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["currencypipe",{"_index":1040,"title":{},"body":{"modules/SharedModule.html":{}}}],["current",{"_index":805,"title":{},"body":{"injectables/LocalStorageService.html":{},"index.html":{}}}],["currententity",{"_index":602,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["currententity.deeperobject",{"_index":607,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["custodes",{"_index":850,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["custom",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"miscellaneous/functions.html":{}}}],["custom_elements_schema",{"_index":635,"title":{},"body":{"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["customserializer",{"_index":425,"title":{"injectables/CustomSerializer.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"coverage.html":{}}}],["customserialzer",{"_index":427,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["damages",{"_index":1614,"title":{},"body":{"license.html":{}}}],["danger",{"_index":978,"title":{},"body":{"interfaces/NotificationInterface.html":{}}}],["dangling",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["dantque",{"_index":852,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"injectables/EntitiesService.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"components/HomePageComponent.html":{},"changelog.html":{},"index.html":{}}}],["data.sort((a",{"_index":692,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["date",{"_index":966,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"miscellaneous/variables.html":{}}}],["date(a[field]).gettime",{"_index":698,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["date(b[field]).gettime",{"_index":697,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["dateformat",{"_index":623,"title":{},"body":{"interfaces/EntityInterface.html":{},"components/HomePageComponent.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["datesort",{"_index":667,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["datesort(data",{"_index":673,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["dd",{"_index":833,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["de",{"_index":866,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["deal",{"_index":1575,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1622,"title":{},"body":{"license.html":{}}}],["dealsstate",{"_index":619,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["declare",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":806,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["deeperobject",{"_index":605,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["default",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"injectables/EntitiesEffects.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"injectables/RouterEffects.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":1038,"title":{},"body":{"interfaces/RouterStateUrl.html":{}}}],["defined",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defines",{"_index":216,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/UniversalInterceptor.html":{}}}],["delete",{"_index":472,"title":{},"body":{"modules/AppServerModule.html":{}}}],["delimiter",{"_index":690,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["delphos",{"_index":927,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["dependencies",{"_index":273,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":1124,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":1120,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["der",{"_index":1563,"title":{},"body":{"license.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"miscellaneous/functions.html":{}}}],["desktop",{"_index":1717,"title":{"additional-documentation/lighthouse-desktop-report.html":{}},"body":{}}],["destructor",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["detected",{"_index":1288,"title":{},"body":{"changelog.html":{}}}],["detector",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["detects",{"_index":1432,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1509,"title":{},"body":{"index.html":{}}}],["development",{"_index":1249,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["devtools",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["difference",{"_index":1492,"title":{},"body":{"index.html":{}}}],["different",{"_index":1225,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["differential",{"_index":1256,"title":{},"body":{"changelog.html":{}}}],["differentiates",{"_index":488,"title":{},"body":{"interfaces/ApplicationState.html":{},"miscellaneous/functions.html":{}}}],["directive",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["directive's",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["directive/component",{"_index":646,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["directive/component's",{"_index":649,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["directives",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["directly",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":686,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["disabled",{"_index":1282,"title":{},"body":{"changelog.html":{}}}],["dispatch",{"_index":716,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"injectables/RouterEffects.html":{}}}],["dispatched",{"_index":489,"title":{},"body":{"interfaces/ApplicationState.html":{},"miscellaneous/functions.html":{}}}],["dispatches",{"_index":227,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{}}}],["displays",{"_index":647,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["dist",{"_index":1144,"title":{},"body":{"changelog.html":{}}}],["distribute",{"_index":1583,"title":{},"body":{"license.html":{}}}],["divitior",{"_index":860,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["doc:full",{"_index":1530,"title":{},"body":{"index.html":{}}}],["docker",{"_index":1169,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["docs",{"_index":1437,"title":{},"body":{"index.html":{}}}],["document",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["document.addeventlistener('prebootcomplete",{"_index":408,"title":{},"body":{"modules/AppModule.html":{}}}],["documentation",{"_index":1297,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentation/index.html",{"_index":1533,"title":{},"body":{"index.html":{}}}],["doesn't",{"_index":1175,"title":{},"body":{"changelog.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"changelog.html":{}}}],["dom.queryselectorall(`style[ng",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["dom.removechild(el",{"_index":411,"title":{},"body":{"modules/AppModule.html":{}}}],["downgrade",{"_index":1173,"title":{},"body":{"changelog.html":{}}}],["duabus",{"_index":911,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["due",{"_index":551,"title":{},"body":{"injectables/EntitiesEffects.html":{},"interfaces/EntitiesState.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["dulce",{"_index":902,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["dum",{"_index":893,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["dummy",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1371,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1255,"title":{"additional-documentation/e2e-testing-report-(cucumber).html":{}},"body":{"changelog.html":{},"index.html":{}}}],["each",{"_index":1229,"title":{},"body":{"changelog.html":{}}}],["ecce",{"_index":914,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["effect",{"_index":540,"title":{},"body":{"injectables/EntitiesEffects.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/RouterEffects.html":{},"index.html":{}}}],["effective",{"_index":1507,"title":{},"body":{"index.html":{}}}],["effects",{"_index":518,"title":{},"body":{"injectables/EntitiesEffects.html":{},"interfaces/EntitiesState.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/RouterEffects.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["effectsmodule",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["effectsmodule.forfeature([entitieseffects",{"_index":736,"title":{},"body":{"modules/HomeModule.html":{}}}],["effectsmodule.forroot([googleanalyticseffects",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["egredior",{"_index":951,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["el.removeattribute('ng",{"_index":407,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["email",{"_index":624,"title":{},"body":{"interfaces/EntityInterface.html":{},"components/HomePageComponent.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["emitter",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["en",{"_index":440,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"miscellaneous/variables.html":{}}}],["enabled",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"changelog.html":{},"index.html":{}}}],["enabletracing",{"_index":451,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["end",{"_index":1503,"title":{},"body":{"index.html":{}}}],["engine",{"_index":1374,"title":{},"body":{"dependencies.html":{}}}],["english",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enim",{"_index":907,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["entities",{"_index":519,"title":{},"body":{"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"components/HomePageComponent.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["entities.actions",{"_index":556,"title":{},"body":{"injectables/EntitiesEffects.html":{},"interfaces/EntitiesState.html":{}}}],["entities.foreach((entity",{"_index":601,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["entities.interface",{"_index":558,"title":{},"body":{"injectables/EntitiesEffects.html":{},"interfaces/EntitiesState.html":{}}}],["entitiesactions",{"_index":541,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["entitiesactions.fail",{"_index":533,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["entitiesactions.loadsuccess",{"_index":530,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["entitiesactions.mapsuccess",{"_index":543,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["entitieseffects",{"_index":514,"title":{"injectables/EntitiesEffects.html":{}},"body":{"injectables/EntitiesEffects.html":{},"modules/HomeModule.html":{},"coverage.html":{}}}],["entitiesreducer",{"_index":592,"title":{},"body":{"interfaces/EntitiesState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["entitiesreducer(state",{"_index":612,"title":{},"body":{"interfaces/EntitiesState.html":{}}}],["entitiesselectors",{"_index":751,"title":{},"body":{"components/HomePageComponent.html":{}}}],["entitiesservice",{"_index":523,"title":{"injectables/EntitiesService.html":{}},"body":{"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"modules/HomeModule.html":{},"coverage.html":{},"overview.html":{}}}],["entitiesstate",{"_index":387,"title":{"interfaces/EntitiesState.html":{}},"body":{"modules/AppModule.html":{},"interfaces/EntitiesState.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["entitiesstore",{"_index":748,"title":{},"body":{"components/HomePageComponent.html":{}}}],["entity",{"_index":761,"title":{},"body":{"components/HomePageComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["entity.country",{"_index":763,"title":{},"body":{"components/HomePageComponent.html":{}}}],["entity.currency",{"_index":764,"title":{},"body":{"components/HomePageComponent.html":{}}}],["entity.dateformat",{"_index":765,"title":{},"body":{"components/HomePageComponent.html":{}}}],["entity.deeperobject",{"_index":606,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["entity.email",{"_index":766,"title":{},"body":{"components/HomePageComponent.html":{}}}],["entity.guid",{"_index":587,"title":{},"body":{"interfaces/EntitiesState.html":{},"components/HomePageComponent.html":{}}}],["entityadapter",{"_index":582,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["entityinterface",{"_index":557,"title":{"interfaces/EntityInterface.html":{}},"body":{"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"components/HomePageComponent.html":{},"coverage.html":{}}}],["entitymap",{"_index":549,"title":{},"body":{"injectables/EntitiesEffects.html":{},"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["entitystate",{"_index":577,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{}}}],["enviroment",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/EntitiesService.html":{},"injectables/PushNotificationService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.apicookies",{"_index":574,"title":{},"body":{"injectables/EntitiesService.html":{},"injectables/PushNotificationService.html":{}}}],["environment.apiurl}entities",{"_index":573,"title":{},"body":{"injectables/EntitiesService.html":{}}}],["environment.apiurl}notifications",{"_index":1014,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["environment.notificationserver}subscription",{"_index":1012,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["environment.production",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.vapid_public",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["environments/environment",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/EntitiesService.html":{},"injectables/PushNotificationService.html":{}}}],["eram",{"_index":845,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["erat",{"_index":870,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["erectus",{"_index":849,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["eripe",{"_index":868,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":595,"title":{},"body":{"interfaces/EntitiesState.html":{},"components/ErrorPageComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["error.description",{"_index":660,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["error.heading",{"_index":659,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["errormessage",{"_index":534,"title":{},"body":{"injectables/EntitiesEffects.html":{},"interfaces/EntitiesState.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["errormodule",{"_index":284,"title":{"modules/ErrorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errorpagecomponent",{"_index":201,"title":{"components/ErrorPageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errors",{"_index":1466,"title":{},"body":{"index.html":{}}}],["es2015",{"_index":1261,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["es5",{"_index":1259,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eslint",{"_index":685,"title":{},"body":{"classes/GeneralHelper.html":{},"changelog.html":{}}}],["eslint/member",{"_index":689,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["eslint/semi",{"_index":688,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["est",{"_index":839,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["et",{"_index":842,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["et](http://thymo",{"_index":915,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["et](http://www.ingeniis",{"_index":929,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["eur",{"_index":832,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":708,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"interceptors/UniversalInterceptor.html":{},"license.html":{}}}],["event.body",{"_index":1065,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["event.urlafterredirects",{"_index":714,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["eventreplayer",{"_index":743,"title":{},"body":{"components/HomePageComponent.html":{}}}],["example",{"_index":976,"title":{},"body":{"interfaces/NotificationInterface.html":{},"injectables/RouterEffects.html":{},"classes/TranslateUniversalLoader.html":{},"changelog.html":{},"index.html":{}}}],["examples",{"_index":1545,"title":{},"body":{"index.html":{}}}],["execute",{"_index":1504,"title":{},"body":{"index.html":{}}}],["exist",{"_index":783,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["exit",{"_index":909,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["experience",{"_index":1106,"title":{},"body":{"changelog.html":{}}}],["export",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["exports",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["express",{"_index":1382,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extendable",{"_index":495,"title":{},"body":{"components/BaseComponent.html":{}}}],["extendedngondestroy",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["extendible",{"_index":1270,"title":{},"body":{"changelog.html":{}}}],["extends",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/EntitiesState.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/NotificationsState.html":{}}}],["extras",{"_index":1025,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["factory",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["fail",{"_index":1333,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["failed",{"_index":1523,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["fails",{"_index":1519,"title":{},"body":{"index.html":{}}}],["fallbacklanguage",{"_index":785,"title":{},"body":{"guards/LanguageGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":246,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"modules/AppRoutingModule.html":{},"interfaces/ApplicationState.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"interfaces/EntitiesState.html":{},"injectables/GoogleAnalyticsEffects.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"injectables/RouterEffects.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":1408,"title":{},"body":{"index.html":{}}}],["faster",{"_index":1105,"title":{},"body":{"changelog.html":{}}}],["fd8c",{"_index":827,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["features",{"_index":1075,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["femina",{"_index":841,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["ferrum",{"_index":865,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":674,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"unit-test.html":{}}}],["filename",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["files",{"_index":1243,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["filter",{"_index":721,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["filter((event",{"_index":707,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["finalize",{"_index":235,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{}}}],["first",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"changelog.html":{}}}],["firstchild",{"_index":815,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{}}}],["fitness",{"_index":1606,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1140,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fixed",{"_index":1236,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":1235,"title":{},"body":{"changelog.html":{}}}],["flatten",{"_index":670,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["flattened",{"_index":678,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["flattened[key",{"_index":684,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["flattenedmessage",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["flattensobject",{"_index":666,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["flebile",{"_index":933,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["flickering",{"_index":1197,"title":{},"body":{"changelog.html":{}}}],["folder",{"_index":1135,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["following",{"_index":1592,"title":{},"body":{"license.html":{}}}],["formae",{"_index":952,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["formidine",{"_index":903,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["forward",{"_index":1356,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":657,"title":{},"body":{"components/ErrorPageComponent.html":{},"index.html":{}}}],["fount",{"_index":1532,"title":{},"body":{"index.html":{}}}],["free",{"_index":1568,"title":{},"body":{"license.html":{}}}],["fromapplication",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["fromapplication.reducer",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["fromentities",{"_index":734,"title":{},"body":{"modules/HomeModule.html":{}}}],["fromentities.reducer",{"_index":739,"title":{},"body":{"modules/HomeModule.html":{}}}],["fromnotifications",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["fromnotifications.reducer",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["fromreducer.selectall",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fromrouter",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["fs",{"_index":1052,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["fs.readfilesync",{"_index":1056,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["fugiunt",{"_index":950,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["full",{"_index":446,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["function",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functionality",{"_index":550,"title":{},"body":{"injectables/EntitiesEffects.html":{},"interfaces/EntitiesState.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1396,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"unit-test.html":{}}}],["furnished",{"_index":1590,"title":{},"body":{"license.html":{}}}],["general",{"_index":663,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["generalhelper",{"_index":130,"title":{"classes/GeneralHelper.html":{}},"body":{"components/AppComponent.html":{},"classes/GeneralHelper.html":{},"coverage.html":{}}}],["generalhelper.datesort",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["generalhelper.flattensobject(message",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["generalhelper.flattensobject(obj[key",{"_index":683,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["generate",{"_index":1458,"title":{},"body":{"index.html":{}}}],["generation",{"_index":1428,"title":{},"body":{"index.html":{}}}],["getall",{"_index":566,"title":{},"body":{"injectables/EntitiesService.html":{}}}],["getdom",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["getdom().getdefaultdocument",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["getentities",{"_index":520,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["getinitialstate",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getmetareducers",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getmetareducers(savekeys",{"_index":1405,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getrouterinfo",{"_index":1359,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getrouterlanguage",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gets",{"_index":792,"title":{},"body":{"injectables/LocalStorageService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["getsavedstate",{"_index":793,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getsavedstate(localstoragekey",{"_index":796,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getting",{"_index":1066,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettranslation",{"_index":1044,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["gettranslation(lang",{"_index":1048,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["git",{"_index":1174,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["gitignore",{"_index":1137,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"classes/GeneralHelper.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"classes/TranslateUniversalLoader.html":{},"miscellaneous/functions.html":{}}}],["global.something",{"_index":535,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["go",{"_index":1357,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["google",{"_index":1434,"title":{},"body":{"index.html":{}}}],["googleanalytics",{"_index":701,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["googleanalyticseffects",{"_index":335,"title":{"injectables/GoogleAnalyticsEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/GoogleAnalyticsEffects.html":{},"coverage.html":{}}}],["granted",{"_index":1567,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1626,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":772,"title":{"guards/LanguageGuard.html":{}},"body":{"guards/LanguageGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":421,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["guard.service.ts",{"_index":775,"title":{},"body":{"guards/LanguageGuard.html":{},"coverage.html":{}}}],["guard.service.ts:17",{"_index":779,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["guard.service.ts:26",{"_index":782,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["guards",{"_index":773,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["guid",{"_index":625,"title":{},"body":{"interfaces/EntityInterface.html":{},"components/HomePageComponent.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["gzipped",{"_index":1477,"title":{},"body":{"index.html":{}}}],["haec",{"_index":867,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["handle",{"_index":1228,"title":{},"body":{"changelog.html":{}}}],["handle(request",{"_index":244,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{}}}],["handled",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["handling",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{}}}],["haut",{"_index":874,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["hello",{"_index":759,"title":{},"body":{"components/HomePageComponent.html":{}}}],["helper",{"_index":664,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["helpers/general.helper",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["herbis",{"_index":876,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["hereby",{"_index":1566,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1611,"title":{},"body":{"license.html":{}}}],["home",{"_index":741,"title":{},"body":{"components/HomePageComponent.html":{}}}],["homemodule",{"_index":723,"title":{"modules/HomeModule.html":{}},"body":{"modules/HomeModule.html":{},"modules.html":{},"overview.html":{}}}],["homepagecomponent",{"_index":202,"title":{"components/HomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["homeroutingmodule",{"_index":728,"title":{"modules/HomeRoutingModule.html":{}},"body":{"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["hooks",{"_index":1129,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["hot",{"_index":1449,"title":{},"body":{"index.html":{}}}],["html",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"index.html":{}}}],["htmldocument",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["http",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"injectables/EntitiesService.html":{},"injectables/PushNotificationService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["http_interceptors",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["httpclient",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"injectables/EntitiesService.html":{},"injectables/PushNotificationService.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":231,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{}}}],["httphandler",{"_index":224,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{}}}],["httpheaders",{"_index":570,"title":{},"body":{"injectables/EntitiesService.html":{},"injectables/PushNotificationService.html":{}}}],["httpinterceptor",{"_index":232,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["httprequest",{"_index":223,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{}}}],["httpresponse",{"_index":226,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"injectables/EntitiesEffects.html":{},"interceptors/UniversalInterceptor.html":{}}}],["https",{"_index":1456,"title":{},"body":{"index.html":{}}}],["https/http2",{"_index":1167,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["https://angular",{"_index":1555,"title":{},"body":{"index.html":{}}}],["https://angular.rickvandermeij.nl",{"_index":1554,"title":{},"body":{"index.html":{}}}],["https://localhost:4000",{"_index":1453,"title":{},"body":{"index.html":{}}}],["https://localhost:4000/api",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://localhost:4000/assets",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://localhost:4000/mocking",{"_index":1544,"title":{},"body":{"index.html":{}}}],["https://localhost:4000/notification",{"_index":1548,"title":{},"body":{"index.html":{}}}],["https://localhost:4000/v1",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://localhost:4202",{"_index":1448,"title":{},"body":{"index.html":{}}}],["https://localhost:8081",{"_index":1551,"title":{},"body":{"index.html":{}}}],["huc",{"_index":846,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["husky",{"_index":1127,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["i18n",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"classes/TranslateUniversalLoader.html":{},"miscellaneous/functions.html":{}}}],["id",{"_index":965,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1298,"title":{},"body":{"coverage.html":{}}}],["idomeneus",{"_index":875,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["ids",{"_index":960,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["ignore",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"injectables/LocalStorageService.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["ignored",{"_index":1136,"title":{},"body":{"changelog.html":{}}}],["illa",{"_index":936,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["image",{"_index":1170,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":1546,"title":{},"body":{"index.html":{}}}],["imago",{"_index":851,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["immediately",{"_index":74,"title":{},"body":{"components/AppComponent.html":{}}}],["imperat.\\r\\n",{"_index":931,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["implemented",{"_index":1196,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["implements",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppRoutingModule.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["implied",{"_index":1602,"title":{},"body":{"license.html":{}}}],["import",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["import('../pages/home/home.module').then",{"_index":443,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["important",{"_index":471,"title":{},"body":{"modules/AppServerModule.html":{}}}],["imports",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{}}}],["included",{"_index":1597,"title":{},"body":{"license.html":{}}}],["including",{"_index":1578,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":213,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/UniversalInterceptor.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"miscellaneous/variables.html":{}}}],["inherited",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["initalstate",{"_index":1406,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initial",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationState.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["initialize",{"_index":645,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["initialnavigation",{"_index":452,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["initialstate",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"modules/HomeModule.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initital",{"_index":824,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{}}}],["inject",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/LocalStorageService.html":{}}}],["inject(platform_id",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/LocalStorageService.html":{}}}],["inject(state_cb",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["injectable",{"_index":234,"title":{"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{}},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"injectables/GoogleAnalyticsEffects.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interceptors/UniversalInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":512,"title":{},"body":{"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"overview.html":{}}}],["injectiontoken",{"_index":580,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('appstorage",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('storekeys",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('to",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inline",{"_index":1107,"title":{},"body":{"changelog.html":{}}}],["inpetus\\r\\nlorem",{"_index":847,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["inpius",{"_index":856,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["inposita",{"_index":947,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":650,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["inside",{"_index":819,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["instance",{"_index":1142,"title":{},"body":{"changelog.html":{}}}],["instanceof",{"_index":709,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"interceptors/UniversalInterceptor.html":{}}}],["instantiated",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{}}}],["integer",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["integrates",{"_index":1202,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["intercept",{"_index":219,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{}}}],["intercept(req",{"_index":252,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{}}}],["intercept(request",{"_index":222,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{}}}],["interceptor",{"_index":208,"title":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{}},"body":{"modules/AppModule.html":{},"changelog.html":{},"coverage.html":{}}}],["interceptors",{"_index":210,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppServerModule.html":{},"interceptors/UniversalInterceptor.html":{}}}],["interceptors/http.interceptor",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["intercepts",{"_index":212,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{}}}],["interface",{"_index":473,"title":{"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"interfaces/RouterStateUrl.html":{}},"body":{"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"interfaces/RouterStateUrl.html":{},"coverage.html":{}}}],["interfaces",{"_index":474,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"interfaces/RouterStateUrl.html":{},"overview.html":{}}}],["internet",{"_index":1487,"title":{},"body":{"index.html":{}}}],["introduced",{"_index":1209,"title":{},"body":{"changelog.html":{}}}],["invoked",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["isloaded",{"_index":961,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["isloading",{"_index":578,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["iso",{"_index":762,"title":{},"body":{"components/HomePageComponent.html":{}}}],["ispendingrequest",{"_index":241,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interfaces/ApplicationState.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["isplatformbrowser",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/LocalStorageService.html":{}}}],["isplatformbrowser(platformid",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["isplatformbrowser(this.platformid",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/LocalStorageService.html":{}}}],["issue",{"_index":1237,"title":{},"body":{"changelog.html":{}}}],["issue(s",{"_index":1525,"title":{},"body":{"index.html":{}}}],["issues",{"_index":1254,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["istanbul",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"injectables/LocalStorageService.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["ita",{"_index":942,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["item",{"_index":585,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{}}}],["iuvat",{"_index":959,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["iuvenis",{"_index":843,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["ivy",{"_index":1184,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["java",{"_index":1147,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":1166,"title":{},"body":{"changelog.html":{}}}],["jest",{"_index":1104,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["js",{"_index":1380,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/LocalStorageService.html":{},"classes/TranslateUniversalLoader.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["json.parse",{"_index":1055,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["json.parse(json.stringify(state",{"_index":823,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{}}}],["json.parse(sessionstorage.getitem(localstoragekey",{"_index":811,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(state",{"_index":810,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["karma/jasmine",{"_index":1103,"title":{},"body":{"changelog.html":{}}}],["key",{"_index":800,"title":{},"body":{"injectables/LocalStorageService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["keys",{"_index":1160,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1601,"title":{},"body":{"license.html":{}}}],["known",{"_index":1524,"title":{},"body":{"index.html":{}}}],["lacertis",{"_index":881,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["lack",{"_index":552,"title":{},"body":{"injectables/EntitiesEffects.html":{},"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["lang",{"_index":1050,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["language",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"guards/LanguageGuard.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"classes/TranslateUniversalLoader.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["languageguard",{"_index":419,"title":{"guards/LanguageGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"guards/LanguageGuard.html":{},"coverage.html":{}}}],["languages",{"_index":786,"title":{},"body":{"guards/LanguageGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["languages.includes(next.params.language",{"_index":788,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["languageslabels",{"_index":1307,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["languagesregex",{"_index":1308,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["larger",{"_index":1484,"title":{},"body":{"index.html":{}}}],["lassant",{"_index":884,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["latest",{"_index":1078,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["lato",{"_index":905,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["lazy",{"_index":1424,"title":{},"body":{"index.html":{}}}],["legacy",{"_index":1421,"title":{},"body":{"index.html":{}}}],["legend",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/BaseComponent.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"overview.html":{}}}],["liability",{"_index":1615,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1612,"title":{},"body":{"license.html":{}}}],["license",{"_index":1557,"title":{"license.html":{}},"body":{"license.html":{}}}],["lifecycle",{"_index":1218,"title":{},"body":{"changelog.html":{}}}],["lighthouse",{"_index":1072,"title":{"additional-documentation/lighthouse-mobile-report.html":{},"additional-documentation/lighthouse-desktop-report.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["limitation",{"_index":1579,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1603,"title":{},"body":{"license.html":{}}}],["lines",{"_index":1631,"title":{},"body":{"unit-test.html":{}}}],["lint",{"_index":1496,"title":{},"body":{"index.html":{}}}],["linting",{"_index":1465,"title":{},"body":{"index.html":{}}}],["literal",{"_index":579,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"interfaces/NotificationsState.html":{}}}],["load",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/EntitiesEffects.html":{},"components/HomePageComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":442,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["loader",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["loadfail",{"_index":562,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["loading",{"_index":1257,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loadnotifications",{"_index":997,"title":{},"body":{"injectables/PushNotificationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadnotificationsfail",{"_index":1349,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadnotificationssuccess",{"_index":1350,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadsuccess",{"_index":561,"title":{},"body":{"injectables/EntitiesEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["local_storage_key",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localhost",{"_index":1455,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":799,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["localstoragekey",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/functions.html":{}}}],["localstorageservice",{"_index":318,"title":{"injectables/LocalStorageService.html":{}},"body":{"modules/AppModule.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["location",{"_index":1019,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["lock.json",{"_index":1246,"title":{},"body":{"changelog.html":{}}}],["locus",{"_index":853,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["lodash.merge",{"_index":1384,"title":{},"body":{"dependencies.html":{}}}],["lodash.pick",{"_index":1386,"title":{},"body":{"dependencies.html":{}}}],["lucum",{"_index":912,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["lumina",{"_index":935,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["lustrantem",{"_index":945,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":444,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["m.homemodule",{"_index":445,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["mac",{"_index":1440,"title":{},"body":{"index.html":{}}}],["make",{"_index":1161,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":1002,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["makestatekey",{"_index":256,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{}}}],["makestatekey(req.url",{"_index":263,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{}}}],["male",{"_index":838,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["management",{"_index":1115,"title":{},"body":{"changelog.html":{}}}],["manibus",{"_index":943,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["map",{"_index":545,"title":{},"body":{"injectables/EntitiesEffects.html":{},"injectables/RouterEffects.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["map((action",{"_index":1022,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["mapentities",{"_index":521,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["mapped",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mappedentities",{"_index":600,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["mappedentities.push",{"_index":604,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["mappedentities.push(entity",{"_index":608,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["mapsuccess",{"_index":547,"title":{},"body":{"injectables/EntitiesEffects.html":{},"interfaces/EntitiesState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["marbles",{"_index":1110,"title":{},"body":{"changelog.html":{}}}],["markdown",{"_index":626,"title":{},"body":{"interfaces/EntityInterface.html":{},"modules/HomeModule.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["markdownmodule",{"_index":730,"title":{},"body":{"modules/HomeModule.html":{}}}],["markdownmodule.forroot",{"_index":737,"title":{},"body":{"modules/HomeModule.html":{}}}],["markdownum",{"_index":848,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["marks",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{}}}],["matching",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{},"miscellaneous/variables.html":{},"additional-documentation/bundle-analytics.html":{},"additional-documentation/e2e-testing-report-(cucumber).html":{},"additional-documentation/lighthouse-mobile-report.html":{},"additional-documentation/lighthouse-desktop-report.html":{}}}],["mater",{"_index":948,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["means",{"_index":1464,"title":{},"body":{"index.html":{}}}],["media",{"_index":956,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["meij",{"_index":1564,"title":{},"body":{"license.html":{}}}],["meorum",{"_index":877,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1605,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1345,"title":{},"body":{"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":963,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":103,"title":{},"body":{"components/AppComponent.html":{}}}],["meta",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["metareducer",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["method",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["methods",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesService.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["migrate",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["mihi",{"_index":918,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1395,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1558,"title":{},"body":{"license.html":{}}}],["mm",{"_index":834,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":1716,"title":{"additional-documentation/lighthouse-mobile-report.html":{}},"body":{}}],["mock",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["mockactivestatesnapshot",{"_index":812,"title":{"interfaces/MockActiveStateSnapshot.html":{}},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"coverage.html":{}}}],["mocked",{"_index":816,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"index.html":{}}}],["mocking",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockrouterstatesnapshot",{"_index":817,"title":{"interfaces/MockRouterStateSnapshot.html":{}},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"coverage.html":{}}}],["mockserver",{"_index":1158,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mode",{"_index":1414,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["modern",{"_index":1420,"title":{},"body":{"index.html":{}}}],["modify",{"_index":1581,"title":{},"body":{"license.html":{}}}],["module",{"_index":270,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"overview.html":{}}}],["modules",{"_index":272,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/shared.module",{"_index":637,"title":{},"body":{"modules/ErrorModule.html":{},"modules/HomeModule.html":{}}}],["molior",{"_index":926,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1419,"title":{},"body":{"index.html":{}}}],["moved",{"_index":1109,"title":{},"body":{"changelog.html":{}}}],["moving",{"_index":1143,"title":{},"body":{"changelog.html":{}}}],["multi",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["multidimensional",{"_index":671,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["mutablesubscriptions",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["mutilatae\\r\\n",{"_index":949,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"miscellaneous/functions.html":{}}}],["natusque",{"_index":840,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["navigate",{"_index":1016,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["navigateback",{"_index":1017,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["navigateforward",{"_index":1018,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["navigationend",{"_index":710,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["navigationextras",{"_index":1034,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["ne",{"_index":882,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["nederlands",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":1457,"title":{},"body":{"index.html":{}}}],["needs",{"_index":1193,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["nestedaftermap",{"_index":627,"title":{},"body":{"interfaces/EntityInterface.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["nestedbeforemap",{"_index":628,"title":{},"body":{"interfaces/EntityInterface.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["network",{"_index":1491,"title":{},"body":{"index.html":{}}}],["new",{"_index":266,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"classes/GeneralHelper.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"injectables/PushNotificationService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["next.handle(req",{"_index":260,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{}}}],["next.handle(req).pipe",{"_index":1063,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["ng",{"_index":401,"title":{},"body":{"modules/AppModule.html":{}}}],["ngfactory",{"_index":1126,"title":{},"body":{"changelog.html":{}}}],["ngmodule",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngonchanges",{"_index":652,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["ngondestroy",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["ngoninit",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["ngrx",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/EntitiesEffects.html":{},"components/HomePageComponent.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ngrx.io",{"_index":1423,"title":{},"body":{"index.html":{}}}],["ngrx/effects",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"injectables/EntitiesEffects.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"injectables/RouterEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":583,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"interfaces/NotificationsState.html":{},"injectables/RouterEffects.html":{},"dependencies.html":{}}}],["ngrx/store/src/models",{"_index":560,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["nguniversal/express",{"_index":1373,"title":{},"body":{"dependencies.html":{}}}],["nguniversal/module",{"_index":1125,"title":{},"body":{"changelog.html":{}}}],["ngx",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/ErrorPageComponent.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["nisi",{"_index":954,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["nl",{"_index":831,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["nl\\/|\\/en",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node",{"_index":1470,"title":{},"body":{"index.html":{}}}],["nondum",{"_index":859,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":1609,"title":{},"body":{"license.html":{}}}],["normal",{"_index":1473,"title":{},"body":{"index.html":{}}}],["note",{"_index":546,"title":{},"body":{"injectables/EntitiesEffects.html":{},"interfaces/EntitiesState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nothing",{"_index":969,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["notice",{"_index":1595,"title":{},"body":{"license.html":{}}}],["notification",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["notificationactions",{"_index":981,"title":{},"body":{"interfaces/NotificationsState.html":{}}}],["notificationinterface",{"_index":101,"title":{"interfaces/NotificationInterface.html":{}},"body":{"components/AppComponent.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"coverage.html":{}}}],["notificationreducer",{"_index":984,"title":{},"body":{"interfaces/NotificationsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notificationreducer(state",{"_index":993,"title":{},"body":{"interfaces/NotificationsState.html":{}}}],["notifications",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["notifications.actions",{"_index":982,"title":{},"body":{"interfaces/NotificationsState.html":{}}}],["notifications.interface",{"_index":983,"title":{},"body":{"interfaces/NotificationsState.html":{}}}],["notifications.service",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["notifications.service.ts",{"_index":995,"title":{},"body":{"injectables/PushNotificationService.html":{},"coverage.html":{}}}],["notifications.service.ts:12",{"_index":1000,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["notifications.service.ts:20",{"_index":1009,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["notifications.service.ts:33",{"_index":1001,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["notifications.service.ts:65",{"_index":1005,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["notifications/push",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/PushNotificationService.html":{},"coverage.html":{}}}],["notificationserver",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notificationsstate",{"_index":979,"title":{"interfaces/NotificationsState.html":{}},"body":{"interfaces/NotificationsState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["notificationstate",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["novissima",{"_index":861,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["now",{"_index":1134,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":1271,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["null",{"_index":264,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"interfaces/EntitiesState.html":{},"classes/GeneralHelper.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":972,"title":{},"body":{"interfaces/NotificationInterface.html":{}}}],["numine",{"_index":917,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["nvm",{"_index":1469,"title":{},"body":{"index.html":{}}}],["nymphas",{"_index":857,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["obj",{"_index":672,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["obj[key",{"_index":681,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["object",{"_index":392,"title":{},"body":{"modules/AppModule.html":{},"classes/GeneralHelper.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign",{"_index":682,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["object.keys(obj).foreach((key",{"_index":679,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["observable",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"classes/TranslateUniversalLoader.html":{}}}],["observable.create((observer",{"_index":1053,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["observe",{"_index":575,"title":{},"body":{"injectables/EntitiesService.html":{},"injectables/PushNotificationService.html":{}}}],["observer.complete",{"_index":1059,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["observer.next",{"_index":1054,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["obsolete",{"_index":1152,"title":{},"body":{"changelog.html":{}}}],["obtaining",{"_index":1571,"title":{},"body":{"license.html":{}}}],["odorant",{"_index":958,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["oetaeus",{"_index":883,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["of(response",{"_index":269,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{}}}],["oftype",{"_index":554,"title":{},"body":{"injectables/EntitiesEffects.html":{},"injectables/RouterEffects.html":{}}}],["oftype(entitiesactions.load",{"_index":527,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["oftype(entitiesactions.map",{"_index":542,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["oftype(routeractions.back",{"_index":1028,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["oftype(routeractions.forward",{"_index":1031,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["oftype(routeractions.go",{"_index":1021,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["omnes",{"_index":937,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["on(actions.clearerror",{"_index":611,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["on(actions.fail",{"_index":610,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["on(actions.load",{"_index":593,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["on(actions.loadsuccess",{"_index":596,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["on(actions.mapsuccess",{"_index":599,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["on(applicationactions.setrequeststatus",{"_index":485,"title":{},"body":{"interfaces/ApplicationState.html":{},"miscellaneous/variables.html":{}}}],["on(notificationactions.addnotification",{"_index":987,"title":{},"body":{"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["on(notificationactions.clearnotifications",{"_index":989,"title":{},"body":{"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["on(notificationactions.loadnotificationssuccess",{"_index":985,"title":{},"body":{"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["once",{"_index":651,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["ondestroy",{"_index":497,"title":{},"body":{"components/BaseComponent.html":{}}}],["oninit",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"changelog.html":{}}}],["onsameurlnavigation",{"_index":453,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["optimization",{"_index":1536,"title":{},"body":{"index.html":{}}}],["option",{"_index":1285,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":1194,"title":{},"body":{"changelog.html":{}}}],["ossa",{"_index":889,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":1619,"title":{},"body":{"license.html":{}}}],["out",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1627,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1132,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":1172,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["packages",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":62,"title":{"additional-documentation/bundle-analytics.html":{},"additional-documentation/e2e-testing-report-(cucumber).html":{},"additional-documentation/lighthouse-mobile-report.html":{},"additional-documentation/lighthouse-desktop-report.html":{}},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{}}}],["page.component",{"_index":770,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["page.component.html",{"_index":640,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["page.component.ts",{"_index":639,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"coverage.html":{},"unit-test.html":{}}}],["page.component.ts:17",{"_index":643,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.ts:25",{"_index":653,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.ts:26",{"_index":747,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:27",{"_index":744,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:35",{"_index":644,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.ts:50",{"_index":746,"title":{},"body":{"components/HomePageComponent.html":{}}}],["pages",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{}}}],["pages/home/home",{"_index":769,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["pageview",{"_index":702,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["param",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["parameters",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/RouterStateUrl.html":{},"miscellaneous/variables.html":{}}}],["parientem",{"_index":925,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["pariter",{"_index":863,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["particular",{"_index":1607,"title":{},"body":{"license.html":{}}}],["partu",{"_index":873,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"modules/HomeRoutingModule.html":{},"injectables/RouterEffects.html":{},"changelog.html":{}}}],["pathmatch",{"_index":437,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["patruique",{"_index":920,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["peioris",{"_index":864,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["pending",{"_index":218,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interfaces/ApplicationState.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{}}}],["perfect",{"_index":1446,"title":{},"body":{"index.html":{}}}],["perform",{"_index":491,"title":{},"body":{"interfaces/ApplicationState.html":{},"miscellaneous/functions.html":{}}}],["performance",{"_index":1535,"title":{},"body":{"index.html":{}}}],["permission",{"_index":1565,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1588,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":777,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["person",{"_index":1570,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1589,"title":{},"body":{"license.html":{}}}],["pick",{"_index":1346,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":245,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{}}}],["pipeline",{"_index":1513,"title":{},"body":{"index.html":{}}}],["piscator",{"_index":953,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["place",{"_index":720,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"index.html":{}}}],["platform_id",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/LocalStorageService.html":{}}}],["platformid",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/LocalStorageService.html":{}}}],["plus",{"_index":1150,"title":{},"body":{"changelog.html":{}}}],["plus:browser",{"_index":1258,"title":{},"body":{"changelog.html":{}}}],["ponendi",{"_index":894,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["pops",{"_index":1086,"title":{},"body":{"changelog.html":{}}}],["port",{"_index":1543,"title":{},"body":{"index.html":{}}}],["portions",{"_index":1599,"title":{},"body":{"license.html":{}}}],["posito",{"_index":939,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["posse",{"_index":879,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["posset",{"_index":904,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["possible",{"_index":1162,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["post",{"_index":1007,"title":{},"body":{"injectables/PushNotificationService.html":{},"index.html":{}}}],["postquam",{"_index":922,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["powerful",{"_index":1411,"title":{},"body":{"index.html":{}}}],["prato",{"_index":906,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["pre",{"_index":1512,"title":{},"body":{"index.html":{}}}],["preboot",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"components/HomePageComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["prebootmodule",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["prebootmodule.withconfig",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["prefix",{"_index":438,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"classes/TranslateUniversalLoader.html":{}}}],["prerender",{"_index":1186,"title":{},"body":{"changelog.html":{}}}],["prerender.rickvandermeij.nl",{"_index":1556,"title":{},"body":{"index.html":{}}}],["prerender:build",{"_index":1478,"title":{},"body":{"index.html":{}}}],["prerendering",{"_index":1426,"title":{},"body":{"index.html":{}}}],["preset",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["prettifies",{"_index":974,"title":{},"body":{"interfaces/NotificationInterface.html":{}}}],["prettytimestamp",{"_index":971,"title":{},"body":{"interfaces/NotificationInterface.html":{}}}],["prevent",{"_index":403,"title":{},"body":{"modules/AppModule.html":{}}}],["preventing",{"_index":1415,"title":{},"body":{"index.html":{}}}],["previous",{"_index":1189,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"injectables/EntitiesEffects.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"injectables/RouterEffects.html":{},"classes/TranslateUniversalLoader.html":{}}}],["procnes\\r\\n",{"_index":844,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":1474,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":1430,"title":{},"body":{"index.html":{}}}],["project",{"_index":1480,"title":{},"body":{"index.html":{}}}],["projects",{"_index":1485,"title":{},"body":{"index.html":{}}}],["properties",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/EntitiesEffects.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{}}}],["props",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protected",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["protractor",{"_index":1263,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["provide",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"classes/TranslateUniversalLoader.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":825,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":258,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{}}}],["providers",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["provides",{"_index":564,"title":{},"body":{"injectables/EntitiesService.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"classes/TranslateUniversalLoader.html":{},"miscellaneous/variables.html":{}}}],["publish",{"_index":1582,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1608,"title":{},"body":{"license.html":{}}}],["push",{"_index":996,"title":{},"body":{"injectables/PushNotificationService.html":{},"changelog.html":{},"index.html":{}}}],["pushing",{"_index":1416,"title":{},"body":{"index.html":{}}}],["pushnotificationservice",{"_index":47,"title":{"injectables/PushNotificationService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/PushNotificationService.html":{},"coverage.html":{},"overview.html":{}}}],["pushservice",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["pushsubscription",{"_index":1008,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["pwa",{"_index":1429,"title":{},"body":{"index.html":{}}}],["q",{"_index":968,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["qua",{"_index":924,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["quae\\r\\n",{"_index":940,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["que.\\r\\n",{"_index":892,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":1024,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["queryparams",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"miscellaneous/variables.html":{}}}],["quickstart",{"_index":1267,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["quod",{"_index":887,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["quoque",{"_index":919,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":1418,"title":{},"body":{"index.html":{}}}],["readme.md",{"_index":1251,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["redirectto",{"_index":439,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["reducer",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ApplicationState.html":{},"interfaces/NotificationsState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":492,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"miscellaneous/functions.html":{}}}],["reducertoken",{"_index":618,"title":{},"body":{"interfaces/EntitiesState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":454,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["reloading",{"_index":1450,"title":{},"body":{"index.html":{}}}],["remove",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{},"index.html":{}}}],["removed",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":1291,"title":{},"body":{"changelog.html":{}}}],["rendered",{"_index":1219,"title":{},"body":{"changelog.html":{}}}],["rendering",{"_index":1240,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["replayer",{"_index":745,"title":{},"body":{"components/HomePageComponent.html":{}}}],["reply@domein.nl",{"_index":837,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["report",{"_index":1074,"title":{"additional-documentation/e2e-testing-report-(cucumber).html":{},"additional-documentation/lighthouse-mobile-report.html":{},"additional-documentation/lighthouse-desktop-report.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["reporter",{"_index":1435,"title":{},"body":{"index.html":{}}}],["reports",{"_index":1133,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["reports/coverage",{"_index":1515,"title":{},"body":{"index.html":{}}}],["reports/e2e/report",{"_index":1518,"title":{},"body":{"index.html":{}}}],["representing",{"_index":654,"title":{},"body":{"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"components/HomePageComponent.html":{},"interfaces/NotificationInterface.html":{}}}],["represents",{"_index":479,"title":{},"body":{"interfaces/ApplicationState.html":{},"injectables/EntitiesEffects.html":{},"interfaces/NotificationInterface.html":{}}}],["req",{"_index":255,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{}}}],["req.method",{"_index":259,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{}}}],["request",{"_index":217,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{},"miscellaneous/variables.html":{}}}],["requestsubscription",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["require('../../package.json').version",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('lodash.merge",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('lodash.pick",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1461,"title":{},"body":{"index.html":{}}}],["requires",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"overview.html":{}}}],["response",{"_index":265,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"injectables/PushNotificationService.html":{}}}],["response.body.data",{"_index":531,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["restriction",{"_index":1577,"title":{},"body":{"license.html":{}}}],["result",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{},"miscellaneous/variables.html":{},"additional-documentation/bundle-analytics.html":{},"additional-documentation/e2e-testing-report-(cucumber).html":{},"additional-documentation/lighthouse-mobile-report.html":{},"additional-documentation/lighthouse-desktop-report.html":{}}}],["results",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"unit-test.html":{},"miscellaneous/variables.html":{},"additional-documentation/bundle-analytics.html":{},"additional-documentation/e2e-testing-report-(cucumber).html":{},"additional-documentation/lighthouse-mobile-report.html":{},"additional-documentation/lighthouse-desktop-report.html":{}}}],["retrieves",{"_index":798,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["return",{"_index":243,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"classes/GeneralHelper.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppRoutingModule.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesService.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"miscellaneous/functions.html":{}}}],["revert",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["rick",{"_index":1561,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1580,"title":{},"body":{"license.html":{}}}],["root",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{}}}],["root'},{'name",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["route",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"guards/LanguageGuard.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"injectables/RouterEffects.html":{},"miscellaneous/variables.html":{}}}],["route.firstchild",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["router",{"_index":704,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"guards/LanguageGuard.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"miscellaneous/variables.html":{}}}],["routeractions",{"_index":1035,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["routereffects",{"_index":330,"title":{"injectables/RouterEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/RouterEffects.html":{},"coverage.html":{}}}],["routerlanguage",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["routermodule",{"_index":414,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"modules/HomeRoutingModule.html":{},"modules/SharedModule.html":{}}}],["routermodule.forchild(routes",{"_index":771,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["routermodule.forroot(approutes",{"_index":450,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["routerreducer",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["routerselector",{"_index":107,"title":{},"body":{"components/AppComponent.html":{}}}],["routerstate",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"guards/LanguageGuard.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["routerstate.root",{"_index":429,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["routerstateserializer",{"_index":417,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["routerstatesnapshot",{"_index":415,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"guards/LanguageGuard.html":{}}}],["routerstateurl",{"_index":422,"title":{"interfaces/RouterStateUrl.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"interfaces/RouterStateUrl.html":{},"coverage.html":{}}}],["routes",{"_index":334,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"modules/HomeModule.html":{},"modules/HomeRoutingModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["routes/guards/language",{"_index":420,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["routeswithlanguages",{"_index":1319,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing.module.ts",{"_index":413,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"coverage.html":{}}}],["routing.module.ts:22",{"_index":513,"title":{},"body":{"injectables/CustomSerializer.html":{}}}],["routing.ts",{"_index":768,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["run",{"_index":1272,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["runguardsandresolvers",{"_index":448,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["runners",{"_index":1108,"title":{},"body":{"changelog.html":{}}}],["running",{"_index":1454,"title":{},"body":{"index.html":{}}}],["runs",{"_index":1498,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"components/BaseComponent.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"classes/TranslateUniversalLoader.html":{},"changelog.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":236,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"injectables/EntitiesEffects.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/RouterEffects.html":{},"interceptors/UniversalInterceptor.html":{}}}],["saepe",{"_index":896,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["sample",{"_index":1531,"title":{},"body":{"index.html":{}}}],["save",{"_index":229,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"injectables/LocalStorageService.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["savekeys",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["scenario",{"_index":1522,"title":{},"body":{"index.html":{}}}],["schemas",{"_index":634,"title":{},"body":{"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{}}}],["score",{"_index":1447,"title":{},"body":{"index.html":{}}}],["screenshot",{"_index":1520,"title":{},"body":{"index.html":{}}}],["script",{"_index":1506,"title":{},"body":{"index.html":{}}}],["scripts",{"_index":409,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["see",{"_index":1230,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["seem",{"_index":1176,"title":{},"body":{"changelog.html":{}}}],["seems",{"_index":1151,"title":{},"body":{"changelog.html":{}}}],["select",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{}}}],["select(entitiesselectors.selectallentities",{"_index":754,"title":{},"body":{"components/HomePageComponent.html":{}}}],["select(fromrouter.getrouterlanguage",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["selectall",{"_index":615,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["selectallentities",{"_index":1339,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectallnotifications",{"_index":1353,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selectedentity",{"_index":598,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["selectentities",{"_index":614,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["selectfeature",{"_index":1329,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectguid",{"_index":590,"title":{},"body":{"interfaces/EntitiesState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["selectguid(entity",{"_index":586,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/functions.html":{}}}],["selectid",{"_index":589,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["selectids",{"_index":613,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{},"miscellaneous/variables.html":{}}}],["selectismakingrequest",{"_index":1330,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectloading",{"_index":1340,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["selectreducerstate",{"_index":1360,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectstandardentities",{"_index":1341,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectstandardids",{"_index":1342,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selecttotal",{"_index":616,"title":{},"body":{"interfaces/EntitiesState.html":{},"interfaces/NotificationsState.html":{}}}],["sell",{"_index":1586,"title":{},"body":{"license.html":{}}}],["send",{"_index":1006,"title":{},"body":{"injectables/PushNotificationService.html":{},"miscellaneous/variables.html":{}}}],["sendnotification",{"_index":998,"title":{},"body":{"injectables/PushNotificationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sendnotification(notification",{"_index":1004,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["sendsubscriptiontotheserver",{"_index":999,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["sendsubscriptiontotheserver(subscription",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"injectables/PushNotificationService.html":{}}}],["sent",{"_index":975,"title":{},"body":{"interfaces/NotificationInterface.html":{}}}],["seo",{"_index":1427,"title":{},"body":{"index.html":{}}}],["seperated",{"_index":1171,"title":{},"body":{"changelog.html":{}}}],["serialize",{"_index":426,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["serialize(routerstate",{"_index":428,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["serializer",{"_index":424,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["servavique",{"_index":901,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["serve",{"_index":1444,"title":{},"body":{"index.html":{}}}],["served",{"_index":1168,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/GoogleAnalyticsEffects.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["server.ts",{"_index":1188,"title":{},"body":{"changelog.html":{}}}],["server:mock",{"_index":1286,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["server:mock:prod",{"_index":1552,"title":{},"body":{"index.html":{}}}],["serverapp",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["servermodule",{"_index":463,"title":{},"body":{"modules/AppServerModule.html":{}}}],["serverpublickey",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["servertransferstatemodule",{"_index":464,"title":{},"body":{"modules/AppServerModule.html":{}}}],["servet",{"_index":898,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"injectables/EntitiesService.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/PushNotificationService.html":{},"changelog.html":{},"index.html":{}}}],["services",{"_index":1220,"title":{},"body":{"changelog.html":{}}}],["services/entities/entities.service",{"_index":555,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["services/local",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["services/push",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["serviceworkermodule",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["serving",{"_index":1242,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sessionstorage.setitem(localstoragekey",{"_index":809,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["set",{"_index":254,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["setall",{"_index":1096,"title":{},"body":{"changelog.html":{}}}],["setrequeststatus",{"_index":237,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sets",{"_index":648,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"miscellaneous/functions.html":{}}}],["setsavedstate",{"_index":794,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setsavedstate(state",{"_index":801,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["settimeout",{"_index":410,"title":{},"body":{"modules/AppModule.html":{}}}],["setup",{"_index":1542,"title":{},"body":{"index.html":{}}}],["shall",{"_index":1596,"title":{},"body":{"license.html":{}}}],["sharedmodule",{"_index":632,"title":{"modules/SharedModule.html":{}},"body":{"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["show",{"_index":1289,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":1517,"title":{},"body":{"index.html":{}}}],["si",{"_index":946,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":1239,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["simul.net/neritius",{"_index":916,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["single",{"_index":1501,"title":{},"body":{"index.html":{}}}],["sistitur",{"_index":895,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["sites",{"_index":1553,"title":{},"body":{"index.html":{}}}],["skip",{"_index":1277,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":1490,"title":{},"body":{"index.html":{}}}],["slower",{"_index":1486,"title":{},"body":{"index.html":{}}}],["smells",{"_index":1204,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1573,"title":{},"body":{"license.html":{}}}],["sollicitis",{"_index":921,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["sonarcloud",{"_index":1141,"title":{},"body":{"changelog.html":{}}}],["sort",{"_index":668,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["sort(data",{"_index":676,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"modules/ErrorModule.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"modules/HomeModule.html":{},"components/HomePageComponent.html":{},"modules/HomeRoutingModule.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{}}}],["spoliis",{"_index":900,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1398,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.server.module.ts",{"_index":1404,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.tokens.ts",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../application.actions.ts",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../application.reducer.ts",{"_index":1400,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../application.selectors.ts",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../entities.actions.ts",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../entities.reducer.ts",{"_index":1402,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../entities.selectors.ts",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.mock.ts",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../globals.ts",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mock",{"_index":1397,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../notifications.actions.ts",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../notifications.reducer.ts",{"_index":1401,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../notifications.selectors.ts",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../router.actions.ts",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../router.selectors.ts",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../static.paths.ts",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../storage.metareducer.ts",{"_index":1403,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../tokens.ts",{"_index":1399,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:38",{"_index":106,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:42",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:58",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:59",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:60",{"_index":109,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:61",{"_index":110,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:62",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:75",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.server.module.ts",{"_index":462,"title":{},"body":{"modules/AppServerModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/components/base/base.component.ts",{"_index":494,"title":{},"body":{"components/BaseComponent.html":{},"coverage.html":{}}}],["src/app/components/base/base.component.ts:15",{"_index":503,"title":{},"body":{"components/BaseComponent.html":{}}}],["src/app/components/base/base.component.ts:23",{"_index":499,"title":{},"body":{"components/BaseComponent.html":{}}}],["src/app/components/base/base.component.ts:32",{"_index":502,"title":{},"body":{"components/BaseComponent.html":{}}}],["src/app/components/base/base.component.ts:42",{"_index":500,"title":{},"body":{"components/BaseComponent.html":{}}}],["src/app/components/base/base.component.ts:47",{"_index":501,"title":{},"body":{"components/BaseComponent.html":{}}}],["src/app/globals.ts",{"_index":1304,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/helpers/general.helper.ts",{"_index":662,"title":{},"body":{"classes/GeneralHelper.html":{},"coverage.html":{}}}],["src/app/helpers/general.helper.ts:10",{"_index":669,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["src/app/helpers/general.helper.ts:34",{"_index":677,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["src/app/helpers/general.helper.ts:46",{"_index":675,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["src/app/interceptors/http.interceptor.ts",{"_index":211,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"coverage.html":{}}}],["src/app/interceptors/http.interceptor.ts:18",{"_index":221,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{}}}],["src/app/interceptors/http.interceptor.ts:27",{"_index":225,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{}}}],["src/app/modules/shared.module.ts",{"_index":1039,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/pages/error/error",{"_index":638,"title":{},"body":{"components/ErrorPageComponent.html":{},"coverage.html":{}}}],["src/app/pages/error/error.module.ts",{"_index":633,"title":{},"body":{"modules/ErrorModule.html":{}}}],["src/app/pages/home/home",{"_index":740,"title":{},"body":{"components/HomePageComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":729,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/routes/app",{"_index":412,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"coverage.html":{}}}],["src/app/routes/effects/google",{"_index":699,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"coverage.html":{}}}],["src/app/routes/guards/language",{"_index":774,"title":{},"body":{"guards/LanguageGuard.html":{},"coverage.html":{}}}],["src/app/routes/home/home",{"_index":767,"title":{},"body":{"modules/HomeRoutingModule.html":{}}}],["src/app/routes/static.paths.ts",{"_index":1318,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/entities/entities.service.ts",{"_index":563,"title":{},"body":{"injectables/EntitiesService.html":{},"coverage.html":{}}}],["src/app/services/entities/entities.service.ts:12",{"_index":568,"title":{},"body":{"injectables/EntitiesService.html":{}}}],["src/app/services/entities/entities.service.ts:19",{"_index":569,"title":{},"body":{"injectables/EntitiesService.html":{}}}],["src/app/services/local",{"_index":790,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["src/app/services/push",{"_index":994,"title":{},"body":{"injectables/PushNotificationService.html":{},"coverage.html":{}}}],["src/app/ssr/app.interceptor.ts",{"_index":248,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"coverage.html":{}}}],["src/app/ssr/app.interceptor.ts:16",{"_index":251,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{}}}],["src/app/ssr/app.interceptor.ts:26",{"_index":253,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{}}}],["src/app/ssr/http.interceptor.ts",{"_index":1060,"title":{},"body":{"interceptors/UniversalInterceptor.html":{},"coverage.html":{}}}],["src/app/ssr/http.interceptor.ts:16",{"_index":1061,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["src/app/ssr/http.interceptor.ts:25",{"_index":1062,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["src/app/ssr/tokens.ts",{"_index":1326,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/ssr/translate.loader.ts",{"_index":1042,"title":{},"body":{"classes/TranslateUniversalLoader.html":{},"coverage.html":{}}}],["src/app/ssr/translate.loader.ts:12",{"_index":1047,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["src/app/ssr/translate.loader.ts:23",{"_index":1049,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["src/app/store/application/application.actions.ts",{"_index":1327,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/application/application.reducer.ts",{"_index":475,"title":{},"body":{"interfaces/ApplicationState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/application/application.selectors.ts",{"_index":1328,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/entities/entities.actions.ts",{"_index":1331,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/entities/entities.effects.ts",{"_index":515,"title":{},"body":{"injectables/EntitiesEffects.html":{},"coverage.html":{}}}],["src/app/store/entities/entities.effects.ts:17",{"_index":524,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["src/app/store/entities/entities.effects.ts:27",{"_index":539,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["src/app/store/entities/entities.effects.ts:66",{"_index":544,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["src/app/store/entities/entities.interface.ts",{"_index":620,"title":{},"body":{"interfaces/EntityInterface.html":{},"coverage.html":{}}}],["src/app/store/entities/entities.reducer.ts",{"_index":576,"title":{},"body":{"interfaces/EntitiesState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/entities/entities.selectors.ts",{"_index":1338,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/meta/app.tokens.ts",{"_index":1343,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/meta/storage.metareducer.ts",{"_index":1344,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/notifications/notifications.actions.ts",{"_index":1347,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/notifications/notifications.interface.ts",{"_index":970,"title":{},"body":{"interfaces/NotificationInterface.html":{},"coverage.html":{}}}],["src/app/store/notifications/notifications.reducer.ts",{"_index":980,"title":{},"body":{"interfaces/NotificationsState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/notifications/notifications.selectors.ts",{"_index":1352,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/router/router.actions.ts",{"_index":1354,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/router/router.effects.ts",{"_index":1015,"title":{},"body":{"injectables/RouterEffects.html":{},"coverage.html":{}}}],["src/app/store/router/router.effects.ts:16",{"_index":1020,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/store/router/router.effects.ts:26",{"_index":1027,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/store/router/router.effects.ts:54",{"_index":1030,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/store/router/router.effects.ts:66",{"_index":1033,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/store/router/router.interface.ts",{"_index":1037,"title":{},"body":{"interfaces/RouterStateUrl.html":{},"coverage.html":{}}}],["src/app/store/router/router.selectors.ts",{"_index":1358,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/testing/mock",{"_index":813,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/testing/mocks.spec.ts",{"_index":1293,"title":{},"body":{"changelog.html":{}}}],["src/environments/environment.mock.ts",{"_index":1362,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1363,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1364,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssg",{"_index":1199,"title":{},"body":{"changelog.html":{}}}],["ssl",{"_index":1443,"title":{},"body":{"index.html":{}}}],["ssr",{"_index":658,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"classes/TranslateUniversalLoader.html":{},"changelog.html":{},"index.html":{}}}],["ssr/app.interceptor",{"_index":339,"title":{},"body":{"modules/AppModule.html":{}}}],["ssr/http.interceptor",{"_index":466,"title":{},"body":{"modules/AppServerModule.html":{}}}],["ssr/tokens",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["ssr/translate.loader",{"_index":468,"title":{},"body":{"modules/AppServerModule.html":{}}}],["ssr:build",{"_index":1479,"title":{},"body":{"index.html":{}}}],["stability",{"_index":1181,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":1472,"title":{},"body":{"index.html":{}}}],["start",{"_index":1273,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["start:clean",{"_index":1442,"title":{},"body":{"index.html":{}}}],["start:dist",{"_index":1550,"title":{},"body":{"index.html":{}}}],["start:mock",{"_index":1451,"title":{},"body":{"index.html":{}}}],["start:prerender",{"_index":1495,"title":{},"body":{"index.html":{}}}],["start:ssr",{"_index":1493,"title":{},"body":{"index.html":{}}}],["started",{"_index":1067,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["starterkit",{"_index":1410,"title":{},"body":{"index.html":{}}}],["starterkit/src/app/interceptors/http.interceptor.ts",{"_index":1633,"title":{},"body":{"unit-test.html":{}}}],["starterkit/src/app/pages/home/home",{"_index":1637,"title":{},"body":{"unit-test.html":{}}}],["starterkit/src/app/services/entities/entities.service.ts",{"_index":1640,"title":{},"body":{"unit-test.html":{}}}],["starterkit/src/app/ssr/tokens.ts",{"_index":1642,"title":{},"body":{"unit-test.html":{}}}],["starterkit/src/app/store/application/application.actions.ts",{"_index":1644,"title":{},"body":{"unit-test.html":{}}}],["starterkit/src/app/store/entities/entities.actions.ts",{"_index":1645,"title":{},"body":{"unit-test.html":{}}}],["starterkit/src/app/store/entities/entities.effects.ts",{"_index":1646,"title":{},"body":{"unit-test.html":{}}}],["starterkit/src/app/store/entities/entities.selectors.ts",{"_index":1649,"title":{},"body":{"unit-test.html":{}}}],["starterkit/src/environments/environment.ts",{"_index":1650,"title":{},"body":{"unit-test.html":{}}}],["state",{"_index":477,"title":{},"body":{"interfaces/ApplicationState.html":{},"interfaces/EntitiesState.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"interfaces/RouterStateUrl.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["state.entities[entity.guid",{"_index":603,"title":{},"body":{"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["state.isloading",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.ispendingrequest",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.params",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.params.language",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.state",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state_cb",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":1299,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["state|undefined",{"_index":991,"title":{},"body":{"interfaces/NotificationsState.html":{}}}],["static",{"_index":665,"title":{},"body":{"classes/GeneralHelper.html":{},"index.html":{}}}],["stats",{"_index":1281,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["status",{"_index":230,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["steps",{"_index":1275,"title":{},"body":{"changelog.html":{}}}],["storage.service",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["storage.service.ts",{"_index":791,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:16",{"_index":802,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:27",{"_index":797,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:8",{"_index":795,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:9",{"_index":807,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage_keys",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storagemetareducer",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["storagemetareducer(savekeys",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["storageservice",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["store",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ApplicationState.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"components/HomePageComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationsState.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["store.ts",{"_index":814,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["store/application/application.actions",{"_index":238,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{}}}],["store/application/application.reducer",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["store/entities/entities.actions",{"_index":749,"title":{},"body":{"components/HomePageComponent.html":{}}}],["store/entities/entities.interface",{"_index":750,"title":{},"body":{"components/HomePageComponent.html":{}}}],["store/entities/entities.selectors",{"_index":752,"title":{},"body":{"components/HomePageComponent.html":{}}}],["store/meta/app.tokens",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["store/meta/storage.metareducer",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["store/notifications/notifications.actions",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["store/notifications/notifications.interface",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"injectables/PushNotificationService.html":{}}}],["store/notifications/notifications.reducer",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["store/router/router.actions",{"_index":1036,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["store/router/router.effects",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["store/router/router.interface",{"_index":423,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["store/router/router.selectors",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["storedevtoolsmodule",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["storedresponse",{"_index":261,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{}}}],["storemodule",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{}}}],["storemodule.forfeature('entitiesstate",{"_index":738,"title":{},"body":{"modules/HomeModule.html":{}}}],["storemodule.forroot",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["storerouterconnectingmodule",{"_index":418,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":455,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{}}}],["stores",{"_index":803,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["strict",{"_index":1413,"title":{},"body":{"index.html":{}}}],["stricter",{"_index":1206,"title":{},"body":{"changelog.html":{}}}],["string",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor-1.html":{},"modules/AppModule.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"interfaces/RouterStateUrl.html":{},"classes/TranslateUniversalLoader.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":691,"title":{},"body":{"classes/GeneralHelper.html":{},"index.html":{}}}],["styles",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["styles.foreach((el",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["subject",{"_index":1591,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1584,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["subscription",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"injectables/PushNotificationService.html":{}}}],["subscription.unsubscribe",{"_index":509,"title":{},"body":{"components/BaseComponent.html":{}}}],["subscription['isunsubscribed",{"_index":508,"title":{},"body":{"components/BaseComponent.html":{}}}],["subscriptions",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["substantial",{"_index":1598,"title":{},"body":{"license.html":{}}}],["succeeds",{"_index":1467,"title":{},"body":{"index.html":{}}}],["succesfull",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["success",{"_index":967,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"miscellaneous/variables.html":{}}}],["suffix",{"_index":1046,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["super",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["support",{"_index":1623,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":1148,"title":{},"body":{"changelog.html":{}}}],["svg",{"_index":1624,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":528,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["swpush",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["swupdate",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["table",{"_index":1366,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1365,"title":{},"body":{"coverage.html":{},"unit-test.html":{}}}],["tag",{"_index":1278,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":719,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["tangam.io/eloquitur.php",{"_index":930,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["tap",{"_index":722,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"injectables/RouterEffects.html":{},"interceptors/UniversalInterceptor.html":{}}}],["tap((event",{"_index":711,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"interceptors/UniversalInterceptor.html":{}}}],["tela",{"_index":934,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["test",{"_index":964,"title":{"unit-test.html":{}},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"changelog.html":{},"index.html":{},"unit-test.html":{},"miscellaneous/variables.html":{}}}],["test:ci",{"_index":1500,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1502,"title":{},"body":{"index.html":{}}}],["test:e2e:fix",{"_index":1527,"title":{},"body":{"index.html":{}}}],["tested",{"_index":1549,"title":{},"body":{"index.html":{}}}],["testing",{"_index":553,"title":{"additional-documentation/e2e-testing-report-(cucumber).html":{}},"body":{"injectables/EntitiesEffects.html":{},"interfaces/EntitiesState.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tests",{"_index":820,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["testscheduler",{"_index":1112,"title":{},"body":{"changelog.html":{}}}],["then((subscription",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["this._statecb",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["this._statecb(state",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["this.actions$.pipe",{"_index":526,"title":{},"body":{"injectables/EntitiesEffects.html":{},"injectables/RouterEffects.html":{}}}],["this.addsubscription",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{}}}],["this.cd.markforcheck",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["this.entities",{"_index":753,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.entities$.subscribe((entities",{"_index":757,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.entitiesservice.getall().pipe",{"_index":529,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["this.extendedngondestroy",{"_index":511,"title":{},"body":{"components/BaseComponent.html":{}}}],["this.http.get",{"_index":572,"title":{},"body":{"injectables/EntitiesService.html":{}}}],["this.http.get(`${environment.apiurl}notifications",{"_index":1013,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["this.http.post",{"_index":1011,"title":{},"body":{"injectables/PushNotificationService.html":{}}}],["this.location.back",{"_index":1029,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["this.location.forward",{"_index":1032,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["this.mutablesubscriptions.foreach",{"_index":507,"title":{},"body":{"components/BaseComponent.html":{}}}],["this.mutablesubscriptions.push(subscription",{"_index":506,"title":{},"body":{"components/BaseComponent.html":{}}}],["this.notifications",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["this.notifications.push(flattenedmessage",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["this.prefix}/${lang}${this.suffix",{"_index":1057,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["this.pushservice",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["this.replayer.replayall",{"_index":758,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.router.events.pipe",{"_index":706,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["this.router.navigate(path",{"_index":1026,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["this.router.parseurl(`${fallbacklanguage}/404",{"_index":789,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["this.routerlanguage",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["this.routerlanguage$.subscribe((language",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{}}}],["this.store.dispatch(load",{"_index":756,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.store.dispatch(setrequeststatus",{"_index":240,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{}}}],["this.store.pipe",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/HomePageComponent.html":{}}}],["this.store.subscribe((state",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["this.swpush",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["this.swpush.isenabled",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["this.swpush.messages.subscribe((message",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this.swupdate.available.subscribe",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["this.swupdate.isenabled",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["this.title.settitle('404",{"_index":656,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["this.title.settitle('homepage",{"_index":755,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.transferstate.get",{"_index":262,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{}}}],["this.transferstate.set(makestatekey(req.url",{"_index":1064,"title":{},"body":{"interceptors/UniversalInterceptor.html":{}}}],["this.translate.use('en",{"_index":655,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["this.translate.use(language",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["this.unsubscribeall",{"_index":510,"title":{},"body":{"components/BaseComponent.html":{}}}],["through",{"_index":1547,"title":{},"body":{"index.html":{}}}],["time",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["timestamp",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"miscellaneous/variables.html":{}}}],["tinguamus",{"_index":944,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":642,"title":{},"body":{"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"injectables/PushNotificationService.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":1618,"title":{},"body":{"license.html":{}}}],["transferstate",{"_index":250,"title":{},"body":{"interceptors/AppHttpInterceptor-1.html":{},"interceptors/UniversalInterceptor.html":{}}}],["transferstatekey",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["transition",{"_index":398,"title":{},"body":{"modules/AppModule.html":{}}}],["translate",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"classes/TranslateUniversalLoader.html":{},"index.html":{}}}],["translate/core",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"components/ErrorPageComponent.html":{},"modules/SharedModule.html":{},"classes/TranslateUniversalLoader.html":{},"dependencies.html":{}}}],["translate/http",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["translatehttploader(http",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"classes/TranslateUniversalLoader.html":{}}}],["translatemodule",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/SharedModule.html":{}}}],["translatemodule.forchild",{"_index":1041,"title":{},"body":{"modules/SharedModule.html":{}}}],["translatemodule.forroot",{"_index":381,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["translateservice",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ErrorPageComponent.html":{},"miscellaneous/functions.html":{}}}],["translateuniversalloader",{"_index":467,"title":{"classes/TranslateUniversalLoader.html":{}},"body":{"modules/AppServerModule.html":{},"classes/TranslateUniversalLoader.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["translateuniversalloader('dist/browser/assets/i18n",{"_index":470,"title":{},"body":{"modules/AppServerModule.html":{}}}],["translateuniversalservice",{"_index":469,"title":{},"body":{"modules/AppServerModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["translations",{"_index":1043,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["travis",{"_index":1139,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["trigger",{"_index":517,"title":{},"body":{"injectables/EntitiesEffects.html":{},"injectables/GoogleAnalyticsEffects.html":{}}}],["triggered",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"injectables/EntitiesEffects.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"injectables/RouterEffects.html":{}}}],["triplicesque\\r\\n*de",{"_index":897,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":242,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"interfaces/EntitiesState.html":{},"injectables/GoogleAnalyticsEffects.html":{},"guards/LanguageGuard.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"injectables/RouterEffects.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["trusty",{"_index":1145,"title":{},"body":{"changelog.html":{}}}],["try",{"_index":1528,"title":{},"body":{"index.html":{}}}],["tsconfig",{"_index":1192,"title":{},"body":{"changelog.html":{}}}],["tslib",{"_index":1391,"title":{},"body":{"dependencies.html":{}}}],["tslint",{"_index":1119,"title":{},"body":{"changelog.html":{}}}],["tu",{"_index":858,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AppHttpInterceptor.html":{},"interceptors/AppHttpInterceptor-1.html":{},"interfaces/ApplicationState.html":{},"components/BaseComponent.html":{},"injectables/CustomSerializer.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"interfaces/EntityInterface.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"guards/LanguageGuard.html":{},"injectables/LocalStorageService.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/NotificationInterface.html":{},"interfaces/NotificationsState.html":{},"injectables/PushNotificationService.html":{},"injectables/RouterEffects.html":{},"interfaces/RouterStateUrl.html":{},"classes/TranslateUniversalLoader.html":{},"interceptors/UniversalInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typedaction",{"_index":559,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["typeof",{"_index":680,"title":{},"body":{"classes/GeneralHelper.html":{}}}],["typescript",{"_index":687,"title":{},"body":{"classes/GeneralHelper.html":{},"changelog.html":{},"index.html":{}}}],["uh61qyk",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui",{"_index":498,"title":{},"body":{"components/BaseComponent.html":{}}}],["undefined",{"_index":992,"title":{},"body":{"interfaces/NotificationsState.html":{}}}],["understanding",{"_index":1248,"title":{},"body":{"changelog.html":{}}}],["unique",{"_index":973,"title":{},"body":{"interfaces/NotificationInterface.html":{}}}],["unit",{"_index":1180,"title":{"unit-test.html":{}},"body":{"changelog.html":{},"index.html":{},"unit-test.html":{}}}],["universalinterceptor",{"_index":461,"title":{"interceptors/UniversalInterceptor.html":{}},"body":{"modules/AppServerModule.html":{},"interceptors/UniversalInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["unknown",{"_index":821,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"changelog.html":{}}}],["unsubscribe",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["unsubscribeall",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["untested",{"_index":1417,"title":{},"body":{"index.html":{}}}],["up",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":1250,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":1073,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":1128,"title":{},"body":{"changelog.html":{}}}],["uri",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CustomSerializer.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"interfaces/RouterStateUrl.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["urls",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urltree",{"_index":784,"title":{},"body":{"guards/LanguageGuard.html":{}}}],["use",{"_index":496,"title":{},"body":{"components/BaseComponent.html":{},"injectables/EntitiesEffects.html":{},"injectables/EntitiesService.html":{},"interfaces/EntitiesState.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["usecases",{"_index":1511,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":390,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AppServerModule.html":{},"injectables/CustomSerializer.html":{}}}],["used",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"injectables/EntitiesEffects.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"components/HomePageComponent.html":{},"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["useeffectserrorhandler",{"_index":538,"title":{},"body":{"injectables/EntitiesEffects.html":{},"injectables/GoogleAnalyticsEffects.html":{},"injectables/RouterEffects.html":{}}}],["usefactory",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}}}],["user_provided_meta_reducers",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["users/rickvandermeij/sources/angular",{"_index":1632,"title":{},"body":{"unit-test.html":{}}}],["uses",{"_index":1226,"title":{},"body":{"changelog.html":{}}}],["usevalue",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":1111,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["utf8",{"_index":1058,"title":{},"body":{"classes/TranslateUniversalLoader.html":{}}}],["v4",{"_index":1178,"title":{},"body":{"changelog.html":{}}}],["valuable",{"_index":1483,"title":{},"body":{"index.html":{}}}],["value",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"injectables/EntitiesEffects.html":{},"components/ErrorPageComponent.html":{},"classes/GeneralHelper.html":{},"injectables/GoogleAnalyticsEffects.html":{},"components/HomePageComponent.html":{},"injectables/RouterEffects.html":{},"miscellaneous/variables.html":{}}}],["van",{"_index":1562,"title":{},"body":{"license.html":{}}}],["vapid",{"_index":1159,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["vapid_public",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["var",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{}}}],["variable",{"_index":1305,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1651,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verba",{"_index":928,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["versions",{"_index":1433,"title":{},"body":{"index.html":{}}}],["via",{"_index":1505,"title":{},"body":{"index.html":{}}}],["videoque",{"_index":913,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["view",{"_index":1539,"title":{},"body":{"index.html":{}}}],["visus",{"_index":862,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["vix",{"_index":957,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["vocandus",{"_index":854,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/ErrorPageComponent.html":{},"components/HomePageComponent.html":{},"injectables/LocalStorageService.html":{}}}],["vs",{"_index":1260,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["warning",{"_index":977,"title":{},"body":{"interfaces/NotificationInterface.html":{}}}],["warranties",{"_index":1604,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1600,"title":{},"body":{"license.html":{}}}],["watch",{"_index":1287,"title":{},"body":{"changelog.html":{}}}],["watcher",{"_index":1497,"title":{},"body":{"index.html":{}}}],["way",{"_index":1185,"title":{},"body":{"changelog.html":{}}}],["web",{"_index":1431,"title":{},"body":{"index.html":{}}}],["webdriver",{"_index":1253,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["webpack",{"_index":1269,"title":{},"body":{"changelog.html":{}}}],["webpack.server.config.js",{"_index":1191,"title":{},"body":{"changelog.html":{}}}],["webpush",{"_index":1439,"title":{},"body":{"index.html":{}}}],["website",{"_index":1534,"title":{},"body":{"index.html":{}}}],["went",{"_index":536,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["wether",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ApplicationState.html":{},"injectables/GoogleAnalyticsEffects.html":{}}}],["whenever",{"_index":718,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{}}}],["whether",{"_index":1616,"title":{},"body":{"license.html":{}}}],["window",{"_index":712,"title":{},"body":{"injectables/GoogleAnalyticsEffects.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["window.location.reload",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["windows",{"_index":1266,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["withcredentials",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":1217,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["without",{"_index":1576,"title":{},"body":{"license.html":{}}}],["wont",{"_index":548,"title":{},"body":{"injectables/EntitiesEffects.html":{},"interfaces/EntitiesState.html":{},"miscellaneous/variables.html":{}}}],["work",{"_index":1177,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["worker",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["worker.js",{"_index":378,"title":{},"body":{"modules/AppModule.html":{}}}],["working",{"_index":1265,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":1223,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["world",{"_index":760,"title":{},"body":{"components/HomePageComponent.html":{}}}],["wpo",{"_index":1280,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["wpo:lighthouse",{"_index":1540,"title":{},"body":{"index.html":{}}}],["wpo:stats",{"_index":1537,"title":{},"body":{"index.html":{}}}],["written",{"_index":1516,"title":{},"body":{"index.html":{}}}],["wrong",{"_index":537,"title":{},"body":{"injectables/EntitiesEffects.html":{}}}],["xenial",{"_index":1146,"title":{},"body":{"changelog.html":{}}}],["xhr",{"_index":214,"title":{},"body":{"interceptors/AppHttpInterceptor.html":{},"interfaces/ApplicationState.html":{},"interceptors/UniversalInterceptor.html":{},"changelog.html":{}}}],["yyyy",{"_index":835,"title":{},"body":{"interfaces/MockActiveStateSnapshot.html":{},"interfaces/MockRouterStateSnapshot.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules/ErrorModule.html":{},"modules/HomeModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        App Component which extends the BaseComponent\n\n    \n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                cd\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                pushService\n                            \n                            \n                                routerLanguage$\n                            \n                            \n                                    Public\n                                swPush\n                            \n                            \n                                    Public\n                                swUpdate\n                            \n                            \n                                    Public\n                                translate\n                            \n                            \n                                    Protected\n                                mutableSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                addSubscription\n                            \n                            \n                                    Protected\n                                extendedNgOnDestroy\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                unsubscribeAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_stateCb: Function, platformId: string, store: Store, cd: ChangeDetectorRef, pushService: PushNotificationService, swPush: SwPush, swUpdate: SwUpdate, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:42\n                            \n                        \n\n                \n                    \n                            constructor - The function which is called when the class is instantiated\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _stateCb\n                                                  \n                                                        \n                                                                        Function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \ncheck wether the page is browser or server\n\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nNGRX Store integration\n\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nSubscription for the Angular ChangeDetectorRef\n\n\n                                                        \n                                                \n                                                \n                                                        pushService\n                                                  \n                                                        \n                                                                        PushNotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for the PushNotificationService\n\n\n                                                        \n                                                \n                                                \n                                                        swPush\n                                                  \n                                                        \n                                                                        SwPush\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nSubscription for the Angular SwUpdate\n\n\n                                                        \n                                                \n                                                \n                                                        swUpdate\n                                                  \n                                                        \n                                                                        SwUpdate\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nSubscription for the Angular SwUpdate\n\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nSubscription for the Angular TranslateService\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:75\n                \n            \n\n\n            \n                \n                    ngOnInit is a callback method that is invoked immediately after the default\nchange detector has checked the directive's data-bound properties for\nthe first time\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addSubscription\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addSubscription(subscription: Subscription)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:23\n\n                \n            \n\n\n            \n                \n                    Add a subscription.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n                                    \n                                            Subscription\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extendedNgOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extendedNgOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:42\n\n                \n            \n\n\n            \n                \n                    Should be used by all pages when ngOnDestroy wants to be triggered.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:47\n\n                \n            \n\n\n            \n                \n                    Destructor which unsubscribe the dangling subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            unsubscribeAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribeAll()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:32\n\n                \n            \n\n\n            \n                \n                    Unsubscribe from all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            cd\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:58\n                            \n                        \n\n                \n                    \n                        - Subscription for the Angular ChangeDetectorRef\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationInterface[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:42\n                            \n                        \n\n                \n                    \n                        notifications returns messages of swPush\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pushService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PushNotificationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:59\n                            \n                        \n\n                \n                    \n                        - Service for the PushNotificationService\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routerLanguage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:38\n                            \n                        \n\n                \n                    \n                        routerLanguage is an Observable of the routerSelector getRouterLanguage\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            swPush\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SwPush\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:60\n                            \n                        \n\n                \n                    \n                        - Subscription for the Angular SwUpdate\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            swUpdate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SwUpdate\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:61\n                            \n                        \n\n                \n                    \n                        - Subscription for the Angular SwUpdate\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:62\n                            \n                        \n\n                \n                    \n                        - Subscription for the Angular TranslateService\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            mutableSubscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:15\n\n                            \n                        \n\n                \n                    \n                        Array of subscriptions handled by this component.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n\tChangeDetectorRef,\n\tComponent,\n\tInject,\n\tOnInit,\n\tOptional,\n\tPLATFORM_ID,\n} from '@angular/core';\nimport { SwPush, SwUpdate } from '@angular/service-worker';\nimport { select, Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { environment } from '@environments/environment';\nimport { GeneralHelper } from '@helpers/general.helper';\nimport { PushNotificationService } from '@services/push-notifications/push-notifications.service';\nimport { addNotification } from '@store/notifications/notifications.actions';\nimport { NotificationInterface } from '@store/notifications/notifications.interface';\nimport * as fromRouter from '@store/router/router.selectors';\nimport { BaseComponent } from 'components';\nimport { STATE_CB } from './ssr/tokens';\n\n/**\n * App Component which extends the BaseComponent\n */\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n})\n/**\n * App Component which contains the initial route handling\n */\nexport class AppComponent extends BaseComponent implements OnInit {\n\t/**\n\t * routerLanguage is an Observable of the routerSelector getRouterLanguage\n\t */\n\trouterLanguage$: Observable;\n\t/**\n\t * notifications returns messages of swPush\n\t */\n\tnotifications: NotificationInterface[] = [];\n\n\t/**\n\t * constructor - The function which is called when the class is instantiated\n\t * @param  {string} platformId - check wether the page is browser or server\n\t * @param  {Store} store - NGRX Store integration\n\t * @param  {ChangeDetectorRef} cd - Subscription for the Angular ChangeDetectorRef\n\t * @param  {PushNotificationService} pushService - Service for the PushNotificationService\n\t * @param  {SwPush} swPush - Subscription for the Angular SwUpdate\n\t * @param  {SwUpdate} swUpdate - Subscription for the Angular SwUpdate\n\t * @param  {TranslateService} translate - Subscription for the Angular TranslateService\n\t */\n\tconstructor(\n\t\t@Optional() @Inject(STATE_CB) private readonly _stateCb: Function,\n\t\t@Inject(PLATFORM_ID) private readonly platformId: string,\n\t\tprivate readonly store: Store,\n\t\tpublic readonly cd: ChangeDetectorRef,\n\t\tpublic pushService: PushNotificationService,\n\t\tpublic swPush: SwPush,\n\t\tpublic swUpdate: SwUpdate,\n\t\tpublic translate: TranslateService,\n\t) {\n\t\tsuper();\n\t\tthis.routerLanguage$ = this.store.pipe(\n\t\t\tselect(fromRouter.getRouterLanguage),\n\t\t);\n\t}\n\n\t/**\n\t * ngOnInit is a callback method that is invoked immediately after the default\n\t * change detector has checked the directive's data-bound properties for\n\t * the first time\n\t */\n\tngOnInit(): void {\n\t\t/* istanbul ignore next */\n\t\tif (this.swUpdate.isEnabled) {\n\t\t\tthis.swUpdate.available.subscribe(() => {\n\t\t\t\tif (confirm('new Version is available')) {\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/* istanbul ignore next */\n\t\tif (isPlatformBrowser(this.platformId) && this.swPush.isEnabled) {\n\t\t\tthis.swPush.messages.subscribe((message) => {\n\t\t\t\tconst flattenedMessage = GeneralHelper.flattensObject(message);\n\t\t\t\tthis.store.dispatch(\n\t\t\t\t\taddNotification({ notification: flattenedMessage }),\n\t\t\t\t);\n\t\t\t\tthis.notifications.push(flattenedMessage);\n\t\t\t\tthis.notifications = GeneralHelper.dateSort(\n\t\t\t\t\tthis.notifications,\n\t\t\t\t\t'timeStamp',\n\t\t\t\t);\n\t\t\t\tthis.cd.markForCheck();\n\t\t\t});\n\t\t\tthis.swPush\n\t\t\t\t.requestSubscription({\n\t\t\t\t\tserverPublicKey: environment.VAPID_PUBLIC,\n\t\t\t\t})\n\t\t\t\t.then((subscription) => {\n\t\t\t\t\tthis.pushService\n\t\t\t\t\t\t.sendSubscriptionToTheServer(subscription)\n\t\t\t\t\t\t.subscribe();\n\t\t\t\t})\n\t\t\t\t.catch();\n\t\t}\n\n\t\tthis.addSubscription(\n\t\t\tthis.routerLanguage$.subscribe((language: string) => {\n\t\t\t\tthis.translate.use(language);\n\t\t\t}),\n\t\t);\n\n\t\tthis.store.subscribe((state) => {\n\t\t\t/* istanbul ignore if */\n\t\t\tif (this._stateCb) {\n\t\t\t\tthis._stateCb(state);\n\t\t\t}\n\t\t});\n\t}\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base-component'},{'name': 'ErrorPageComponent', 'selector': ''},{'name': 'HomePageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AppHttpInterceptor.html":{"url":"interceptors/AppHttpInterceptor.html","title":"interceptor - AppHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AppHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interceptors/http.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                AppHttpInterceptor Intercepts all incoming XHR calls and defines the store if a request is pending\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/interceptors/http.interceptor.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interceptors/http.interceptor.ts:27\n                \n            \n\n\n            \n                \n                    Intercepts HttpRequest or HttpResponse and dispatches an actions\nto save the status in the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n\tHttpEvent,\n\tHttpHandler,\n\tHttpInterceptor,\n\tHttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { SetRequestStatus } from '@store/application/application.actions';\n\n/**\n * AppHttpInterceptor Intercepts all incoming XHR calls and defines the store if a request is pending\n */\n@Injectable()\nexport class AppHttpInterceptor implements HttpInterceptor {\n\tconstructor(private readonly store: Store) {}\n\n\t/**\n\t * Intercepts HttpRequest or HttpResponse and dispatches an actions\n\t * to save the status in the store\n\t * @param  {HttpRequest} request\n\t * @param  {HttpHandler} next\n\t */\n\tintercept(\n\t\trequest: HttpRequest,\n\t\tnext: HttpHandler,\n\t): Observable> {\n\t\tthis.store.dispatch(SetRequestStatus({ isPendingRequest: true }));\n\t\treturn next\n\t\t\t.handle(request)\n\t\t\t.pipe(\n\t\t\t\tfinalize(() =>\n\t\t\t\t\tthis.store.dispatch(\n\t\t\t\t\t\tSetRequestStatus({ isPendingRequest: false }),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AppHttpInterceptor-1.html":{"url":"interceptors/AppHttpInterceptor-1.html","title":"interceptor - AppHttpInterceptor-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AppHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ssr/app.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transferState: TransferState)\n                    \n                \n                        \n                            \n                                Defined in src/app/ssr/app.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transferState\n                                                  \n                                                        \n                                                                        TransferState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ssr/app.interceptor.ts:26\n                \n            \n\n\n            \n                \n                    Intercepts HttpRequest or HttpResponse and set the transferState\nto save the status in the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n\tHttpEvent,\n\tHttpHandler,\n\tHttpInterceptor,\n\tHttpRequest,\n\tHttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { makeStateKey, TransferState } from '@angular/platform-browser';\nimport { Observable, of } from 'rxjs';\n\n/* istanbul ignore next */\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class AppHttpInterceptor implements HttpInterceptor {\n\tconstructor(private readonly transferState: TransferState) {}\n\n\t/* istanbul ignore next */\n\t/**\n\t * Intercepts HttpRequest or HttpResponse and set the transferState\n\t * to save the status in the store\n\t * @param  {HttpRequest} request\n\t * @param  {HttpHandler} next\n\t */\n\tintercept(\n\t\treq: HttpRequest,\n\t\tnext: HttpHandler,\n\t): Observable> {\n\t\tif (req.method !== 'GET') {\n\t\t\treturn next.handle(req);\n\t\t}\n\n\t\tconst storedResponse: string = this.transferState.get(\n\t\t\tmakeStateKey(req.url),\n\t\t\tnull,\n\t\t);\n\n\t\tif (storedResponse) {\n\t\t\tconst response = new HttpResponse({\n\t\t\t\tbody: storedResponse,\n\t\t\t\tstatus: 200,\n\t\t\t});\n\t\t\treturn of(response);\n\t\t}\n\n\t\treturn next.handle(req);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\nAppModule -->\n\nErrorModule->AppModule\n\n\n\n\n\nAppHttpInterceptor\n\nAppHttpInterceptor\n\nAppModule -->\n\nAppHttpInterceptor->AppModule\n\n\n\n\n\nPushNotificationService\n\nPushNotificationService\n\nAppModule -->\n\nPushNotificationService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Marks an class as an NgModule so it could be configured\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AppHttpInterceptor\n                        \n                        \n                            PushNotificationService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ErrorModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n\tHTTP_INTERCEPTORS,\n\tHttpClient,\n\tHttpClientModule,\n} from '@angular/common/http';\nimport { APP_INITIALIZER, NgModule, PLATFORM_ID } from '@angular/core';\nimport {\n\tBrowserModule,\n\tBrowserTransferStateModule,\n\tɵgetDOM,\n} from '@angular/platform-browser';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { routerReducer } from '@ngrx/router-store';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { PrebootModule } from 'preboot';\n\n// NGRX store\nimport { EffectsModule } from '@ngrx/effects';\nimport {\n\tMetaReducer,\n\tStoreModule,\n\tUSER_PROVIDED_META_REDUCERS,\n} from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { LocalStorageService } from '@services/local-storage.service';\nimport { PushNotificationService } from '@services/push-notifications/push-notifications.service';\nimport * as fromApplication from '@store/application/application.reducer';\nimport { LOCAL_STORAGE_KEY, STORAGE_KEYS } from '@store/meta/app.tokens';\nimport { storageMetaReducer } from '@store/meta/storage.metareducer';\nimport * as fromNotifications from '@store/notifications/notifications.reducer';\nimport { RouterEffects } from '@store/router/router.effects';\n\n// Core\nimport { environment } from '@environments/environment';\nimport { AppComponent } from './app.component';\n\n// Routes\nimport { AppRoutingModule, GoogleAnalyticsEffects } from 'routes';\n\n// Modules\nimport { ErrorModule } from '@app/pages/error/error.module';\n\n// Interceptor\nimport { AppHttpInterceptor } from './interceptors/http.interceptor';\nimport { AppHttpInterceptor as CoreAppHttpInterceptor } from './ssr/app.interceptor';\nimport { getInitialState } from './ssr/tokens';\n\n/* istanbul ignore next */\n/**\n * Custom TranslateService Loader to load the given language\n * @param  {HttpClient} http HttpClient to 'mock' the call to the assets i18n json file\n * @return {TranslateHttpLoader} JSON\n */\nexport function createTranslateLoader(http: HttpClient): TranslateHttpLoader {\n\treturn new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n/* istanbul ignore next */\n/**\n * factory meta-reducer configuration function\n */\nexport function getMetaReducers(\n\tsaveKeys: string[],\n\tlocalStorageKey: string,\n\tstorageService: LocalStorageService,\n): MetaReducer[] {\n\treturn [storageMetaReducer(saveKeys, localStorageKey, storageService)];\n}\n\n/**\n * Marks an class as an NgModule so it could be configured\n */\n@NgModule({\n\tbootstrap: [AppComponent],\n\tdeclarations: [AppComponent],\n\timports: [\n\t\tAppRoutingModule,\n\t\tBrowserModule.withServerTransition({ appId: 'serverApp' }),\n\t\tBrowserTransferStateModule,\n\t\tEffectsModule.forRoot([GoogleAnalyticsEffects, RouterEffects]),\n\t\tErrorModule,\n\t\tHttpClientModule,\n\t\tPrebootModule.withConfig({ appRoot: 'app-root' }),\n\t\tStoreModule.forRoot(\n\t\t\t{\n\t\t\t\tapplicationState: fromApplication.reducer,\n\t\t\t\tnotificationState: fromNotifications.reducer,\n\t\t\t\trouterState: routerReducer,\n\t\t\t},\n\t\t\t{ initialState: getInitialState },\n\t\t),\n\t\tStoreDevtoolsModule.instrument(),\n\t\tServiceWorkerModule.register('ngsw-worker.js', {\n\t\t\tenabled: environment.production,\n\t\t}),\n\t\tTranslateModule.forRoot({\n\t\t\tloader: {\n\t\t\t\tdeps: [HttpClient],\n\t\t\t\tprovide: TranslateLoader,\n\t\t\t\tuseFactory: createTranslateLoader,\n\t\t\t},\n\t\t}),\n\t],\n\tproviders: [\n\t\tPushNotificationService,\n\t\t{\n\t\t\tprovide: STORAGE_KEYS,\n\t\t\tuseValue: [\n\t\t\t\t'applicationState',\n\t\t\t\t'entitiesState',\n\t\t\t\t'notifications',\n\t\t\t\t'routerState',\n\t\t\t],\n\t\t},\n\t\t{ provide: LOCAL_STORAGE_KEY, useValue: '__app_storage__' },\n\t\t{\n\t\t\tdeps: [STORAGE_KEYS, LOCAL_STORAGE_KEY, LocalStorageService],\n\t\t\tprovide: USER_PROVIDED_META_REDUCERS,\n\t\t\tuseFactory: getMetaReducers,\n\t\t},\n\t\t{\n\t\t\tmulti: true,\n\t\t\tprovide: HTTP_INTERCEPTORS,\n\t\t\tuseClass: AppHttpInterceptor,\n\t\t},\n\t\t{\n\t\t\tmulti: true,\n\t\t\tprovide: HTTP_INTERCEPTORS,\n\t\t\tuseClass: CoreAppHttpInterceptor,\n\t\t},\n\n\t\t{\n\t\t\tdeps: [DOCUMENT, PLATFORM_ID],\n\t\t\tmulti: true,\n\t\t\tprovide: APP_INITIALIZER,\n\t\t\tuseFactory: /* istanbul ignore next */ function (\n\t\t\t\tdocument: HTMLDocument,\n\t\t\t\tplatformId: Object,\n\t\t\t): Function {\n\t\t\t\treturn () => {\n\t\t\t\t\tif (isPlatformBrowser(platformId)) {\n\t\t\t\t\t\tconst dom = ɵgetDOM().getDefaultDocument();\n\t\t\t\t\t\tconst styles: any[] = Array.prototype.slice.apply(\n\t\t\t\t\t\t\tdom.querySelectorAll(`style[ng-transition]`),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tstyles.forEach((el) => {\n\t\t\t\t\t\t\t// Remove ng-transition attribute to prevent Angular appInitializerFactory\n\t\t\t\t\t\t\t// to remove server styles before preboot complete\n\t\t\t\t\t\t\tel.removeAttribute('ng-transition');\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdocument.addEventListener('PrebootComplete', () => {\n\t\t\t\t\t\t\t// After preboot complete, remove the server scripts\n\t\t\t\t\t\t\tsetTimeout(() =>\n\t\t\t\t\t\t\t\tstyles.forEach((el) => dom.removeChild(el)),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\t\t},\n\t],\n})\n/* istanbul ignore next */\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/routes/app-routing.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Marks an class as an NgModule so it could be configured\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NgModule } from '@angular/core';\nimport { RouterModule, RouterStateSnapshot, Routes } from '@angular/router';\nimport {\n\tRouterStateSerializer,\n\tStoreRouterConnectingModule,\n} from '@ngrx/router-store';\n\nimport { LanguageGuard } from '@routes/guards/language-guard.service';\nimport { RouterStateUrl } from '@store/router/router.interface';\nimport { ErrorPageComponent } from 'pages';\n\n/**\n * Class to implements the RouterStateSerializer with a custom serializer\n */\n@Injectable()\nexport class CustomSerializer implements RouterStateSerializer {\n\t/**\n\t * Serialize the RouterState with the CustomSerialzer\n\t * @param {RouterStateSnapshot} routerState\n\t * @returns RouterStateUrl\n\t */\n\tserialize(routerState: RouterStateSnapshot): RouterStateUrl {\n\t\tlet route = routerState.root;\n\t\twhile (route.firstChild) {\n\t\t\troute = route.firstChild;\n\t\t}\n\t\tconst {\n\t\t\turl,\n\t\t\troot: { queryParams },\n\t\t} = routerState;\n\t\tconst { params } = route;\n\t\treturn { params, queryParams, url };\n\t}\n}\n\n/* istanbul ignore next */\nconst appRoutes: Routes = [\n\t{\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tpath: '',\n\t\t\t\tpathMatch: 'prefix',\n\t\t\t\tredirectTo: 'en',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcanActivate: [LanguageGuard],\n\t\t\t\tchildren: [\n\t\t\t\t\t{\n\t\t\t\t\t\tloadChildren: () =>\n\t\t\t\t\t\t\timport('../pages/home/home.module').then(\n\t\t\t\t\t\t\t\t(m) => m.HomeModule,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\tpath: '',\n\t\t\t\t\t\tpathMatch: 'full',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tcomponent: ErrorPageComponent,\n\t\t\t\t\t\tpath: '404',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tpath: ':language',\n\t\t\t},\n\t\t],\n\t\tpath: '',\n\t\trunGuardsAndResolvers: 'always',\n\t},\n];\n\n/**\n * Marks an class as an NgModule so it could be configured\n */\n@NgModule({\n\texports: [RouterModule],\n\timports: [\n\t\tRouterModule.forRoot(appRoutes, {\n\t\t\tenableTracing: false,\n\t\t\tinitialNavigation: 'enabled',\n\t\t\tonSameUrlNavigation: 'reload',\n\t\t}),\n\t\tStoreRouterConnectingModule.forRoot({\n\t\t\tserializer: CustomSerializer,\n\t\t}),\n\t],\n\tproviders: [{ provide: RouterStateSerializer, useClass: CustomSerializer }],\n})\n\n/* istanbul ignore next */\n/**\n * Exports the AppRoutingModule from the NgModule\n */\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppServerModule.html":{"url":"modules/AppServerModule.html","title":"module - AppServerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_imports\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\ncluster_AppServerModule_providers\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\nUniversalInterceptor\n\nUniversalInterceptor\n\nAppServerModule -->\n\nUniversalInterceptor->AppServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.server.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Marks an class as an NgModule so it could be configured\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UniversalInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport {\n\tServerModule,\n\tServerTransferStateModule,\n} from '@angular/platform-server';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\n\nimport { AppComponent } from './app.component';\nimport { AppModule } from './app.module';\nimport { UniversalInterceptor } from './ssr/http.interceptor';\nimport { TranslateUniversalLoader } from './ssr/translate.loader';\n\n/**\n * Custom TranslateUniversalService Loader to load the given language\n * @return {TranslateUniversalLoader} JSON\n */\nexport function TranslateUniversalService(): TranslateUniversalLoader {\n\treturn new TranslateUniversalLoader('dist/browser/assets/i18n', '.json');\n}\n\n/**\n * Marks an class as an NgModule so it could be configured\n */\n@NgModule({\n\tbootstrap: [AppComponent],\n\timports: [\n\t\tAppModule,\n\t\tServerModule,\n\t\tServerTransferStateModule,\n\t\tTranslateModule.forRoot({\n\t\t\tloader: {\n\t\t\t\tprovide: TranslateLoader,\n\t\t\t\tuseFactory: TranslateUniversalService,\n\t\t\t},\n\t\t}),\n\t],\n\tproviders: [\n\t\t{\n\t\t\t/* Multi is important or you will delete all the other interceptors */\n\t\t\tmulti: true,\n\t\t\tprovide: HTTP_INTERCEPTORS,\n\t\t\tuseClass: UniversalInterceptor,\n\t\t},\n\t],\n})\n/* istanbul ignore next */\nexport class AppServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApplicationState.html":{"url":"interfaces/ApplicationState.html","title":"interface - ApplicationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApplicationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/application/application.reducer.ts\n        \n\n            \n                Description\n            \n            \n                Application store state\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isPendingRequest\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isPendingRequest\n                                    \n                                \n                                \n                                    \n                                        isPendingRequest:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    isPendingRequest represents the state wether a XHR call is pending\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Action, createReducer, on } from '@ngrx/store';\nimport * as applicationActions from './application.actions';\n\n/**\n * Application store state\n */\nexport interface ApplicationState {\n\t/**\n\t * isPendingRequest represents the state wether a XHR call is pending\n\t */\n\tisPendingRequest: boolean;\n}\n\nexport const initialState: ApplicationState = {\n\tisPendingRequest: false,\n};\n\nconst createApplicationReducer = createReducer(\n\tinitialState,\n\ton(applicationActions.SetRequestStatus, (state, action) => ({\n\t\t...state,\n\t\tisPendingRequest: action.isPendingRequest,\n\t})),\n);\n\n/**\n * The Application reducer, which contain all state differentiates when an action is dispatched\n * @param {ApplicationState} state - the initial state\n * @param {ApplicationActions} action - the action from actionTypes to perform\n * @return {ApplicationState} The new state\n */\nexport function reducer(state: ApplicationState, action: Action): any {\n\treturn createApplicationReducer(state, action);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseComponent.html":{"url":"components/BaseComponent.html","title":"component - BaseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/base/base.component.ts\n\n\n    \n        Description\n    \n    \n        Extendable base class, all pages should use.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-base-component\n            \n\n\n\n            \n                template\n                no-ui\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                mutableSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                addSubscription\n                            \n                            \n                                    Protected\n                                extendedNgOnDestroy\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                unsubscribeAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addSubscription\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addSubscription(subscription: Subscription)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/base/base.component.ts:23\n                \n            \n\n\n            \n                \n                    Add a subscription.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n                                    \n                                            Subscription\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extendedNgOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extendedNgOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/base/base.component.ts:42\n                \n            \n\n\n            \n                \n                    Should be used by all pages when ngOnDestroy wants to be triggered.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/base/base.component.ts:47\n                \n            \n\n\n            \n                \n                    Destructor which unsubscribe the dangling subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            unsubscribeAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribeAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/base/base.component.ts:32\n                \n            \n\n\n            \n                \n                    Unsubscribe from all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            mutableSubscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/base/base.component.ts:15\n                            \n                        \n\n                \n                    \n                        Array of subscriptions handled by this component.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\n/**\n * Extendable base class, all pages should use.\n */\n@Component({\n\tselector: 'app-base-component',\n\ttemplate: 'no-ui',\n})\nexport abstract class BaseComponent implements OnDestroy {\n\t/**\n\t * Array of subscriptions handled by this component.\n\t */\n\tprotected mutableSubscriptions: Array = [];\n\n\t/**\n\t * Add a subscription.\n\t * @access Protected\n\t * @param { Subscription } subscription\n\t * @return { Subscription }\n\t */\n\tprotected addSubscription(subscription: Subscription): Subscription {\n\t\tthis.mutableSubscriptions.push(subscription);\n\t\treturn subscription;\n\t}\n\n\t/**\n\t * Unsubscribe from all subscriptions.\n\t * @access Protected\n\t */\n\tprotected unsubscribeAll(): void {\n\t\tthis.mutableSubscriptions.forEach(\n\t\t\t(subscription: Subscription) =>\n\t\t\t\t!subscription['isUnsubscribed'] && subscription.unsubscribe(),\n\t\t);\n\t}\n\n\t/**\n\t * Should be used by all pages when ngOnDestroy wants to be triggered.\n\t */\n\tprotected extendedNgOnDestroy(): void {}\n\n\t/**\n\t * Destructor which unsubscribe the dangling subscriptions.\n\t */\n\tngOnDestroy(): void {\n\t\tthis.unsubscribeAll();\n\t\tthis.extendedNgOnDestroy();\n\t}\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'no-ui'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base-component'},{'name': 'ErrorPageComponent', 'selector': ''},{'name': 'HomePageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BaseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomSerializer.html":{"url":"injectables/CustomSerializer.html","title":"injectable - CustomSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/routes/app-routing.module.ts\n        \n\n            \n                Description\n            \n            \n                Class to implements the RouterStateSerializer with a custom serializer\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(routerState: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/app-routing.module.ts:22\n                \n            \n\n\n            \n                \n                    Serialize the RouterState with the CustomSerialzer\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routerState\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RouterStateUrl\n\n                    \n                    \n                        RouterStateUrl\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgModule } from '@angular/core';\nimport { RouterModule, RouterStateSnapshot, Routes } from '@angular/router';\nimport {\n\tRouterStateSerializer,\n\tStoreRouterConnectingModule,\n} from '@ngrx/router-store';\n\nimport { LanguageGuard } from '@routes/guards/language-guard.service';\nimport { RouterStateUrl } from '@store/router/router.interface';\nimport { ErrorPageComponent } from 'pages';\n\n/**\n * Class to implements the RouterStateSerializer with a custom serializer\n */\n@Injectable()\nexport class CustomSerializer implements RouterStateSerializer {\n\t/**\n\t * Serialize the RouterState with the CustomSerialzer\n\t * @param {RouterStateSnapshot} routerState\n\t * @returns RouterStateUrl\n\t */\n\tserialize(routerState: RouterStateSnapshot): RouterStateUrl {\n\t\tlet route = routerState.root;\n\t\twhile (route.firstChild) {\n\t\t\troute = route.firstChild;\n\t\t}\n\t\tconst {\n\t\t\turl,\n\t\t\troot: { queryParams },\n\t\t} = routerState;\n\t\tconst { params } = route;\n\t\treturn { params, queryParams, url };\n\t}\n}\n\n/* istanbul ignore next */\nconst appRoutes: Routes = [\n\t{\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tpath: '',\n\t\t\t\tpathMatch: 'prefix',\n\t\t\t\tredirectTo: 'en',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcanActivate: [LanguageGuard],\n\t\t\t\tchildren: [\n\t\t\t\t\t{\n\t\t\t\t\t\tloadChildren: () =>\n\t\t\t\t\t\t\timport('../pages/home/home.module').then(\n\t\t\t\t\t\t\t\t(m) => m.HomeModule,\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\tpath: '',\n\t\t\t\t\t\tpathMatch: 'full',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tcomponent: ErrorPageComponent,\n\t\t\t\t\t\tpath: '404',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tpath: ':language',\n\t\t\t},\n\t\t],\n\t\tpath: '',\n\t\trunGuardsAndResolvers: 'always',\n\t},\n];\n\n/**\n * Marks an class as an NgModule so it could be configured\n */\n@NgModule({\n\texports: [RouterModule],\n\timports: [\n\t\tRouterModule.forRoot(appRoutes, {\n\t\t\tenableTracing: false,\n\t\t\tinitialNavigation: 'enabled',\n\t\t\tonSameUrlNavigation: 'reload',\n\t\t}),\n\t\tStoreRouterConnectingModule.forRoot({\n\t\t\tserializer: CustomSerializer,\n\t\t}),\n\t],\n\tproviders: [{ provide: RouterStateSerializer, useClass: CustomSerializer }],\n})\n\n/* istanbul ignore next */\n/**\n * Exports the AppRoutingModule from the NgModule\n */\nexport class AppRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EntitiesEffects.html":{"url":"injectables/EntitiesEffects.html","title":"injectable - EntitiesEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EntitiesEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/entities/entities.effects.ts\n        \n\n            \n                Description\n            \n            \n                EntitiesEffects represents the class being used to trigger all effects used for the NGRX entities store\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getEntities$\n                            \n                            \n                                mapEntities$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, entitiesService: EntitiesService)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/entities/entities.effects.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitiesService\n                                                  \n                                                        \n                                                                        EntitiesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEntities$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType(entitiesActions.Load),\n\t\t\t\tswitchMap(() => {\n\t\t\t\t\treturn this.entitiesService.getAll().pipe(\n\t\t\t\t\t\tswitchMap(\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\tresponse: HttpResponse,\n\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\t\t\tentitiesActions.LoadSuccess({\n\t\t\t\t\t\t\t\t\t\tentities: response.body.data,\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcatchError(() => {\n\t\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\t\tentitiesActions.Fail({\n\t\t\t\t\t\t\t\t\terrorMessage: 'global.something-went-wrong',\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t),\n\t\t{ useEffectsErrorHandler: false },\n\t)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/entities/entities.effects.ts:27\n                            \n                        \n\n                \n                    \n                        getEntities$ Effect will be triggered when action LOAD is called from entitiesActions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mapEntities$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType(entitiesActions.Map),\n\t\t\t\tswitchMap(() => {\n\t\t\t\t\treturn this.entitiesService.getAll().pipe(\n\t\t\t\t\t\tswitchMap(\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\tresponse: HttpResponse,\n\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\t\t\tentitiesActions.MapSuccess({\n\t\t\t\t\t\t\t\t\t\tentities: response.body.data,\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcatchError(() => {\n\t\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\t\tentitiesActions.Fail({\n\t\t\t\t\t\t\t\t\terrorMessage: 'global.something-went-wrong',\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t),\n\t\t{ useEffectsErrorHandler: false },\n\t)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/entities/entities.effects.ts:66\n                            \n                        \n\n                \n                    \n                        mapEntities$ Effect will be triggered when action MAP is called from entitiesActions\nNOTE: MapSuccess wont use the EntityMap functionality, due to the lack of testing in effects\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Observable, of } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\n\nimport { EntitiesService } from '@services/entities/entities.service';\nimport * as entitiesActions from './entities.actions';\nimport { EntityInterface } from './entities.interface';\nimport { HttpResponse } from '@angular/common/http';\nimport { TypedAction } from '@ngrx/store/src/models';\n\n/**\n * EntitiesEffects represents the class being used to trigger all effects used for the NGRX entities store\n */\n@Injectable()\nexport class EntitiesEffects {\n\tconstructor(\n\t\tprivate readonly actions$: Actions,\n\t\tprivate readonly entitiesService: EntitiesService,\n\t) {}\n\n\t/**\n\t * getEntities$ Effect will be triggered when action LOAD is called from entitiesActions\n\t * @return Observable of LoadSuccess or LoadFail\n\t */\n\tgetEntities$: Observable | TypedAction\n\t> = createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType(entitiesActions.Load),\n\t\t\t\tswitchMap(() => {\n\t\t\t\t\treturn this.entitiesService.getAll().pipe(\n\t\t\t\t\t\tswitchMap(\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\tresponse: HttpResponse,\n\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\t\t\tentitiesActions.LoadSuccess({\n\t\t\t\t\t\t\t\t\t\tentities: response.body.data,\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcatchError(() => {\n\t\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\t\tentitiesActions.Fail({\n\t\t\t\t\t\t\t\t\terrorMessage: 'global.something-went-wrong',\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t),\n\t\t{ useEffectsErrorHandler: false },\n\t);\n\n\t/**\n\t * mapEntities$ Effect will be triggered when action MAP is called from entitiesActions\n\t * NOTE: MapSuccess wont use the EntityMap functionality, due to the lack of testing in effects\n\t * @return Observable of LoadSuccess or LoadFail\n\t */\n\tmapEntities$: Observable | TypedAction\n\t> = createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType(entitiesActions.Map),\n\t\t\t\tswitchMap(() => {\n\t\t\t\t\treturn this.entitiesService.getAll().pipe(\n\t\t\t\t\t\tswitchMap(\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\tresponse: HttpResponse,\n\t\t\t\t\t\t\t) => {\n\t\t\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\t\t\tentitiesActions.MapSuccess({\n\t\t\t\t\t\t\t\t\t\tentities: response.body.data,\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t\tcatchError(() => {\n\t\t\t\t\t\t\treturn of(\n\t\t\t\t\t\t\t\tentitiesActions.Fail({\n\t\t\t\t\t\t\t\t\terrorMessage: 'global.something-went-wrong',\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\t\t\t\t}),\n\t\t\t),\n\t\t{ useEffectsErrorHandler: false },\n\t);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EntitiesService.html":{"url":"injectables/EntitiesService.html","title":"injectable - EntitiesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EntitiesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/entities/entities.service.ts\n        \n\n            \n                Description\n            \n            \n                EntitiesService provides a service to use CRUD actions\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/entities/entities.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/entities/entities.service.ts:19\n                \n            \n\n\n            \n                \n                    Get entities data\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        the response of the HTTP Get\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport { EntityInterface } from '@app/store/entities/entities.interface';\n\n/**\n * EntitiesService provides a service to use CRUD actions\n */\n@Injectable()\nexport class EntitiesService {\n\tconstructor(private readonly http: HttpClient) {}\n\n\t/**\n\t * Get entities data\n\t * @return the response of the HTTP Get\n\t */\n\tgetAll(): Observable {\n\t\treturn this.http.get(\n\t\t\t`${environment.apiUrl}entities`,\n\t\t\t{\n\t\t\t\t...environment.apiCookies,\n\t\t\t\tobserve: 'response',\n\t\t\t},\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntitiesState.html":{"url":"interfaces/EntitiesState.html","title":"interface - EntitiesState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EntitiesState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/entities/entities.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        entities\n                                \n                                \n                                        errorMessage\n                                \n                                \n                                        isLoading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                    \n                                \n                                \n                                    \n                                        entities:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessage\n                                    \n                                \n                                \n                                    \n                                        errorMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLoading\n                                    \n                                \n                                \n                                    \n                                        isLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { Action, ActionReducerMap, createReducer, on } from '@ngrx/store';\n\nimport * as actions from './entities.actions';\nimport { EntityInterface } from './entities.interface';\n\nexport interface EntitiesState extends EntityState {\n\tentities: {\n\t\t[item: string]: EntityInterface;\n\t};\n\terrorMessage: string;\n\tisLoading: boolean;\n}\n\nexport function selectGuid(entity: EntityInterface): string {\n\treturn entity.guid;\n}\n\nexport const adapter: EntityAdapter =\n\tcreateEntityAdapter({\n\t\tselectId: selectGuid,\n\t});\n\nexport const initialState: EntitiesState = adapter.getInitialState({\n\terrorMessage: null,\n\tisLoading: false,\n});\n\nexport const entitiesReducer = createReducer(\n\tinitialState,\n\ton(actions.Load, actions.Map, (state) => ({\n\t\t...state,\n\t\terror: null,\n\t\tisLoading: true,\n\t})),\n\ton(actions.LoadSuccess, (state, action) => {\n\t\treturn adapter.setAll(action.entities, {\n\t\t\t...state,\n\t\t\tselectedEntity: null,\n\t\t});\n\t}),\n\t/*\n\t *\tNOTE: MapSuccess wont use the EntityMap functionality, due to the lack of testing in effects\n\t */\n\ton(actions.MapSuccess, (state, { entities }) => {\n\t\tconst mappedEntities = [];\n\t\tentities.forEach((entity) => {\n\t\t\tconst currentEntity = state.entities[entity.guid];\n\t\t\tif (currentEntity) {\n\t\t\t\tmappedEntities.push({\n\t\t\t\t\t...currentEntity,\n\t\t\t\t\tdeeperObject: {\n\t\t\t\t\t\t...entity.deeperObject,\n\t\t\t\t\t\t...currentEntity.deeperObject,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tmappedEntities.push(entity);\n\t\t\t}\n\t\t});\n\n\t\treturn adapter.upsertMany(mappedEntities, {\n\t\t\t...state,\n\t\t\tisLoading: false,\n\t\t});\n\t}),\n\ton(actions.Fail, (state, { errorMessage }) => ({\n\t\t...state,\n\t\terrorMessage,\n\t\tisLoading: false,\n\t})),\n\ton(actions.ClearError, (state) => ({\n\t\t...state,\n\t\terrorMessage: null,\n\t})),\n);\n\nexport function reducer(state: EntitiesState, action: Action): EntitiesState {\n\treturn entitiesReducer(state, action);\n}\n\nexport const { selectIds, selectEntities, selectAll, selectTotal } =\n\tadapter.getSelectors();\n\nexport const reducerToken = new InjectionToken\n>('dealsState');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityInterface.html":{"url":"interfaces/EntityInterface.html","title":"interface - EntityInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EntityInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/entities/entities.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        country\n                                \n                                \n                                        currency\n                                \n                                \n                                        dateFormat\n                                \n                                \n                                        deeperObject\n                                \n                                \n                                        email\n                                \n                                \n                                        guid\n                                \n                                \n                                        markdown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateFormat\n                                    \n                                \n                                \n                                    \n                                        dateFormat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deeperObject\n                                    \n                                \n                                \n                                    \n                                        deeperObject:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guid\n                                    \n                                \n                                \n                                    \n                                        guid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        markdown\n                                    \n                                \n                                \n                                    \n                                        markdown:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EntityInterface {\n\tguid: string;\n\tcountry: string;\n\tcurrency: string;\n\tdateFormat: string;\n\tdeeperObject: {\n\t\tnestedAfterMap: string;\n\t\tnestedBeforeMap: string;\n\t};\n\temail: string;\n\tmarkdown: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ErrorModule\n\n\n\ncluster_ErrorModule_imports\n\n\n\ncluster_ErrorModule_declarations\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\n\n\nErrorModule\n\nErrorModule\n\nErrorModule -->\n\nErrorPageComponent->ErrorModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nErrorModule -->\n\nSharedModule->ErrorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/error/error.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Marks an class as an NgModule so it could be configured\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ErrorPageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\n\nimport { ErrorPageComponent } from 'pages';\nimport { SharedModule } from '../../modules/shared.module';\n\n/**\n * Marks an class as an NgModule so it could be configured\n */\n@NgModule({\n\tdeclarations: [ErrorPageComponent],\n\timports: [CommonModule, SharedModule],\n\tproviders: [],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\n/* istanbul ignore next */\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorPageComponent.html":{"url":"components/ErrorPageComponent.html","title":"component - ErrorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/error/error-page.component.ts\n\n\n    \n        Description\n    \n    \n        404 Error page Component which extends the BaseComponent\n\n    \n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                error-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                translate\n                            \n                            \n                                    Protected\n                                mutableSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                addSubscription\n                            \n                            \n                                    Protected\n                                extendedNgOnDestroy\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                unsubscribeAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(title: Title, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/error/error-page.component.ts:17\n                            \n                        \n\n                \n                    \n                            constructor - The function which is called when the class is instantiated\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/error/error-page.component.ts:35\n                \n            \n\n\n            \n                \n                    Initialize the directive/component after Angular first displays the data-bound properties and sets the directive/component's input properties\nCalled once, after the first ngOnChanges()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addSubscription\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addSubscription(subscription: Subscription)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:23\n\n                \n            \n\n\n            \n                \n                    Add a subscription.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n                                    \n                                            Subscription\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extendedNgOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extendedNgOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:42\n\n                \n            \n\n\n            \n                \n                    Should be used by all pages when ngOnDestroy wants to be triggered.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:47\n\n                \n            \n\n\n            \n                \n                    Destructor which unsubscribe the dangling subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            unsubscribeAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribeAll()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:32\n\n                \n            \n\n\n            \n                \n                    Unsubscribe from all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/error/error-page.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            mutableSubscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:15\n\n                            \n                        \n\n                \n                    \n                        Array of subscriptions handled by this component.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { BaseComponent } from 'components';\n\n/**\n * 404 Error page Component which extends the BaseComponent\n */\n@Component({\n\ttemplateUrl: 'error-page.component.html',\n})\n\n/**\n * Class representing the error page component, which extends BaseComponent.\n */\nexport class ErrorPageComponent extends BaseComponent implements OnInit {\n\t/**\n\t * constructor - The function which is called when the class is instantiated\n\t *\n\t * @param  {type} private title: Service to set the HTML title\n\t */\n\tconstructor(\n\t\tprivate readonly title: Title,\n\t\tpublic translate: TranslateService,\n\t) {\n\t\tsuper();\n\t\tthis.translate.use('en');\n\t}\n\n\t/**\n\t * Initialize the directive/component after Angular first displays the data-bound properties and sets the directive/component's input properties\n\t * Called once, after the first ngOnChanges()\n\t */\n\tngOnInit(): void {\n\t\tthis.title.setTitle('404 Error: Page not Found / Angular SSR');\n\t}\n}\n\n    \n\n    \n        \n\t{{ 'error.heading' | translate }}\n\t{{ 'error.description' | translate }}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t{{ \\'error.heading\\' | translate }}\t{{ \\'error.description\\' | translate }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base-component'},{'name': 'ErrorPageComponent', 'selector': ''},{'name': 'HomePageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GeneralHelper.html":{"url":"classes/GeneralHelper.html","title":"class - GeneralHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GeneralHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/helpers/general.helper.ts\n        \n\n            \n                Description\n            \n            \n                Class representing the general helper.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                flattensObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                dateSort\n                            \n                            \n                                    Static\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            flattensObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/helpers/general.helper.ts:10\n                            \n                        \n\n                \n                    \n                        flattensObject Flatten a multidimensional object\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                          \n                                      \n                                      \n                                                \n                                                        obj\n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            dateSort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dateSort(data: any[], field: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/helpers/general.helper.ts:46\n                \n            \n\n\n            \n                \n                    dateSort will sort the given object by the given field param\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nall object data in an array\n\n\n                                    \n                                \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe field which will be used to sort\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            sort\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sort(data: any[], field: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/helpers/general.helper.ts:34\n                \n            \n\n\n            \n                \n                    sort will sort the given object by the given field param\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nall object data in an array\n\n\n                                    \n                                \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe field which will be used to sort\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class GeneralHelper {\n\t/**\n\t * flattensObject Flatten a multidimensional object\n\t * @param { any } obj\n\t * @return { any } flattened object\n\t */\n\tstatic flattensObject = (obj: any): any => {\n\t\tconst flattened = {};\n\n\t\tObject.keys(obj).forEach((key) => {\n\t\t\tif (typeof obj[key] === 'object' && obj[key] !== null) {\n\t\t\t\tObject.assign(\n\t\t\t\t\tflattened,\n\t\t\t\t\tGeneralHelper.flattensObject(obj[key]),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tflattened[key] = obj[key];\n\t\t\t}\n\t\t});\n\n\t\treturn flattened;\n\t\t/* eslint-disable @typescript-eslint/semi, @typescript-eslint/member-delimiter-style */\n\t};\n\n\t/**\n\t * sort will sort the given object by the given field param\n\t * @param { any[] } data - all object data in an array\n\t * @param { string } field - the field which will be used to sort\n\t * @return { any[] }\n\t */\n\tstatic sort(data: any[], field: string): any[] {\n\t\treturn data.sort((a, b) =>\n\t\t\ta[field] > b[field] ? 1 : b[field] > a[field] ? -1 : 0,\n\t\t);\n\t}\n\n\t/**\n\t * dateSort will sort the given object by the given field param\n\t * @param { any[] } data - all object data in an array\n\t * @param { string } field - the field which will be used to sort\n\t * @return { any[] }\n\t */\n\tstatic dateSort(data: any[], field: string): any[] {\n\t\treturn data.sort((a, b) => {\n\t\t\treturn new Date(b[field]).getTime() - new Date(a[field]).getTime();\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleAnalyticsEffects.html":{"url":"injectables/GoogleAnalyticsEffects.html","title":"injectable - GoogleAnalyticsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleAnalyticsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/routes/effects/google-analytics.effects.ts\n        \n\n            \n                Description\n            \n            \n                An Injectable to inject GoogleAnalytics Effects\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageView$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: string, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/routes/effects/google-analytics.effects.ts:12\n                            \n                        \n\n                \n                    \n                            constructor - The function which is called when the class is instantiated\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageView$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(\n\t\t() =>\n\t\t\tthis.router.events.pipe(\n\t\t\t\tfilter((event) => event instanceof NavigationEnd),\n\t\t\t\ttap((event: NavigationEnd) => {\n\t\t\t\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\t\t\t\t(window as any).ga(\n\t\t\t\t\t\t\t'set',\n\t\t\t\t\t\t\t'page',\n\t\t\t\t\t\t\tevent.urlAfterRedirects,\n\t\t\t\t\t\t);\n\t\t\t\t\t\t(window as any).ga('send', 'pageview');\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t),\n\t\t{ dispatch: false, useEffectsErrorHandler: true },\n\t)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/routes/effects/google-analytics.effects.ts:27\n                            \n                        \n\n                \n                    \n                        Whenever an Router Event takes place with an instanceof NavigationEnd, trigger the GoogleAnalytics Effect\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { createEffect } from '@ngrx/effects';\nimport { Observable } from 'rxjs';\nimport { filter, tap } from 'rxjs/operators';\n\n/**\n * An Injectable to inject GoogleAnalytics Effects\n */\n@Injectable()\nexport class GoogleAnalyticsEffects {\n\t/**\n\t * constructor - The function which is called when the class is instantiated\n\t *\n\t * @param  {type} private platformId: check wether the page is browser or server\n\t * @param  {type} private router: Subscription for the Angular Router\n\t */\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private readonly platformId: string,\n\t\tprivate readonly router: Router,\n\t) {}\n\n\t/**\n\t * Whenever an Router Event takes place with an instanceof NavigationEnd, trigger the GoogleAnalytics Effect\n\t */\n\tpageView$: Observable = createEffect(\n\t\t() =>\n\t\t\tthis.router.events.pipe(\n\t\t\t\tfilter((event) => event instanceof NavigationEnd),\n\t\t\t\ttap((event: NavigationEnd) => {\n\t\t\t\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\t\t\t\t(window as any).ga(\n\t\t\t\t\t\t\t'set',\n\t\t\t\t\t\t\t'page',\n\t\t\t\t\t\t\tevent.urlAfterRedirects,\n\t\t\t\t\t\t);\n\t\t\t\t\t\t(window as any).ga('send', 'pageview');\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t),\n\t\t{ dispatch: false, useEffectsErrorHandler: true },\n\t);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_HomeModule_providers\n\n\n\ncluster_HomeModule_declarations\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomePageComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\nEntitiesService\n\nEntitiesService\n\nHomeModule -->\n\nEntitiesService->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Marks an class as an NgModule so it could be configured\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePageComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            EntitiesService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomeRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { MarkdownModule } from 'ngx-markdown';\n\nimport { getInitialState } from '@app/ssr/tokens';\nimport { EntitiesService } from '@app/services/entities/entities.service';\nimport { EntitiesEffects } from '@app/store/entities/entities.effects';\nimport * as fromEntities from '@app/store/entities/entities.reducer';\nimport { HomePageComponent } from 'pages';\nimport { HomeRoutingModule } from 'routes';\nimport { SharedModule } from '../../modules/shared.module';\n\n/**\n * Marks an class as an NgModule so it could be configured\n */\n@NgModule({\n\tdeclarations: [HomePageComponent],\n\timports: [\n\t\tCommonModule,\n\t\tEffectsModule.forFeature([EntitiesEffects]),\n\t\tMarkdownModule.forRoot(),\n\t\tStoreModule.forFeature('entitiesState', fromEntities.reducer, {\n\t\t\tinitialState: getInitialState,\n\t\t}),\n\t\tSharedModule,\n\t\tHomeRoutingModule,\n\t],\n\tproviders: [EntitiesService],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\n/* istanbul ignore next */\nexport class HomeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePageComponent.html":{"url":"components/HomePageComponent.html","title":"component - HomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home-page.component.ts\n\n\n    \n        Description\n    \n    \n        Home page Component which extends the BaseComponent\n\n    \n\n    \n        Extends\n    \n    \n                BaseComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                home-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entities\n                            \n                            \n                                entities$\n                            \n                            \n                                    Protected\n                                mutableSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                addSubscription\n                            \n                            \n                                    Protected\n                                extendedNgOnDestroy\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Protected\n                                unsubscribeAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(replayer: EventReplayer, store: Store, title: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home-page.component.ts:27\n                            \n                        \n\n                \n                    \n                            constructor - The function which is called when the class is instantiated\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        replayer\n                                                  \n                                                        \n                                                                    EventReplayer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/pages/home/home-page.component.ts:50\n                \n            \n\n\n            \n                \n                    Initialize the directive/component after Angular first displays the data-bound properties and sets the directive/component's input properties\nCalled once, after the first ngOnChanges()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            addSubscription\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addSubscription(subscription: Subscription)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:23\n\n                \n            \n\n\n            \n                \n                    Add a subscription.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n                                    \n                                            Subscription\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extendedNgOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extendedNgOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:42\n\n                \n            \n\n\n            \n                \n                    Should be used by all pages when ngOnDestroy wants to be triggered.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:47\n\n                \n            \n\n\n            \n                \n                    Destructor which unsubscribe the dangling subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            unsubscribeAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribeAll()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseComponent\n\n                \n            \n            \n                \n                        Defined in         BaseComponent:32\n\n                \n            \n\n\n            \n                \n                    Unsubscribe from all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EntityInterface[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/home/home-page.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entities$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/pages/home/home-page.component.ts:26\n                            \n                        \n\n                \n                    \n                        entities$ is an Observable of the EntityInterface[] from the EntitiesStore\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            mutableSubscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseComponent:15\n\n                            \n                        \n\n                \n                    \n                        Array of subscriptions handled by this component.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { select, Store } from '@ngrx/store';\nimport { EventReplayer } from 'preboot';\nimport { Observable } from 'rxjs';\n\nimport { Load } from '@store/entities/entities.actions';\nimport { EntityInterface } from '@store/entities/entities.interface';\nimport * as entitiesSelectors from '@store/entities/entities.selectors';\nimport { BaseComponent } from 'components';\n\n/**\n * Home page Component which extends the BaseComponent\n */\n@Component({\n\ttemplateUrl: 'home-page.component.html',\n})\n\n/**\n * Class representing the home page component, which extends BaseComponent.\n */\nexport class HomePageComponent extends BaseComponent implements OnInit {\n\t/**\n\t * entities$ is an Observable of the EntityInterface[] from the EntitiesStore\n\t */\n\tentities$: Observable;\n\tentities: EntityInterface[];\n\n\t/**\n\t * constructor - The function which is called when the class is instantiated\n\t *\n\t *  @param  {type} private title: Service to set the HTML title\n\t */\n\tconstructor(\n\t\tprivate readonly replayer: EventReplayer,\n\t\tprivate readonly store: Store,\n\t\tprivate readonly title: Title,\n\t) {\n\t\tsuper();\n\n\t\tthis.entities$ = this.store.pipe(\n\t\t\tselect(entitiesSelectors.selectAllEntities),\n\t\t);\n\t}\n\n\t/**\n\t * Initialize the directive/component after Angular first displays the data-bound properties and sets the directive/component's input properties\n\t * Called once, after the first ngOnChanges()\n\t */\n\tngOnInit(): void {\n\t\tthis.title.setTitle('Homepage / Angular SSR');\n\t\tthis.store.dispatch(Load());\n\n\t\tthis.addSubscription(\n\t\t\tthis.entities$.subscribe((entities) => {\n\t\t\t\tthis.entities = entities;\n\t\t\t\tthis.replayer.replayAll();\n\t\t\t}),\n\t\t);\n\t}\n}\n\n    \n\n    \n        \n\t\n\t\t{{ 'hello' | translate: { value: 'world' } }}\n\t\t{{ 'hello-description' | translate }}\n\t\n\t\n\t\n\t\tNGRX Entity Adapter\n\t\t\n\t\t\t\n\t\t\t\tGuid:\n\t\t\t\t{{ entity.guid }}\n\t\t\t\tCountry ISO:\n\t\t\t\t{{ entity.country }}\n\t\t\t\tCurrency ISO:\n\t\t\t\t{{ entity.currency }}\n\t\t\t\tDateformat:\n\t\t\t\t{{ entity.dateFormat }}\n\t\t\t\tEmail:\n\t\t\t\t{{ entity.email }}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t{{ \\'hello\\' | translate: { value: \\'world\\' } }}\t\t{{ \\'hello-description\\' | translate }}\t\t\t\t\tNGRX Entity Adapter\t\t\t\t\t\t\t\t\tGuid:\t\t\t\t{{ entity.guid }}\t\t\t\tCountry ISO:\t\t\t\t{{ entity.country }}\t\t\t\tCurrency ISO:\t\t\t\t{{ entity.currency }}\t\t\t\tDateformat:\t\t\t\t{{ entity.dateFormat }}\t\t\t\tEmail:\t\t\t\t{{ entity.email }}\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base-component'},{'name': 'ErrorPageComponent', 'selector': ''},{'name': 'HomePageComponent', 'selector': ''}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeRoutingModule.html":{"url":"modules/HomeRoutingModule.html","title":"module - HomeRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/routes/home/home-routing.ts\n        \n\n\n        \n            Description\n        \n        \n            Marks an class as an NgModule so it could be configured\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomePageComponent } from '@pages/home/home-page.component';\n\nconst routes: Routes = [\n\t{\n\t\tcomponent: HomePageComponent,\n\t\tpath: '',\n\t},\n];\n\n/**\n * Marks an class as an NgModule so it could be configured\n */\n@NgModule({\n\texports: [RouterModule],\n\timports: [RouterModule.forChild(routes)],\n})\n/* istanbul ignore next */\nexport class HomeRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LanguageGuard.html":{"url":"guards/LanguageGuard.html","title":"guard - LanguageGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LanguageGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/routes/guards/language-guard.service.ts\n            \n\n                \n                Description\n                \n                \n                    Guard which checks if the given language is permitted as an Route\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/routes/guards/language-guard.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(next: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/routes/guards/language-guard.service.ts:26\n                \n            \n\n\n            \n                \n                    Should the language exist, return true, else return 404\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ActivatedRouteSnapshot\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | UrlTree\n\n                    \n                    \n                        boolean | UrlTree\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n\tActivatedRouteSnapshot,\n\tCanActivate,\n\tRouter,\n\tUrlTree,\n} from '@angular/router';\n\nimport { fallbackLanguage, languages } from '@app/globals';\n\n/**\n * Guard which checks if the given language is permitted as an Route\n */\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class LanguageGuard implements CanActivate {\n\tconstructor(private readonly router: Router) {}\n\n\t/**\n\t * Should the language exist, return true, else return 404\n\t * @param  next ActivatedRouteSnapshot\n\t * @param  routerState RouterStateSnapshot\n\t * @return boolean | UrlTree\n\t */\n\tcanActivate(next: ActivatedRouteSnapshot): boolean | UrlTree {\n\t\tif (languages.includes(next.params.language)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn this.router.parseUrl(`${fallbackLanguage}/404`);\n\t\t}\n\t}\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/local-storage.service.ts\n        \n\n            \n                Description\n            \n            \n                LocalStorageService provides a service to save and gets the Store\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                platformId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSavedState\n                            \n                            \n                                setSavedState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/local-storage.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSavedState\n                        \n                        \n                    \n                \n            \n            \n                \ngetSavedState(localStorageKey: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/local-storage.service.ts:27\n                \n            \n\n\n            \n                \n                    getSavedState retrieves the store from localStorage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    localStorageKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        key of the store\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        JSON for given store Key\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSavedState\n                        \n                        \n                    \n                \n            \n            \n                \nsetSavedState(state: any, localStorageKey: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/local-storage.service.ts:16\n                \n            \n\n\n            \n                \n                    setSavedState stores the store as a localStorage JSON blob\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        current State\n\n                                    \n                                \n                                \n                                    localStorageKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        key of the store\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            platformId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(PLATFORM_ID)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/local-storage.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\n/* istanbul ignore next */\n/**\n * LocalStorageService provides a service to save and gets the Store\n */\n@Injectable({ providedIn: 'root' })\nexport class LocalStorageService {\n\tconstructor(@Inject(PLATFORM_ID) public platformId: string) {}\n\n\t/**\n\t * setSavedState stores the store as a localStorage JSON blob\n\t * @param  state           current State\n\t * @param  localStorageKey key of the store\n\t */\n\tsetSavedState(state: any, localStorageKey: string): void {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tsessionStorage.setItem(localStorageKey, JSON.stringify(state));\n\t\t}\n\t}\n\n\t/**\n\t * getSavedState retrieves the store from localStorage\n\t * @param  localStorageKey key of the store\n\t * @return JSON for given store Key\n\t */\n\tgetSavedState(localStorageKey: string): any {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\treturn JSON.parse(sessionStorage.getItem(localStorageKey));\n\t\t}\n\t\treturn {};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MockActiveStateSnapshot.html":{"url":"interfaces/MockActiveStateSnapshot.html","title":"interface - MockActiveStateSnapshot","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MockActiveStateSnapshot\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/testing/mock-store.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        firstChild\n                                \n                                \n                                            Optional\n                                        params\n                                \n                                \n                                            Optional\n                                        queryParams\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        firstChild\n                                    \n                                \n                                \n                                    \n                                        firstChild:         MockActiveStateSnapshot | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MockActiveStateSnapshot | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The route of the Mocked Router State\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                    \n                                \n                                \n                                    \n                                        params:         Params\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Params\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The params of the Mocked Router State\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queryParams\n                                    \n                                \n                                \n                                    \n                                        queryParams:         Params\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Params\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The params of the Mocked Router State\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Params } from '@angular/router';\n\nexport interface MockActiveStateSnapshot {\n\t/**\n\t * The route of the Mocked Router State\n\t */\n\tfirstChild: MockActiveStateSnapshot | null;\n\t/**\n\t * The params of the Mocked Router State\n\t */\n\tparams?: Params;\n\t/**\n\t * The params of the Mocked Router State\n\t */\n\tqueryParams?: Params;\n}\n\nexport interface MockRouterStateSnapshot {\n\t/**\n\t * The route of the Mocked Router State\n\t */\n\troot: MockActiveStateSnapshot;\n\t/**\n\t * The URL of the Mocked Router State\n\t */\n\turl: string;\n}\n\n/**\n * Clones an object so it can be used inside tests\n * @param  {unknown} state\n */\nexport function cloneState(state: unknown): any {\n\treturn JSON.parse(JSON.stringify(state));\n}\n\n/*\n * Initital state used for the mock store provided by ngrx\n */\nexport const initialState = {\n\tapplicationState: {\n\t\tisPendingRequest: false,\n\t},\n\tentitiesState: {\n\t\tentities: {\n\t\t\t'93dd0fd6-fd8c-4c70-a213-cb76d1ef6eda': {\n\t\t\t\tcountry: 'NL',\n\t\t\t\tcurrency: 'EUR',\n\t\t\t\tdateFormat: 'DD-MM-YYYY',\n\t\t\t\tdeeperObject: {\n\t\t\t\t\tnestedAfterMap: 'content after',\n\t\t\t\t\tnestedBeforeMap: 'content before',\n\t\t\t\t},\n\t\t\t\temail: 'no-reply@domein.nl',\n\t\t\t\tguid: '93dd0fd6-fd8c-4c70-a213-cb76d1ef6eda',\n\t\t\t\tmarkdown:\n\t\t\t\t\t'# Male est natusque femina et iuvenis Procnes\\r\\n## Eram huc inpetus\\r\\nLorem markdownum *et erectus custodes* imago, dantque, locus vocandus candore. Inpius nymphas tu nondum divitior novissima visus pariter peioris; ferrum, de. Haec in eripe cupidine erat; claris Aetne, partu, in haut Idomeneus herbis meorum cum posse. Coniunx lacertis! Ne Oetaeus, et lassant alios circumdata quod convicia Ossa: aesculeae admonita que.\\r\\n## Dum ponendi sistitur saepe triplicesque\\r\\n*De est* servet, animalia spoliis servavique dulce. Formidine posset. **Lato prato** enim animam exit coniugis duabus, in lucum [videoque ecce et](http://thymo-simul.net/neritius-tu) numine. Mihi quoque patruique sollicitis: postquam ab qua parientem, molior in [Delphos verba et](http://www.ingeniis-tangam.io/eloquitur.php) imperat.\\r\\n> Ait flebile. Numine tela lumina, illa, omnes verba! **Aethere posito**, quae\\r\\n> cucurri ita. Manibus tinguamus lustrantem si erat inposita mater, mutilatae\\r\\n> fugiunt egredior, formae piscator nisi adludentibus media vix. Odorant iuvat.',\n\t\t\t},\n\t\t},\n\t\terrorMessage: null,\n\t\tids: ['93dd0fd6-fd8c-4c70-a213-cb76d1ef6eda'],\n\t\tisLoaded: true,\n\t\tisLoading: false,\n\t},\n\tnotifications: {\n\t\tentities: {\n\t\t\t'2': {\n\t\t\t\tbody: 'message test',\n\t\t\t\tid: 2,\n\t\t\t\ttimeStamp: new Date(),\n\t\t\t\ttitle: 'title test',\n\t\t\t\ttype: 'success',\n\t\t\t},\n\t\t},\n\t\tids: [2],\n\t},\n\trouterState: {\n\t\tstate: {\n\t\t\tparams: {\n\t\t\t\tlanguage: 'nl',\n\t\t\t},\n\t\t\tqueryParams: {\n\t\t\t\tq: 'nothing',\n\t\t\t},\n\t\t\turl: 'nl',\n\t\t},\n\t},\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MockRouterStateSnapshot.html":{"url":"interfaces/MockRouterStateSnapshot.html","title":"interface - MockRouterStateSnapshot","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MockRouterStateSnapshot\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/testing/mock-store.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        root\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        root\n                                    \n                                \n                                \n                                    \n                                        root:         MockActiveStateSnapshot\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MockActiveStateSnapshot\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The route of the Mocked Router State\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL of the Mocked Router State\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Params } from '@angular/router';\n\nexport interface MockActiveStateSnapshot {\n\t/**\n\t * The route of the Mocked Router State\n\t */\n\tfirstChild: MockActiveStateSnapshot | null;\n\t/**\n\t * The params of the Mocked Router State\n\t */\n\tparams?: Params;\n\t/**\n\t * The params of the Mocked Router State\n\t */\n\tqueryParams?: Params;\n}\n\nexport interface MockRouterStateSnapshot {\n\t/**\n\t * The route of the Mocked Router State\n\t */\n\troot: MockActiveStateSnapshot;\n\t/**\n\t * The URL of the Mocked Router State\n\t */\n\turl: string;\n}\n\n/**\n * Clones an object so it can be used inside tests\n * @param  {unknown} state\n */\nexport function cloneState(state: unknown): any {\n\treturn JSON.parse(JSON.stringify(state));\n}\n\n/*\n * Initital state used for the mock store provided by ngrx\n */\nexport const initialState = {\n\tapplicationState: {\n\t\tisPendingRequest: false,\n\t},\n\tentitiesState: {\n\t\tentities: {\n\t\t\t'93dd0fd6-fd8c-4c70-a213-cb76d1ef6eda': {\n\t\t\t\tcountry: 'NL',\n\t\t\t\tcurrency: 'EUR',\n\t\t\t\tdateFormat: 'DD-MM-YYYY',\n\t\t\t\tdeeperObject: {\n\t\t\t\t\tnestedAfterMap: 'content after',\n\t\t\t\t\tnestedBeforeMap: 'content before',\n\t\t\t\t},\n\t\t\t\temail: 'no-reply@domein.nl',\n\t\t\t\tguid: '93dd0fd6-fd8c-4c70-a213-cb76d1ef6eda',\n\t\t\t\tmarkdown:\n\t\t\t\t\t'# Male est natusque femina et iuvenis Procnes\\r\\n## Eram huc inpetus\\r\\nLorem markdownum *et erectus custodes* imago, dantque, locus vocandus candore. Inpius nymphas tu nondum divitior novissima visus pariter peioris; ferrum, de. Haec in eripe cupidine erat; claris Aetne, partu, in haut Idomeneus herbis meorum cum posse. Coniunx lacertis! Ne Oetaeus, et lassant alios circumdata quod convicia Ossa: aesculeae admonita que.\\r\\n## Dum ponendi sistitur saepe triplicesque\\r\\n*De est* servet, animalia spoliis servavique dulce. Formidine posset. **Lato prato** enim animam exit coniugis duabus, in lucum [videoque ecce et](http://thymo-simul.net/neritius-tu) numine. Mihi quoque patruique sollicitis: postquam ab qua parientem, molior in [Delphos verba et](http://www.ingeniis-tangam.io/eloquitur.php) imperat.\\r\\n> Ait flebile. Numine tela lumina, illa, omnes verba! **Aethere posito**, quae\\r\\n> cucurri ita. Manibus tinguamus lustrantem si erat inposita mater, mutilatae\\r\\n> fugiunt egredior, formae piscator nisi adludentibus media vix. Odorant iuvat.',\n\t\t\t},\n\t\t},\n\t\terrorMessage: null,\n\t\tids: ['93dd0fd6-fd8c-4c70-a213-cb76d1ef6eda'],\n\t\tisLoaded: true,\n\t\tisLoading: false,\n\t},\n\tnotifications: {\n\t\tentities: {\n\t\t\t'2': {\n\t\t\t\tbody: 'message test',\n\t\t\t\tid: 2,\n\t\t\t\ttimeStamp: new Date(),\n\t\t\t\ttitle: 'title test',\n\t\t\t\ttype: 'success',\n\t\t\t},\n\t\t},\n\t\tids: [2],\n\t},\n\trouterState: {\n\t\tstate: {\n\t\t\tparams: {\n\t\t\t\tlanguage: 'nl',\n\t\t\t},\n\t\t\tqueryParams: {\n\t\t\t\tq: 'nothing',\n\t\t\t},\n\t\t\turl: 'nl',\n\t\t},\n\t},\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificationInterface.html":{"url":"interfaces/NotificationInterface.html","title":"interface - NotificationInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NotificationInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/notifications/notifications.interface.ts\n        \n\n            \n                Description\n            \n            \n                NotificationInterface is the interface representing a notification\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        prettyTimeStamp\n                                \n                                \n                                        timeStamp\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    body of the notification\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    id represents the unique id of the notification\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prettyTimeStamp\n                                    \n                                \n                                \n                                    \n                                        prettyTimeStamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    prettyTimeStamp prettifies the timeStamp\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeStamp\n                                    \n                                \n                                \n                                    \n                                        timeStamp:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    timeStamp of the notification that has been sent\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    title of the notification\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    type of the notification, for example success, warning, danger, info\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface NotificationInterface {\n\t/**\n\t * id represents the unique id of the notification\n\t */\n\tid?: number;\n\t/**\n\t * timeStamp of the notification that has been sent\n\t */\n\ttimeStamp: Date;\n\t/**\n\t * prettyTimeStamp prettifies the timeStamp\n\t */\n\tprettyTimeStamp?: string;\n\t/**\n\t * body of the notification\n\t */\n\tbody: string;\n\t/**\n\t * title of the notification\n\t */\n\ttitle: string;\n\t/**\n\t * type of the notification, for example success, warning, danger, info\n\t */\n\ttype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NotificationsState.html":{"url":"interfaces/NotificationsState.html","title":"interface - NotificationsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NotificationsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/notifications/notifications.reducer.ts\n        \n\n            \n                Description\n            \n            \n                Notification store state\n\n            \n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        entities\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                    \n                                \n                                \n                                    \n                                        entities:     literal type | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type | null\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    entities are all notifications entities for the the store\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { Action, createReducer, on } from '@ngrx/store';\n\nimport * as NotificationActions from './notifications.actions';\nimport { NotificationInterface } from './notifications.interface';\n\n/**\n * Notification store state\n */\nexport interface NotificationsState extends EntityState {\n\t/**\n\t * entities are all notifications entities for the the store\n\t */\n\tentities: { [item: string]: NotificationInterface } | null;\n}\n\nexport const adapter: EntityAdapter =\n\tcreateEntityAdapter();\n\nexport const initialState: NotificationsState = adapter.getInitialState();\n\nconst notificationReducer = createReducer(\n\tinitialState,\n\ton(NotificationActions.loadNotificationsSuccess, (state, action) =>\n\t\tadapter.addMany(action.notifications, { ...state, isLoading: false }),\n\t),\n\ton(NotificationActions.addNotification, (state, action) =>\n\t\tadapter.addOne(action.notification, { ...state, isLoading: false }),\n\t),\n\ton(NotificationActions.clearNotifications, (state) =>\n\t\tadapter.removeAll(state),\n\t),\n);\n\n/**\n * The notification reducer\n * @param  {State|undefined} state\n * @param  {Action} action\n */\nexport function reducer(\n\tstate: NotificationsState | undefined,\n\taction: Action,\n): NotificationsState {\n\treturn notificationReducer(state, action);\n}\n\nexport const { selectIds, selectEntities, selectAll, selectTotal } =\n\tadapter.getSelectors();\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PushNotificationService.html":{"url":"injectables/PushNotificationService.html","title":"injectable - PushNotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PushNotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/push-notifications/push-notifications.service.ts\n        \n\n            \n                Description\n            \n            \n                PushNotificationService provides a service to get push notifications\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadNotifications\n                            \n                            \n                                sendNotification\n                            \n                            \n                                    Public\n                                sendSubscriptionToTheServer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/push-notifications/push-notifications.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadNotifications\n                        \n                        \n                    \n                \n            \n            \n                \nloadNotifications()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/push-notifications/push-notifications.service.ts:33\n                \n            \n\n\n            \n                \n                    loadNotifications makes an API call to get notifications\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        the response of the HTTP GET\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendNotification\n                        \n                        \n                    \n                \n            \n            \n                \nsendNotification(notification: NotificationInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/push-notifications/push-notifications.service.ts:65\n                \n            \n\n\n            \n                \n                    sendNotification makes an API call to send a new notification\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notification\n                                    \n                                                NotificationInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        the response of the HTTP POST\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            sendSubscriptionToTheServer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendSubscriptionToTheServer(subscription: PushSubscription)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/push-notifications/push-notifications.service.ts:20\n                \n            \n\n\n            \n                \n                    sendSubscriptionToTheServer returns an HTTP client POST for push notifications\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    subscription\n                                    \n                                            PushSubscription\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the subscription\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        push notification\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport { NotificationInterface } from '@store/notifications/notifications.interface';\n\n/**\n * PushNotificationService provides a service to get push notifications\n */\n@Injectable()\nexport class PushNotificationService {\n\tconstructor(private readonly http: HttpClient) {}\n\n\t/**\n\t * sendSubscriptionToTheServer returns an HTTP client POST for push notifications\n\t * @param { PushSubscription } subscription the subscription\n\t * @return { Observable } push notification\n\t */\n\tpublic sendSubscriptionToTheServer(\n\t\tsubscription: PushSubscription,\n\t): Observable {\n\t\treturn this.http.post(\n\t\t\t`${environment.notificationServer}subscription`,\n\t\t\tsubscription,\n\t\t);\n\t}\n\n\t/**\n\t * loadNotifications makes an API call to get notifications\n\t * @return the response of the HTTP GET\n\t */\n\tloadNotifications(): Observable {\n\t\treturn this.http.get(`${environment.apiUrl}notifications`, {\n\t\t\t...environment.apiCookies,\n\t\t\tobserve: 'response',\n\t\t});\n\t}\n\n\t/**\n\t * sendNotification makes an API call to send a new notification\n\t * @param { title: string, body: string; type: string } notification - which should be the notification\n\t * @return the response of the HTTP POST\n\t */\n\tsendNotification(notification: NotificationInterface): Observable {\n\t\treturn this.http.post(\n\t\t\t`${environment.apiUrl}notifications`,\n\t\t\t{ ...notification },\n\t\t\t{ ...environment.apiCookies, observe: 'response' },\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouterEffects.html":{"url":"injectables/RouterEffects.html","title":"injectable - RouterEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RouterEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/router/router.effects.ts\n        \n\n            \n                Description\n            \n            \n                RouterEffects class which contains all effects when route effects are triggered\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                navigate$\n                            \n                            \n                                navigateBack$\n                            \n                            \n                                navigateForward$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, router: Router, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/router/router.effects.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigate$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType(routerActions.go),\n\t\t\t\tmap((action: any) => action.payload),\n\t\t\t\ttap(({ path, query: queryParams, extras }) => {\n\t\t\t\t\tthis.router.navigate(path, { queryParams, ...extras });\n\t\t\t\t}),\n\t\t\t),\n\t\t{ dispatch: false, useEffectsErrorHandler: true },\n\t)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/router/router.effects.ts:26\n                            \n                        \n\n                \n                    \n                        navigate Effect of the RouterEffects class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateBack$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType(routerActions.back),\n\t\t\t\ttap(() => this.location.back()),\n\t\t\t),\n\t\t{ dispatch: false, useEffectsErrorHandler: true },\n\t)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/router/router.effects.ts:54\n                            \n                        \n\n                \n                    \n                        navigateBack Effect of the RouterEffects class\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateForward$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType(routerActions.forward),\n\t\t\t\ttap(() => this.location.forward()),\n\t\t\t),\n\t\t{ dispatch: false, useEffectsErrorHandler: true },\n\t)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/store/router/router.effects.ts:66\n                            \n                        \n\n                \n                    \n                        navigateForward Effect of the RouterEffects class\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Location } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { NavigationExtras, Router } from '@angular/router';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport * as routerActions from '@store/router/router.actions';\n\n/**\n * RouterEffects class which contains all effects when route effects are triggered\n * @return [description]\n */\n@Injectable()\nexport class RouterEffects {\n\tconstructor(\n\t\tprivate readonly actions$: Actions,\n\t\tprivate readonly router: Router,\n\t\tprivate readonly location: Location,\n\t) {}\n\n\t/**\n\t * navigate Effect of the RouterEffects class\n\t */\n\tnavigate$: Observable = createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType(routerActions.go),\n\t\t\t\tmap((action: any) => action.payload),\n\t\t\t\ttap(({ path, query: queryParams, extras }) => {\n\t\t\t\t\tthis.router.navigate(path, { queryParams, ...extras });\n\t\t\t\t}),\n\t\t\t),\n\t\t{ dispatch: false, useEffectsErrorHandler: true },\n\t);\n\n\t/**\n\t * navigateBack Effect of the RouterEffects class\n\t */\n\tnavigateBack$: Observable = createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType(routerActions.back),\n\t\t\t\ttap(() => this.location.back()),\n\t\t\t),\n\t\t{ dispatch: false, useEffectsErrorHandler: true },\n\t);\n\n\t/**\n\t * navigateForward Effect of the RouterEffects class\n\t */\n\tnavigateForward$: Observable = createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType(routerActions.forward),\n\t\t\t\ttap(() => this.location.forward()),\n\t\t\t),\n\t\t{ dispatch: false, useEffectsErrorHandler: true },\n\t);\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouterStateUrl.html":{"url":"interfaces/RouterStateUrl.html","title":"interface - RouterStateUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouterStateUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/router/router.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface to define the Router State URL\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        params\n                                \n                                \n                                        queryParams\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                    \n                                \n                                \n                                    \n                                        params:         Params\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Params\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The params of the Router State\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queryParams\n                                    \n                                \n                                \n                                    \n                                        queryParams:         Params\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Params\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The queryParams of the Router State\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL of the Router State\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Params } from '@angular/router';\n\n/**\n * Interface to define the Router State URL\n */\nexport interface RouterStateUrl {\n\t/**\n\t * The URL of the Router State\n\t */\n\turl: string;\n\n\t/**\n\t * The params of the Router State\n\t */\n\tparams: Params;\n\n\t/**\n\t * The queryParams of the Router State\n\t */\n\tqueryParams: Params;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/shared.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Marks an class as an NgModule so it could be configured\n\n        \n\n\n        \n            \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CurrencyPipe } from '@angular/common';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\n/**\n * Marks an class as an NgModule so it could be configured\n */\n@NgModule({\n\tdeclarations: [],\n\texports: [TranslateModule],\n\timports: [RouterModule, TranslateModule.forChild({})],\n\tproviders: [CurrencyPipe],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\n/* istanbul ignore next */\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TranslateUniversalLoader.html":{"url":"classes/TranslateUniversalLoader.html","title":"class - TranslateUniversalLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TranslateUniversalLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ssr/translate.loader.ts\n        \n\n            \n                Description\n            \n            \n                class for SSR translations which implements the TranslateLoader from ngx-translate\n\n            \n\n\n            \n                Implements\n            \n            \n                            TranslateLoader\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getTranslation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prefix: string, suffix: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/ssr/translate.loader.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prefix\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        suffix\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTranslation(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ssr/translate.loader.ts:23\n                \n            \n\n\n            \n                \n                    getTranslation which will provide the given language\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the language code\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TranslateLoader } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\n\nimport * as fs from 'fs';\n\n/* istanbul ignore next */\n/**\n * class for SSR translations which implements the TranslateLoader from ngx-translate\n * @param prefix [description]\n * @param suffix [description]\n */\nexport class TranslateUniversalLoader implements TranslateLoader {\n\tconstructor(\n\t\tprivate readonly prefix: string = 'i18n',\n\t\tprivate readonly suffix: string = '.json',\n\t) {}\n\n\t/**\n\t * getTranslation which will provide the given language\n\t * @param  lang the language code\n\t * @return      Observable\n\t */\n\tpublic getTranslation(lang: string): Observable {\n\t\treturn Observable.create((observer: any) => {\n\t\t\tobserver.next(\n\t\t\t\tJSON.parse(\n\t\t\t\t\tfs.readFileSync(\n\t\t\t\t\t\t`${this.prefix}/${lang}${this.suffix}`,\n\t\t\t\t\t\t'utf8',\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t);\n\t\t\tobserver.complete();\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/UniversalInterceptor.html":{"url":"interceptors/UniversalInterceptor.html","title":"interceptor - UniversalInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  UniversalInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ssr/http.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                AppHttpInterceptor Intercepts all incoming XHR calls and defines the store if a request is pending\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transferState: TransferState)\n                    \n                \n                        \n                            \n                                Defined in src/app/ssr/http.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transferState\n                                                  \n                                                        \n                                                                        TransferState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ssr/http.interceptor.ts:25\n                \n            \n\n\n            \n                \n                    Intercepts HttpRequest or HttpResponse and set the transferState\nto save the status in the store\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n\tHttpHandler,\n\tHttpInterceptor,\n\tHttpRequest,\n\tHttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { makeStateKey, TransferState } from '@angular/platform-browser';\nimport { tap } from 'rxjs/operators';\n\n/* istanbul ignore next */\n/**\n * AppHttpInterceptor Intercepts all incoming XHR calls and defines the store if a request is pending\n */\n@Injectable()\nexport class UniversalInterceptor implements HttpInterceptor {\n\tconstructor(private readonly transferState: TransferState) {}\n\t/* istanbul ignore next */\n\t/**\n\t * Intercepts HttpRequest or HttpResponse and set the transferState\n\t * to save the status in the store\n\t * @param  {HttpRequest} request\n\t * @param  {HttpHandler} next\n\t */\n\tintercept(req: HttpRequest, next: HttpHandler) {\n\t\treturn next.handle(req).pipe(\n\t\t\ttap((event) => {\n\t\t\t\tif (event instanceof HttpResponse) {\n\t\t\t\t\tthis.transferState.set(makeStateKey(req.url), event.body);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\n5.1.1\nBreaking Changes\n\nLighthouse: Lighthouse updated report path\n\nFeatures\n\nAngular: Updated to Angular 12.2.x\nPackages: Updated all dependencies to the latest version of 2021-09-11\n\n5.1.0\nBreaking Changes\n\nLighthouse: Lighthouse updated report path\nCompodoc: revert to 1.1.11 if this error pops up: Error: [BABEL] unknown: Preset /* your preset */ requires a filename to be set when babel is called directly,\n\nFeatures\n\nNGRX: removed dummy store and created an Entity store with a setAll function\nNGRX: added example of map functionality\nAngular: Updated to Angular 12.1.x\nPackages: Updated all dependencies to the latest version of 2021-07-15\n\n5.0.0\nBreaking Changes\n\nTesting: migrate from Karma/jasmine to Jest, faster experience, inline test runners\nTesting: moved from marbles and using testScheduler from rxjs\n\nFeatures\n\nAngular: Updated to Angular 12.x\nSSR: Created new interceptor for transferStateKey management\nPackages: Updated all dependencies to the latest version of 2021-06-17\n\n4.1.0\nBreaking Changes\n\nESLint: migrate from TSlint to ESlint, tslint is deprecated\n\n4.0.0\nFeatures\n\nPackages: Updated all dependencies to the latest version of 2021-02-03\nPackages: Removed deprecated dependency @nguniversal/module-map-ngfactory-loader\nHusky: Upgrade to latest husky with new hooks\nCHROME_BIN: Provide 'chromeVersion' into package json\nTesting: All reports are now provided inside 'reports' folder which will be ignored by .gitignore\n\nBugfix\n\nTravis: Fix the SonarCloud instance, moving from dist trusty to xenial. Java 11 supported\n\nBreaking Changes\n\nNGX-build-plus: removed ngx-build-plus because seems obsolete\n\n3.0.0\nFeatures\n\nAngular: Updated to Angular 10.x\nPackages: Updated all dependencies to the latest version of 2020-10-01\nmockServer: Add Vapid keys, to make it possible for push notifications\nPush notifications: Add store to save all push notifications to\n\n2.1.0\nFeatures\n\nPackages: Updated all dependencies to the latest version of 2020-03-26\nmockServer: Converted mockserver from javascript to Typescript\nmockServer: Updated mockserver to HTTPS/HTTP2\nmockServer: Mockserver gets served from Docker image\nmockServer: Seperated the mockServer with its own package.json\n\nBugfix\n\nTravis: Fix the SonarCloud instance\nHusky: Downgrade Husky because git hooks doesn't seem to work on V4.\n\n2.0.1\nBugfix\n\nUnit Test: Stability on unit test with NGRX effects\n\n2.0.0\nFeatures\n\nAngular: Updated to Angular 9.x\nIVY: IVY enabled by default\n\nBreaking Changes\n\nSSR: New way to use SSR and Prerender, compare the server.ts file with the previous carefully. Also webpack.server.config.js is removed\nCompodoc: Compodoc has its own tsconfig now\nLighthouse: Lighthouse new API needs a API key, and could be added optionally\n\n1.6.0\nFeatures\n\nPreboot: Implemented Preboot and remove flickering between SSG and Angular App\nPackages: Updated all dependencies to the latest version of 2019-10-07\n\n1.5.3\nBugfix\n\nTravis: Integrates SonarCloud in Travis\n\n1.5.2\nBugfix\n\nSonarCloud: removed code smells based on stricter Typescript\n\n1.5.1\nBugfix\n\nSonarCloud: removed code smells\n\n1.5.0\nFeatures\n\nTravis: Introduced Travis CI\nCodecov: Introduced Codecov as a badge\nSonarCloud: Introduced SonarCloud\n\n1.4.0\nFeatures\n\nPackages: Updated all dependencies to the latest version of 2019-08-18\n\n1.3.0\nFeatures\n\nSSR / Prerender Within SSR and Prerender, store actions within OnInit lifecycle will be rendered on the mockServer\nService Updated services with HTTP get handling with correct behaviour for SSR lifecycle\nPackages: Updated all dependencies to the latest version of 2019-08-03\n\nBreaking Changes\n\nPrerender Prerender now works completely different, it uses the SSR config and server to handle each file, see commitHash: 'bd876b5cb040b60d34355f0b41cfc183455b3d52'\n\n1.2.2\nBug fixes\n\nSSR fixed an issue with Angular 8 for server side rendering for DOM rendering\n\n1.2.1\nBug fixes\n\nmockServer fixed mockServer for serving data like json files and API calls\n\n1.2.0\nFeatures\n\nPackages: Updated all dependencies to the latest version of 2019-07-21\nPackages: Added 'package-lock.json' for better understanding of all dependencies\nDevelopment: Update README.md and new command with fix for webdriver issues for E2E\n\nBug fixes\n\nAngular fixed build version for differential loading with ngx-build-plus:browser; es5 vs. es2015\n\n1.1.3\nBug fixes\n\nTesting: remove protractor-image-comparison due not working on Windows and is obsolete\nDevelopment: Update README.md with quickstart for Windows.\n\n1.1.2\nBug fixes\n\nWebpack: fixed extendible webpack for npm run start & npm run build\n\n1.1.1\nBug fixes\n\nE2E: fixed path steps in 'cucumber.conf.js'\nE2E: added @skip tag for example cucumber test\nWPO fixed stats when IVY is disabled\n\n1.1.0\nFeatures\n\nCHANGELOG: a Changelog.md is added\nmockServer: Introduced option to use a mockServer with npm run server:mock\nmockServer: Added mockServer to E2E test\nmockServer: Added mock environment\nhttpInterceptor: Added httpInterceptor to watch all pending XHR calls in applicationState inside NGRX store\nService Worker When a new version is detected by the service worker, show confirmPrompt\n\nBreaking Changes\n\nE2E: renamed './features' to './e2e'\nTesting renamed './src/app/testing/mock-actions.ts' to './src/app/testing/mocks.spec.ts'\n\n1.0.0\n\nInitial Commit (see README.md for all first features)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            createTranslateLoader\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            getMetaReducers\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.server.module.ts\n            \n            function\n            TranslateUniversalService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/base/base.component.ts\n            \n            component\n            BaseComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/globals.ts\n            \n            variable\n            fallbackLanguage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/globals.ts\n            \n            variable\n            languages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/globals.ts\n            \n            variable\n            languagesLabels\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/globals.ts\n            \n            variable\n            languagesRegex\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/helpers/general.helper.ts\n            \n            class\n            GeneralHelper\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/interceptors/http.interceptor.ts\n            \n            interceptor\n            AppHttpInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/pages/error/error-page.component.ts\n            \n            component\n            ErrorPageComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/pages/home/home-page.component.ts\n            \n            component\n            HomePageComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/routes/app-routing.module.ts\n            \n            injectable\n            CustomSerializer\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/routes/effects/google-analytics.effects.ts\n            \n            injectable\n            GoogleAnalyticsEffects\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/routes/guards/language-guard.service.ts\n            \n            guard\n            LanguageGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/routes/static.paths.ts\n            \n            variable\n            ROUTES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/routes/static.paths.ts\n            \n            variable\n            routesWithLanguages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/entities/entities.service.ts\n            \n            injectable\n            EntitiesService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/services/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/services/push-notifications/push-notifications.service.ts\n            \n            injectable\n            PushNotificationService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/ssr/app.interceptor.ts\n            \n            interceptor\n            AppHttpInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/ssr/http.interceptor.ts\n            \n            interceptor\n            UniversalInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/ssr/tokens.ts\n            \n            function\n            getInitialState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/ssr/tokens.ts\n            \n            variable\n            STATE_CB\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ssr/tokens.ts\n            \n            variable\n            window\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/ssr/translate.loader.ts\n            \n            class\n            TranslateUniversalLoader\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/store/application/application.actions.ts\n            \n            variable\n            SetRequestStatus\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/application/application.reducer.ts\n            \n            interface\n            ApplicationState\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/store/application/application.reducer.ts\n            \n            function\n            reducer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/application/application.reducer.ts\n            \n            variable\n            createApplicationReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/application/application.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/application/application.selectors.ts\n            \n            variable\n            selectFeature\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/application/application.selectors.ts\n            \n            variable\n            selectIsMakingRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.actions.ts\n            \n            variable\n            ClearError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.actions.ts\n            \n            variable\n            Fail\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.actions.ts\n            \n            variable\n            Load\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.actions.ts\n            \n            variable\n            LoadSuccess\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.actions.ts\n            \n            variable\n            Map\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.actions.ts\n            \n            variable\n            MapSuccess\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.effects.ts\n            \n            injectable\n            EntitiesEffects\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.interface.ts\n            \n            interface\n            EntityInterface\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.reducer.ts\n            \n            interface\n            EntitiesState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.reducer.ts\n            \n            function\n            reducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.reducer.ts\n            \n            function\n            selectGuid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.reducer.ts\n            \n            variable\n            adapter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.reducer.ts\n            \n            variable\n            entitiesReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.reducer.ts\n            \n            variable\n            reducerToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.reducer.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.selectors.ts\n            \n            variable\n            selectAllEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.selectors.ts\n            \n            variable\n            selectFeature\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.selectors.ts\n            \n            variable\n            selectLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.selectors.ts\n            \n            variable\n            selectStandardEntities\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/entities/entities.selectors.ts\n            \n            variable\n            selectStandardIds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/meta/app.tokens.ts\n            \n            variable\n            LOCAL_STORAGE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/meta/app.tokens.ts\n            \n            variable\n            STORAGE_KEYS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/meta/storage.metareducer.ts\n            \n            function\n            storageMetaReducer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/meta/storage.metareducer.ts\n            \n            variable\n            merge\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/meta/storage.metareducer.ts\n            \n            variable\n            pick\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.actions.ts\n            \n            variable\n            addNotification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.actions.ts\n            \n            variable\n            clearNotifications\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.actions.ts\n            \n            variable\n            loadNotifications\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.actions.ts\n            \n            variable\n            loadNotificationsFail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.actions.ts\n            \n            variable\n            loadNotificationsSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.actions.ts\n            \n            variable\n            sendNotification\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.interface.ts\n            \n            interface\n            NotificationInterface\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.reducer.ts\n            \n            interface\n            NotificationsState\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.reducer.ts\n            \n            function\n            reducer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.reducer.ts\n            \n            variable\n            adapter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.reducer.ts\n            \n            variable\n            notificationReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.reducer.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.selectors.ts\n            \n            variable\n            selectAllNotifications\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/notifications/notifications.selectors.ts\n            \n            variable\n            selectFeature\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/router/router.actions.ts\n            \n            variable\n            back\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/router/router.actions.ts\n            \n            variable\n            forward\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/router/router.actions.ts\n            \n            variable\n            go\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/router/router.effects.ts\n            \n            injectable\n            RouterEffects\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/store/router/router.interface.ts\n            \n            interface\n            RouterStateUrl\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/store/router/router.selectors.ts\n            \n            variable\n            getRouterInfo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/router/router.selectors.ts\n            \n            variable\n            getRouterLanguage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/store/router/router.selectors.ts\n            \n            variable\n            selectReducerState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/testing/mock-store.ts\n            \n            interface\n            MockActiveStateSnapshot\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/testing/mock-store.ts\n            \n            interface\n            MockRouterStateSnapshot\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/testing/mock-store.ts\n            \n            function\n            cloneState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/testing/mock-store.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.mock.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 12.2.5\n        \n            @angular/common : 12.2.5\n        \n            @angular/compiler : 12.2.5\n        \n            @angular/core : 12.2.5\n        \n            @angular/forms : 12.2.5\n        \n            @angular/platform-browser : 12.2.5\n        \n            @angular/platform-browser-dynamic : 12.2.5\n        \n            @angular/platform-server : 12.2.5\n        \n            @angular/router : 12.2.5\n        \n            @angular/service-worker : 12.2.5\n        \n            @ngrx/effects : 12.4.0\n        \n            @ngrx/entity : 12.4.0\n        \n            @ngrx/router-store : 12.4.0\n        \n            @ngrx/store : 12.4.0\n        \n            @ngrx/store-devtools : 12.4.0\n        \n            @nguniversal/express-engine : 12.1.0\n        \n            @ngx-translate/core : 13.0.0\n        \n            @ngx-translate/http-loader : 6.0.0\n        \n            classlist.js : 1.1.20150312\n        \n            core-js : 3.17.2\n        \n            express : 4.17.1\n        \n            lodash.merge : 4.6.2\n        \n            lodash.pick : 4.4.0\n        \n            ngx-markdown : 12.0.1\n        \n            preboot : 8.0.0\n        \n            rxjs : 7.3.0\n        \n            tslib : 2.3.1\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cloneState   (src/.../mock-store.ts)\n                        \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                        \n                            getInitialState   (src/.../tokens.ts)\n                        \n                        \n                            getMetaReducers   (src/.../app.module.ts)\n                        \n                        \n                            reducer   (src/.../application.reducer.ts)\n                        \n                        \n                            reducer   (src/.../notifications.reducer.ts)\n                        \n                        \n                            reducer   (src/.../entities.reducer.ts)\n                        \n                        \n                            selectGuid   (src/.../entities.reducer.ts)\n                        \n                        \n                            storageMetaReducer   (src/.../storage.metareducer.ts)\n                        \n                        \n                            TranslateUniversalService   (src/.../app.server.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/testing/mock-store.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            cloneState\n                        \n                        \n                    \n                \n            \n            \n                \ncloneState(state)\n                \n            \n\n\n\n\n            \n                \n                    Clones an object so it can be used inside tests\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createTranslateLoader\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http)\n                \n            \n\n\n\n\n            \n                \n                    Custom TranslateService Loader to load the given language\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        HttpClient to 'mock' the call to the assets i18n json file\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TranslateHttpLoader\n\n                    \n                    \n                        JSON\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMetaReducers\n                        \n                        \n                    \n                \n            \n            \n                \ngetMetaReducers(saveKeys, localStorageKey, storageService)\n                \n            \n\n\n\n\n            \n                \n                    factory meta-reducer configuration function\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saveKeys\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    localStorageKey\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    storageService\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MetaReducer[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/ssr/tokens.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getInitialState\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialState()\n                \n            \n\n\n\n\n            \n                \n                    getInitialState will return the initalState from window if defined\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        [description]\n\n                    \n                \n            \n        \n    \n    src/app/store/application/application.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            reducer\n                        \n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n                    The Application reducer, which contain all state differentiates when an action is dispatched\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe initial state\n\n\n                                    \n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe action from actionTypes to perform\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The new state\n\n                    \n                \n            \n        \n    \n    src/app/store/notifications/notifications.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            reducer\n                        \n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n                    The notification reducer\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NotificationsState\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/store/entities/entities.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            reducer\n                        \n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EntitiesState\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectGuid\n                        \n                        \n                    \n                \n            \n            \n                \nselectGuid(entity)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/store/meta/storage.metareducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            storageMetaReducer\n                        \n                        \n                    \n                \n            \n            \n                \nstorageMetaReducer(saveKeys, localStorageKey, storageService)\n                \n            \n\n\n\n\n            \n                \n                    storageMetaReducer is a function which gets and sets the Store to and from localStorage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    saveKeys\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    localStorageKey\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    storageService\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         function\n\n                    \n                    \n                        state\n\n                    \n                \n            \n        \n    \n    src/app/app.server.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            TranslateUniversalService\n                        \n                        \n                    \n                \n            \n            \n                \nTranslateUniversalService()\n                \n            \n\n\n\n\n            \n                \n                    Custom TranslateUniversalService Loader to load the given language\n\n\n                    \n                    \n                    \n                        Returns :         TranslateUniversalLoader\n\n                    \n                    \n                        JSON\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\nBlazing fast advanced Angular Starterkit\nPowerful Starterkit combining all latest advanced Angular features. Strict typescript mode and preventing pushing untested code. Read more for all features.\nFeatures\n\n⭐️ Modern vs. Legacy build (ES5 vs ES2015)\n😍 IVY by default\n⭐️ NGRX store (implemented according ngrx.io)\n😴 Lazy Loading\n⭐️ HttpInterceptor\n⭐️ NGX-Translate (assets/i18n/{locale}.json)\n🚀 SSR (Server Side Rendering)\n🚀 Prerendering (for SEO and static HTML generation)\n😍 PWA (Progressive Web App)\n😍 Service Worker detects new build versions\n🤓 Unit Test (Jest)\n🤓 E2E Test / Reports (Protractor / Cucumber)\n🗃 Documentation Generation (Compodoc)\n🚀 WPO: Google Lighthouse reporter (save to Compodoc additional docs)\n🚀 WPO: Stats for ES5 build and ES2015\n🎯 Git hooks (husky)\n🤩 Ability to Mock data (mockServer) (Docker)\n🎰 WebPush integration (mockServer and PWA)\n\nQuickstart:\n\nMAC: npm run certificate:generate:mac && npm run start:clean\nWindows: remove ssl from serve inside 'angular.json' and npm run start:clean\n\nPerfect score application 🤩\n\nDevelopment server\nnpm run start available at https://localhost:4202/ (Hot reloading enabled)\nnpm run start:mock will use the mock environment, which connects with the mockServer at https://localhost:4000\nBecause we are running localhost on SSL (https), you will need to generate a certificate and key, and place them in a folder called build. Run npm run certificate:generate:mac to create the required certificates and place them in the required folder.\nGit hooks 🎯\nGit hooks are active, which means you only can commit when there are no linting errors, and all unit-tests succeeds. Other commmands can be implemented in the package.json with husky.\nWhen using nvm, the default node should be > 10. nvm alias stable default\nBuild\n\nnpm run build - normal production build\nnpm run build:gzip - production build with files already gzipped\nnpm run prerender:build - npm run build:gzip with prerendering all routes\nnpm run ssr:build- production build with Server Side Rendering\n\nIvy Build 😍\nIvy is set to true by default and works with SSR / Prerendering\nServer Side Rendering (SSR) 😍\nThis project comes with built-in SSR functionality. The effect of SSR will be valuable on larger projects or slower internet connections, run Google Audit with slow network to see the difference.\n\nFor Serving - npm run start:ssr\nFor Building - npm run ssr:build\n\nPrerendering Angular 😍😍😍\n\nFor Serving - npm run start:prerender\nFor Building - npm run prerender:build\n\nTesting\n\nnpm run lint - Linting application\nnpm run test - Unit test Watcher (only runs tests for changed files)\nnpm run test-all - Unit test Watcher (runs all tests)\nnpm run test:ci - Unit test single Run\nnpm run test:e2e - End to End test with Protractor and reports with Cucumber\n\nRunning unit tests with Jest 🤓\nRun npm run test to execute the unit tests via Jest. This script will be run as a watcher and only runs tests for changed files. Most effective to run this alongside npm run start while developing.\nRun test-all to execute a all unit tests when a file change.\nRun test:ci to execute a single run for the Unit test. Best usecases are for pre-commit checks and in pipeline scripts.\nBoth scripts will provide a Code Coverage file, which can be found in './reports/coverage'\nRunning E2E tests with Protractor and Cucumber 🤓\nRun npm run test:e2e to execute the E2E protractor tests. Tests can be found within ./e2e all written in Cucumber style.\nThis test will provide an report which will be shown at the end of all tests. It can also be found in ./reports/e2e/report. When tests fails, there will be a screenshot attached to the scenario where the test has failed.\nKnown issue(s) 💊\nWhen npm run test:e2e fails to compile as of webdriver issues, run npm run test:e2e:fix-webdriver to fix this compile error and try again.\nDocumentation 🗃\n\nnpm run doc:full - create documentation with compodoc\nUnit test coverage\nE2E reports\nWPO reports\n\n\n\nsample can be fount at './documentation/index.html'\nWebsite Performance Optimization 🚀\n\nnpm run wpo:stats to get a clear view of all dependencies and their dependencies for your project.\nnpm run wpo:lighthouse to get a lighthouse score for your current project. (change the URL in ci/fetchLighthouse.js).\n\nMock data (MockServer) 🤩\nAs of version 1.1.0 it is possible to setup a mockServer with npm run server:mock. Port will be https://localhost:4000 and the different status can be set at https://localhost:4000/mocking. All data can be setup in './mockServer'. Examples of API, JSON and images are added.\nAs of version 2.1.0 the mockServer is running through Docker and runs with HTTPS/HTTP2\nWeb push\nDo a POST call to https://localhost:4000/notification to create a mocked push notification.\nBest can be tested after npm run build && npm run start:dist. The application will then be available at https://localhost:8081\nNOTE: for the mockserver to work for this production build use npm run server:mock:prod\nexample sites:\n\nIVY build - https://angular.rickvandermeij.nl\nPrerendering - https://angular-prerender.rickvandermeij.nl\nServer Side Rendering - npm run start:ssr\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Rick van der Meij\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_providers\n\n\n\ncluster_ErrorModule\n\n\n\ncluster_ErrorModule_declarations\n\n\n\ncluster_ErrorModule_imports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_HomeModule_imports\n\n\n\ncluster_HomeModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\nAppModule -->\n\nErrorModule->AppModule\n\n\n\n\n\nAppHttpInterceptor\n\nAppHttpInterceptor\n\nAppModule -->\n\nAppHttpInterceptor->AppModule\n\n\n\n\n\nPushNotificationService\n\nPushNotificationService\n\nAppModule -->\n\nPushNotificationService->AppModule\n\n\n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\nUniversalInterceptor\n\nUniversalInterceptor\n\nAppServerModule -->\n\nUniversalInterceptor->AppServerModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nErrorModule -->\n\nErrorPageComponent->ErrorModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nErrorModule -->\n\nSharedModule->ErrorModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nSharedModule->HomeModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nHomeModule -->\n\nHomePageComponent->HomeModule\n\n\n\n\n\nHomeRoutingModule\n\nHomeRoutingModule\n\nHomeModule -->\n\nHomeRoutingModule->HomeModule\n\n\n\n\n\nEntitiesService\n\nEntitiesService\n\nHomeModule -->\n\nEntitiesService->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"unit-test.html":{"url":"unit-test.html","title":"unit-test - unit-test","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n  Unit test coverage\n\n\n\n    \n    \n    \n    \n\n\n\n    \n        \n            File\n            Statements\n            Branches\n            Functions\n            Lines\n        \n    \n    \n        \n            \n                \n                        /Users/rickvandermeij/Sources/angular-starterkit/src/app/interceptors/http.interceptor.ts\n            \n            \n                100 %\n                (11/11)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (3/3)\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                        /Users/rickvandermeij/Sources/angular-starterkit/src/app/pages/home/home-page.component.ts\n            \n            \n                100 %\n                (19/19)\n            \n            \n                100 %\n                (1/1)\n            \n            \n                100 %\n                (3/3)\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                        /Users/rickvandermeij/Sources/angular-starterkit/src/app/services/entities/entities.service.ts\n            \n            \n                100 %\n                (8/8)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (2/2)\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                        /Users/rickvandermeij/Sources/angular-starterkit/src/app/ssr/tokens.ts\n            \n            \n                100 %\n                (5/5)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        /Users/rickvandermeij/Sources/angular-starterkit/src/app/store/application/application.actions.ts\n            \n            \n                100 %\n                (2/2)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                        /Users/rickvandermeij/Sources/angular-starterkit/src/app/store/entities/entities.actions.ts\n            \n            \n                100 %\n                (5/5)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                        /Users/rickvandermeij/Sources/angular-starterkit/src/app/store/entities/entities.effects.ts\n            \n            \n                100 %\n                (16/16)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (5/5)\n            \n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                        /Users/rickvandermeij/Sources/angular-starterkit/src/app/store/entities/entities.selectors.ts\n            \n            \n                100 %\n                (7/7)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (1/1)\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                        /Users/rickvandermeij/Sources/angular-starterkit/src/environments/environment.ts\n            \n            \n                100 %\n                (1/1)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (0/0)\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            adapter   (src/.../notifications.reducer.ts)\n                        \n                        \n                            adapter   (src/.../entities.reducer.ts)\n                        \n                        \n                            addNotification   (src/.../notifications.actions.ts)\n                        \n                        \n                            back   (src/.../router.actions.ts)\n                        \n                        \n                            ClearError   (src/.../entities.actions.ts)\n                        \n                        \n                            clearNotifications   (src/.../notifications.actions.ts)\n                        \n                        \n                            createApplicationReducer   (src/.../application.reducer.ts)\n                        \n                        \n                            entitiesReducer   (src/.../entities.reducer.ts)\n                        \n                        \n                            environment   (src/.../environment.mock.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            Fail   (src/.../entities.actions.ts)\n                        \n                        \n                            fallbackLanguage   (src/.../globals.ts)\n                        \n                        \n                            forward   (src/.../router.actions.ts)\n                        \n                        \n                            getRouterInfo   (src/.../router.selectors.ts)\n                        \n                        \n                            getRouterLanguage   (src/.../router.selectors.ts)\n                        \n                        \n                            go   (src/.../router.actions.ts)\n                        \n                        \n                            initialState   (src/.../mock-store.ts)\n                        \n                        \n                            initialState   (src/.../application.reducer.ts)\n                        \n                        \n                            initialState   (src/.../notifications.reducer.ts)\n                        \n                        \n                            initialState   (src/.../entities.reducer.ts)\n                        \n                        \n                            languages   (src/.../globals.ts)\n                        \n                        \n                            languagesLabels   (src/.../globals.ts)\n                        \n                        \n                            languagesRegex   (src/.../globals.ts)\n                        \n                        \n                            Load   (src/.../entities.actions.ts)\n                        \n                        \n                            loadNotifications   (src/.../notifications.actions.ts)\n                        \n                        \n                            loadNotificationsFail   (src/.../notifications.actions.ts)\n                        \n                        \n                            loadNotificationsSuccess   (src/.../notifications.actions.ts)\n                        \n                        \n                            LoadSuccess   (src/.../entities.actions.ts)\n                        \n                        \n                            LOCAL_STORAGE_KEY   (src/.../app.tokens.ts)\n                        \n                        \n                            Map   (src/.../entities.actions.ts)\n                        \n                        \n                            MapSuccess   (src/.../entities.actions.ts)\n                        \n                        \n                            merge   (src/.../storage.metareducer.ts)\n                        \n                        \n                            notificationReducer   (src/.../notifications.reducer.ts)\n                        \n                        \n                            pick   (src/.../storage.metareducer.ts)\n                        \n                        \n                            reducerToken   (src/.../entities.reducer.ts)\n                        \n                        \n                            ROUTES   (src/.../static.paths.ts)\n                        \n                        \n                            routesWithLanguages   (src/.../static.paths.ts)\n                        \n                        \n                            selectAllEntities   (src/.../entities.selectors.ts)\n                        \n                        \n                            selectAllNotifications   (src/.../notifications.selectors.ts)\n                        \n                        \n                            selectFeature   (src/.../application.selectors.ts)\n                        \n                        \n                            selectFeature   (src/.../notifications.selectors.ts)\n                        \n                        \n                            selectFeature   (src/.../entities.selectors.ts)\n                        \n                        \n                            selectIsMakingRequest   (src/.../application.selectors.ts)\n                        \n                        \n                            selectLoading   (src/.../entities.selectors.ts)\n                        \n                        \n                            selectReducerState   (src/.../router.selectors.ts)\n                        \n                        \n                            selectStandardEntities   (src/.../entities.selectors.ts)\n                        \n                        \n                            selectStandardIds   (src/.../entities.selectors.ts)\n                        \n                        \n                            sendNotification   (src/.../notifications.actions.ts)\n                        \n                        \n                            SetRequestStatus   (src/.../application.actions.ts)\n                        \n                        \n                            STATE_CB   (src/.../tokens.ts)\n                        \n                        \n                            STORAGE_KEYS   (src/.../app.tokens.ts)\n                        \n                        \n                            window   (src/.../tokens.ts)\n                        \n                        \n                               (src/.../notifications.reducer.ts)\n                        \n                        \n                               (src/.../entities.reducer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/notifications/notifications.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            adapter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EntityAdapter\n\n                        \n                    \n                    \n                        \n                            Default value : createEntityAdapter()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NotificationsState\n\n                        \n                    \n                    \n                        \n                            Default value : adapter.getInitialState()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notificationReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createReducer(\n\tinitialState,\n\ton(NotificationActions.loadNotificationsSuccess, (state, action) =>\n\t\tadapter.addMany(action.notifications, { ...state, isLoading: false }),\n\t),\n\ton(NotificationActions.addNotification, (state, action) =>\n\t\tadapter.addOne(action.notification, { ...state, isLoading: false }),\n\t),\n\ton(NotificationActions.clearNotifications, (state) =>\n\t\tadapter.removeAll(state),\n\t),\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : adapter.getSelectors()\n                        \n                    \n\n\n            \n        \n\n    src/app/store/entities/entities.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            adapter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EntityAdapter\n\n                        \n                    \n                    \n                        \n                            Default value : createEntityAdapter({\n\t\tselectId: selectGuid,\n\t})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entitiesReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createReducer(\n\tinitialState,\n\ton(actions.Load, actions.Map, (state) => ({\n\t\t...state,\n\t\terror: null,\n\t\tisLoading: true,\n\t})),\n\ton(actions.LoadSuccess, (state, action) => {\n\t\treturn adapter.setAll(action.entities, {\n\t\t\t...state,\n\t\t\tselectedEntity: null,\n\t\t});\n\t}),\n\t/*\n\t *\tNOTE: MapSuccess wont use the EntityMap functionality, due to the lack of testing in effects\n\t */\n\ton(actions.MapSuccess, (state, { entities }) => {\n\t\tconst mappedEntities = [];\n\t\tentities.forEach((entity) => {\n\t\t\tconst currentEntity = state.entities[entity.guid];\n\t\t\tif (currentEntity) {\n\t\t\t\tmappedEntities.push({\n\t\t\t\t\t...currentEntity,\n\t\t\t\t\tdeeperObject: {\n\t\t\t\t\t\t...entity.deeperObject,\n\t\t\t\t\t\t...currentEntity.deeperObject,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tmappedEntities.push(entity);\n\t\t\t}\n\t\t});\n\n\t\treturn adapter.upsertMany(mappedEntities, {\n\t\t\t...state,\n\t\t\tisLoading: false,\n\t\t});\n\t}),\n\ton(actions.Fail, (state, { errorMessage }) => ({\n\t\t...state,\n\t\terrorMessage,\n\t\tisLoading: false,\n\t})),\n\ton(actions.ClearError, (state) => ({\n\t\t...state,\n\t\terrorMessage: null,\n\t})),\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EntitiesState\n\n                        \n                    \n                    \n                        \n                            Default value : adapter.getInitialState({\n\terrorMessage: null,\n\tisLoading: false,\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducerToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken\n>('dealsState')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : adapter.getSelectors()\n                        \n                    \n\n\n            \n        \n\n    src/app/store/notifications/notifications.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            addNotification\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n\t'[Notifications] Add Notification',\n\tprops(),\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearNotifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n\t'[Notifications] Clear Notifications',\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadNotifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n\t'[Notifications] Load Notifications',\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadNotificationsFail\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n\t'[Notifications] Load Notifications Fail',\n\tprops(),\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadNotificationsSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n\t'[Notifications] Load Notifications Success',\n\tprops(),\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendNotification\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n\t'[Notifications] Send Notification',\n\tprops(),\n)\n                        \n                    \n\n\n            \n        \n\n    src/app/store/router/router.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            back\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction('[Router] Back')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            forward\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction('[Router] Forward')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            go\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n\t'[Router] Go',\n\tprops(),\n)\n                        \n                    \n\n\n            \n        \n\n    src/app/store/entities/entities.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ClearError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction('[ENTITIES] CLEAR ERROR')\n                        \n                    \n\n                \n                    \n                        ClearError Action will be used for NGRX Action emitter, when the error needs to be cleared\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Fail\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n\t'[ENTITIES] FAIL',\n\tprops(),\n)\n                        \n                    \n\n                \n                    \n                        Fail Action will be used for NGRX Action emitter, when the Entities info is failed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Load\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction('[ENTITIES] LOAD')\n                        \n                    \n\n                \n                    \n                        Load Action will be used for NGRX Action emitter, when the Entities info Load Action is being called\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LoadSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n\t'[ENTITIES] LOAD SUCCESS',\n\tprops(),\n)\n                        \n                    \n\n                \n                    \n                        LoadSuccess Action will be used for NGRX Action emitter, when the Entities info is succesfull\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Map\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction('[ENTITIES] MAP')\n                        \n                    \n\n                \n                    \n                        Load Action will be used for NGRX Action emitter, when the Entities info Load Action is being called\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MapSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n\t'[ENTITIES] MAP SUCCESS',\n\tprops(),\n)\n                        \n                    \n\n                \n                    \n                        MapSuccess Action will be used for NGRX Action emitter, when the Entities info is mapped succesfull\nNOTE: MapSuccess wont use the EntityMap functionality, due to the lack of testing in effects\n\n                    \n                \n\n            \n        \n\n    src/app/store/application/application.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createApplicationReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createReducer(\n\tinitialState,\n\ton(applicationActions.SetRequestStatus, (state, action) => ({\n\t\t...state,\n\t\tisPendingRequest: action.isPendingRequest,\n\t})),\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApplicationState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tisPendingRequest: false,\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.mock.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\t/**\n\t * VAPID_PUBLIC is the vapid public key\n\t */\n\tVAPID_PUBLIC:\n\t\t'BEgAWMdgbjHjFJp6i7hCKrbkXzSnRixZKRHLiruZb7hhopEdgvWeUftsjleOVUZEvjhCWHyoeoGsaO3-uH61qYk',\n\t/**\n\t * apiCookies will be used to test mocking request\n\t */\n\tapiCookies: { withCredentials: true },\n\t/**\n\t * apiUrl will return the API url for selected enviroment\n\t */\n\tapiUrl: `https://localhost:4000/api/`,\n\t/**\n\t * assetsRoot provides the start of the URI for assets\n\t */\n\tassetsRoot: 'https://localhost:4000/assets/',\n\t/**\n\t * notificationServer will return the notificationServer url for selected enviroment\n\t */\n\tnotificationServer: `https://localhost:4000/v1/`,\n\t/**\n\t * Boolean to declare if the environment is in production mode\n\t */\n\tproduction: false,\n\n\t/**\n\t * Integer of the version which is defined in the Package.json\n\t */\n\tversion: require('../../package.json').version,\n}\n                        \n                    \n\n                \n                    \n                        The environment Object\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\t/**\n\t * VAPID_PUBLIC is the vapid public key\n\t */\n\tVAPID_PUBLIC:\n\t\t'BEgAWMdgbjHjFJp6i7hCKrbkXzSnRixZKRHLiruZb7hhopEdgvWeUftsjleOVUZEvjhCWHyoeoGsaO3-uH61qYk',\n\t/**\n\t * apiCookies will be used to test mocking request\n\t */\n\tapiCookies: {},\n\t/**\n\t * apiUrl will return the API url for selected enviroment\n\t */\n\tapiUrl: `https://localhost:4000/api/`,\n\t/**\n\t * assetsRoot provides the start of the URI for assets\n\t */\n\tassetsRoot: 'https://localhost:4000/assets/',\n\t/**\n\t * notificationServer will return the notificationServer url for selected enviroment\n\t */\n\tnotificationServer: `https://localhost:4000/v1/`,\n\t/**\n\t * Boolean to declare if the environment is in production mode\n\t */\n\tproduction: true,\n\n\t/**\n\t * Integer of the version which is defined in the Package.json\n\t */\n\tversion: require('../../package.json').version,\n}\n                        \n                    \n\n                \n                    \n                        The environment Object\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\t/**\n\t * VAPID_PUBLIC is the vapid public key\n\t */\n\tVAPID_PUBLIC:\n\t\t'BEgAWMdgbjHjFJp6i7hCKrbkXzSnRixZKRHLiruZb7hhopEdgvWeUftsjleOVUZEvjhCWHyoeoGsaO3-uH61qYk',\n\t/**\n\t * apiCookies will be used to test mocking request\n\t */\n\tapiCookies: {},\n\t/**\n\t * apiUrl will return the API url for selected enviroment\n\t */\n\tapiUrl: `https://localhost:4000/api/`,\n\t/**\n\t * assetsRoot provides the start of the URI for assets\n\t */\n\tassetsRoot: 'https://localhost:4000/assets/',\n\t/**\n\t * notificationServer will return the notificationServer url for selected enviroment\n\t */\n\tnotificationServer: `https://localhost:4000/v1/`,\n\t/**\n\t * Boolean to declare if the environment is in production mode\n\t */\n\tproduction: false,\n\n\t/**\n\t * Integer of the version which is defined in the Package.json\n\t */\n\tversion: require('../../package.json').version,\n}\n                        \n                    \n\n                \n                    \n                        The environment Object\n\n                    \n                \n\n            \n        \n\n    src/app/globals.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            fallbackLanguage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'en'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            languages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['nl', 'en']\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            languagesLabels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\ten: 'English',\n\tnl: 'Nederlands',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            languagesRegex\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /\\/nl\\/|\\/en\\//\n                        \n                    \n\n\n            \n        \n\n    src/app/store/router/router.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            getRouterInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n\tselectReducerState,\n\t(state) => state && state.state,\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRouterLanguage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n\tgetRouterInfo,\n\t(state) => state && state.params && state.params.language,\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectReducerState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createFeatureSelector>('routerState')\n                        \n                    \n\n\n            \n        \n\n    src/app/testing/mock-store.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tapplicationState: {\n\t\tisPendingRequest: false,\n\t},\n\tentitiesState: {\n\t\tentities: {\n\t\t\t'93dd0fd6-fd8c-4c70-a213-cb76d1ef6eda': {\n\t\t\t\tcountry: 'NL',\n\t\t\t\tcurrency: 'EUR',\n\t\t\t\tdateFormat: 'DD-MM-YYYY',\n\t\t\t\tdeeperObject: {\n\t\t\t\t\tnestedAfterMap: 'content after',\n\t\t\t\t\tnestedBeforeMap: 'content before',\n\t\t\t\t},\n\t\t\t\temail: 'no-reply@domein.nl',\n\t\t\t\tguid: '93dd0fd6-fd8c-4c70-a213-cb76d1ef6eda',\n\t\t\t\tmarkdown:\n\t\t\t\t\t'# Male est natusque femina et iuvenis Procnes\\r\\n## Eram huc inpetus\\r\\nLorem markdownum *et erectus custodes* imago, dantque, locus vocandus candore. Inpius nymphas tu nondum divitior novissima visus pariter peioris; ferrum, de. Haec in eripe cupidine erat; claris Aetne, partu, in haut Idomeneus herbis meorum cum posse. Coniunx lacertis! Ne Oetaeus, et lassant alios circumdata quod convicia Ossa: aesculeae admonita que.\\r\\n## Dum ponendi sistitur saepe triplicesque\\r\\n*De est* servet, animalia spoliis servavique dulce. Formidine posset. **Lato prato** enim animam exit coniugis duabus, in lucum [videoque ecce et](http://thymo-simul.net/neritius-tu) numine. Mihi quoque patruique sollicitis: postquam ab qua parientem, molior in [Delphos verba et](http://www.ingeniis-tangam.io/eloquitur.php) imperat.\\r\\n> Ait flebile. Numine tela lumina, illa, omnes verba! **Aethere posito**, quae\\r\\n> cucurri ita. Manibus tinguamus lustrantem si erat inposita mater, mutilatae\\r\\n> fugiunt egredior, formae piscator nisi adludentibus media vix. Odorant iuvat.',\n\t\t\t},\n\t\t},\n\t\terrorMessage: null,\n\t\tids: ['93dd0fd6-fd8c-4c70-a213-cb76d1ef6eda'],\n\t\tisLoaded: true,\n\t\tisLoading: false,\n\t},\n\tnotifications: {\n\t\tentities: {\n\t\t\t'2': {\n\t\t\t\tbody: 'message test',\n\t\t\t\tid: 2,\n\t\t\t\ttimeStamp: new Date(),\n\t\t\t\ttitle: 'title test',\n\t\t\t\ttype: 'success',\n\t\t\t},\n\t\t},\n\t\tids: [2],\n\t},\n\trouterState: {\n\t\tstate: {\n\t\t\tparams: {\n\t\t\t\tlanguage: 'nl',\n\t\t\t},\n\t\t\tqueryParams: {\n\t\t\t\tq: 'nothing',\n\t\t\t},\n\t\t\turl: 'nl',\n\t\t},\n\t},\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/store/meta/app.tokens.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LOCAL_STORAGE_KEY\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('appStorage')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            STORAGE_KEYS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('StoreKeys')\n                        \n                    \n\n\n            \n        \n\n    src/app/store/meta/storage.metareducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            merge\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('lodash.merge')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pick\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('lodash.pick')\n                        \n                    \n\n\n            \n        \n\n    src/app/routes/static.paths.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ROUTES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : routesWithLanguages as Array\n                        \n                    \n\n                \n                    \n                        Should declare all Route URLs in an Array\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            routesWithLanguages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/store/entities/entities.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectAllEntities\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectFeature, selectAll)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectFeature\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createFeatureSelector('entitiesState')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n\tselectFeature,\n\t(state) => state.isLoading,\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectStandardEntities\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n\tselectFeature,\n\tselectEntities,\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectStandardIds\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectFeature, selectIds)\n                        \n                    \n\n\n            \n        \n\n    src/app/store/notifications/notifications.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectAllNotifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n\tselectFeature,\n\tfromReducer.selectAll,\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectFeature\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createFeatureSelector('notifications')\n                        \n                    \n\n\n            \n        \n\n    src/app/store/application/application.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectFeature\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createFeatureSelector('applicationState')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIsMakingRequest\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n\tselectFeature,\n\t(state) => state.isPendingRequest,\n)\n                        \n                    \n\n\n            \n        \n\n    src/app/store/application/application.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SetRequestStatus\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n\t'[Application] SET REQUEST STATUS',\n\tprops(),\n)\n                        \n                    \n\n                \n                    \n                        SetRequestStatus Action will be used for NGRX Action emitter\n\n                    \n                \n\n            \n        \n\n    src/app/ssr/tokens.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            STATE_CB\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('to provide the state cb')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            window\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/bundle-analytics.html":{"url":"additional-documentation/bundle-analytics.html","title":"additional-page - Bundle Analytics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/e2e-testing-report-(cucumber).html":{"url":"additional-documentation/e2e-testing-report-(cucumber).html","title":"additional-page - E2E Testing Report (Cucumber)","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/lighthouse-mobile-report.html":{"url":"additional-documentation/lighthouse-mobile-report.html","title":"additional-page - Lighthouse Mobile Report","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/lighthouse-desktop-report.html":{"url":"additional-documentation/lighthouse-desktop-report.html","title":"additional-page - Lighthouse Desktop Report","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
